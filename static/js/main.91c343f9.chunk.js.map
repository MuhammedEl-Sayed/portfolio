{"version":3,"sources":["components/Models/placard.gltf","components/Models/Placard.js","components/Models/shelf.gltf","components/Models/Shelf.js","hooks/useScrollY.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Placard","props","useGLTF","model","nodes","materials","useCompoundBody","mass","position","rotation","Math","PI","shapes","type","args","ref","scale","geometry","Cube_1","material","Material","Cube_2","preload","Shelf","viewport","useThree","boxSize","console","log","Scene","height","width","Cube001","Exterior","Cube001_1","Cube001_2","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","cameraPositions","App","bounds","useSpring","y","config","slow","set","index","fn","useCallback","cy","xy","py","previous","move","movement","roll","first","memo","get","newY","clamp","pan","bind","vxvy","useGesture","onWheel","useEffect","domTarget","useScrollY","window","color","angle","penumbra","power","fallback","OrbitControls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91c343f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placard.7cc94612.gltf\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./placard.gltf\";\nimport { useGesture } from \"react-use-gesture\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { useSpring, a } from \"@react-spring/three\"\nimport {useBox, Debug, useCompoundBody} from \"@react-three/cannon\"\nimport * as THREE from \"three\";\n\n\n\nexport default function Placard(props) {\n  \n  const { nodes, materials } = useGLTF(model);\n  const [ref, api] = useCompoundBody(() => ({ mass:1, ...props,position:[2,0,1], rotation:[0,0,-Math.PI/2], shapes:[\n    {type: 'Box', position: [1,-1,0], args:[0.5,3,11], rotation:[0,0,-Math.PI/10]},\n    {type: 'Box', position: [0,0,0], args:[1,1,10]},\n\n  ],}));\n\n // const box= \n/*   const { size, viewport } = useThree()\n  const [spring, set] = useSpring(() => ({ scale: [1, 1, 1], position: [0, 0, 0], config: { friction: 10 } }))\n\n  const aspect = size.width / viewport.width\n  const bind = useGesture({\n    onDrag: ({ offset: [x, y] }) => set({ position: [x / aspect, -y / aspect, 0] }),\n    onMouseUp: ({})\n    onHover: ({ hovering }) => set({ scale: hovering ? [1.2, 1.2, 1.2] : [1, 1, 1] })\n  }){...spring} {...bind()} */\n  return (\n    \n      <group\n        position={[0.79, -10.15, 0]}\n        rotation={[0, -1.55, -1.34]}\n        scale={[0.95, 0.09, 5.98]}\n        ref={ref}\n      >\n        <mesh geometry={nodes.Cube_1.geometry} material={materials.Material} />\n        <mesh\n          geometry={nodes.Cube_2.geometry}\n          material={materials[\"Material.003\"]}\n        />\n      </group>\n\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./shelf.gltf\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\n\n\nexport default function Shelf(props) {\n  const {viewport} = useThree()\n  const boxSize = [5, 1.2,25]\n  const { nodes, materials } = useGLTF(model)\n  console.log(nodes.Scene.geometry)\n  var combinedGeo = [26];\n  var index = 0;\n\n  const [ref] = useCompoundBody(() => ({ mass: 0, ...props, position: [0,-30,0], shapes:[\n    {type: 'Box', position:[0,0.2,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-13.7,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-29.5,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[0,14.4,0], rotation: [0, 0, 0],args: boxSize},\n  ], }))\n\n  return (\n\n      <group ref={ref} position={[0, -30, 0]} scale={[3 ,viewport.height*4,  viewport.width]}   rotation={[0, -1.55, 0]}>\n        <mesh geometry={nodes.Cube001.geometry} material={materials.Exterior} />\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials.Shelf} />\n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.004']} />\n        <mesh geometry={nodes.Cube001_3.geometry} material={materials['Material.001']} />\n        <mesh geometry={nodes.Cube001_4.geometry} material={materials['Material.005']} />\n        <mesh geometry={nodes.Cube001_5.geometry} material={materials['Material.007']} />\n        <mesh geometry={nodes.Cube001_6.geometry} material={materials['Material.006']} />\n        <mesh geometry={nodes.Cube001_7.geometry} material={materials['Material.011']} />\n        <mesh geometry={nodes.Cube001_8.geometry} material={materials['Material.010']} />\n        <mesh geometry={nodes.Cube001_9.geometry} material={materials['Material.009']} />\n        <mesh geometry={nodes.Cube001_10.geometry} material={materials['Material.008']} />\n        <mesh geometry={nodes.Cube001_11.geometry} material={materials['Material.016']} />\n        <mesh geometry={nodes.Cube001_12.geometry} material={materials['Material.015']} />\n        <mesh geometry={nodes.Cube001_13.geometry} material={materials['Material.014']} />\n        <mesh geometry={nodes.Cube001_14.geometry} material={materials['Material.013']} />\n        <mesh geometry={nodes.Cube001_15.geometry} material={materials['Material.021']} />\n        <mesh geometry={nodes.Cube001_16.geometry} material={materials['Material.020']} />\n        <mesh geometry={nodes.Cube001_17.geometry} material={materials['Material.019']} />\n        <mesh geometry={nodes.Cube001_18.geometry} material={materials['Material.018']} />\n        <mesh geometry={nodes.Cube001_19.geometry} material={materials['Material.026']} />\n        <mesh geometry={nodes.Cube001_20.geometry} material={materials['Material.025']} />\n        <mesh geometry={nodes.Cube001_21.geometry} material={materials['Material.024']} />\n        <mesh geometry={nodes.Cube001_22.geometry} material={materials['Material.023']} />\n        <mesh geometry={nodes.Cube001_23.geometry} material={materials['Material.031']} />\n        <mesh geometry={nodes.Cube001_24.geometry} material={materials['Material.030']} />\n        <mesh geometry={nodes.Cube001_25.geometry} material={materials['Material.029']} />\n        <mesh geometry={nodes.Cube001_26.geometry} material={materials['Material.028']} />\n      </group>\n\n  )\n}\n\nuseGLTF.preload(model)\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -28, -41]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n      console.log(\"memo\" + move )\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","import React, { Suspense, useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Placard from \"./components/Models/Placard.js\";\nimport Shelf from \"./components/Models/Shelf.js\";\nimport { Html, Loader, OrbitControls, PerspectiveCamera, Text, TrackballControls, Box } from \"@react-three/drei\";\nimport { ScrollDirectionHookResult, useScrollDirection } from 'react-use-scroll-direction'\nimport { MathUtils } from \"three\";\nimport useScrollY from './hooks/useScrollY'\nimport { a } from \"@react-spring/three\"\nimport { Debug, Physics, useBox, usePlane } from \"@react-three/cannon\"\n\n\nvar cameraPositions = [] as any;\ncameraPositions = [0, -.3, -.6, -.9]\n\nfunction ScrollingCamera(props: any) {\n  const ref = useRef<THREE.Camera>(null);\n  const { isScrollingUp, isScrollingDown } = useScrollDirection()\n  let position = 0;\n  let start = 0;\n  let end = 0;\n  let progress = 0;\n  useFrame(() => {\n\n    start = ref!.current!.position.y;\n    progress += 0.001;\n    if (progress > 1) {\n      progress = 0;\n    }\n    if (isScrollingUp) {\n      if (position === 0) {\n\n        position = 3;\n      }\n      else {\n        position--;\n      }\n\n    }\n    if (isScrollingDown) {\n      if (position === 3) {\n        position = 0;\n      }\n      else {\n        position++;\n      }\n\n    }\n    end = cameraPositions[position];\n    ref!.current!.position.y = MathUtils.lerp(start, end, progress);\n  })\n\n\n\n\n\n  return (\n\n\n\n    <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0, 0, 20]} rotation={[0, 0, 0]} />\n\n\n\n  )\n}\n\nfunction Plane({ props }: any) {\n  const ref = useRef();\n  const [hover, setHover] = useState(false)\n\n  return (\n    <mesh ref={ref} receiveShadow rotation={[0, 0, 0]} position={[0, 0, -5]}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n\n      <planeBufferGeometry attach=\"geometry\" args={[150, 150]} />\n      <meshStandardMaterial attach=\"material\" color='#000000' />\n\n    </mesh>\n  )\n}\nfunction PhyBox(props: any) {\n  const [ref, api] = useBox(() => ({ args: [1, 1, 1], mass: 0.2, ...props }));\n\n  return (\n    <Box\n      args={[1, 1, 1]}\n      ref={ref}\n\n    >\n      <meshNormalMaterial />\n    </Box>\n  );\n}\nfunction PhyPlane({ color, ...props }: any) {\n  const [ref] = usePlane(() => ({ ...props }));\n\n  return (\n    <Plane args={[1000, 1000]} ref={ref} rotation={[0.2, 0.2, 0.2]}>\n      <meshStandardMaterial color={color} />\n    </Plane>\n  );\n}\n/* function TurnLightsOn(color: any) {\n  const ref = useRef();\n  return (\n    <group ref={ref}>\n      <spotLight\n        position={[0, 15, 0]}\n        angle={Math.PI / 3}\n        penumbra={1}\n        color={\"#FFFFFF\"}\n      />\n      <spotLight\n        position={[4, -3, 0]}\n        color={\"#FFFFFF\"}\n        angle={Math.PI / 2}\n        penumbra={1}\n        rotation={[45, 0, 0]}\n        power={4}\n      />\n      <spotLight\n        color={\"#FFFFFF\"}\n        position={[-4, -3, 0]}\n        angle={Math.PI}\n        penumbra={1}\n        rotation={[45, 0, 0]}\n        power={4}\n      />\n    </group>\n  );\n} */\n/* \nfunction IntroText({ props, children }: any) {\n  const [click, setClick] = useState(true);\n  const ref = useRef();\n  return (\n    <>\n\n\n      {click ? (<Text color=\"white\" anchorX={'center'} anchorY='middle' fontSize={2} position={[0, 0, 5]}\n        onClick={(e) => setClick(false)}>\n        Click here\n      </Text>) : <><HtmlContent>\n        <FlexboxContainer>\n          <Wave text=\"Muhammed El-Sayed\" effect=\"verticalFadeIn\" iterations={1} speed={7} />\n          <SubText>  Multi-Media Application Developer</SubText>\n        </FlexboxContainer>\n      </HtmlContent>  <TurnLightsOn /></>}\n    </>\n  )\n} */\n\n/* function HtmlContent({ className, style, children, portal }: any) {\n  const { size } = useThree()\n  return (\n    <Html\n\n      portal={portal}\n      style={{\n        position: 'absolute',\n        top: -size.height / 2,\n        left: -size.width / 2,\n        width: size.width,\n        height: size.height,\n        pointerEvents: 'none'\n\n      }}>\n      <div className={className} style={style}>\n        {children}\n      </div>\n    </Html>\n  )\n}\n */\nfunction App() {\n  const [y]: any = useScrollY([-2400, 0], { domTarget: window })\n//        <a.group position-z={y.to((y: any) => y)}>\n//<ScrollingCamera/>\n//</a.group>\n  return (\n    <>\n\n\n\n      <Canvas >\n\n        <ambientLight />\n        <spotLight\n          color={\"#ffffff\"}\n          position={[0, 0, 8]}\n          angle={Math.PI}\n          penumbra={1}\n          rotation={[0, 0, 0]}\n          power={4}\n        />\n\n        <Physics>\n       \n            <Suspense fallback={null}>\n            <Debug color=\"red\" scale={1.1}>\n              <Placard />\n              </Debug>\n              \n             <Shelf/>\n            \n            </Suspense>\n         \n        </Physics>\n\n        <OrbitControls />\n      </Canvas>\n\n\n\n\n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}