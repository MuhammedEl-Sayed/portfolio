{"version":3,"sources":["components/Models/placard.gltf","components/Models/unityLogo.gltf","components/Models/UnityLogo.js","components/Models/bobble.glb","components/Models/SimpleBox.js","components/Models/Placard.js","components/Models/shelf.gltf","components/Models/hook.glb","components/Models/Hook.js","components/Models/Researchlanyard.glb","components/Models/Blanklanyard.js","components/Models/DSlanyard.glb","components/Models/DSlanyard.js","components/Models/XRLanyard.glb","components/Models/XRlanyard.js","components/Models/Shelf.js","components/Models/hologram.glb","components/Models/smallerLogo.glb","components/Models/SmallerLogo.js","components/Models/Hologram.js","components/Models/Bobble.js","hooks/useScrollY.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useGLTF","preload","model","tempObject","THREE","SimpleBox","forwardRef","props","xx","useThree","size","viewport","aspect","width","useCompoundBody","mass","position","positionInScreen","rotation","rotationInScreen","shapes","colliders","api","useRef","rot","useEffect","subscribe","v","current","currentPosx","currentPosy","bind","useGesture","onDrag","movement","x","y","intial","first","lastOffset","console","log","set","velocity","onPointerUp","wakeUp","useFrame","z","i","count","id","scale","args","updateMatrix","mesh","setMatrixAt","matrix","instanceMatrix","needsUpdate","length","ref","dispose","attach","transparent","opacity","Placard","nodes","materials","box","boxes","type","Math","PI","geometry","Cube_1","material","Material","raycast","meshBounds","Cube_2","Hook","Cylinder001","hook","castShadow","receiveShadow","Lanyard","Cube","Lanyard2","Lanyard3","Shelf","boxSize","height","Cube001","Exterior","Cube001_1","Cube001_2","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","color","intensity","Model","decrease","state","delta","progress","MathUtils","lerp","Swarm","dummy","useMemo","particles","temp","t","random","factor","speed","xFactor","yFactor","zFactor","push","forEach","particle","s","cos","b","sin","Hologram","cube","Sphere","legs","power","distance","angle","Bobble","Sphere003","me","cameraPositions","useStyles","makeStyles","root","bottom","textAlign","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","PerspectiveCamera","makeDefault","fov","App","classes","bounds","useSpring","config","slow","index","fn","useCallback","cy","xy","py","previous","move","roll","memo","get","newY","clamp","pan","vxvy","onWheel","domTarget","useScrollY","window","useState","setstate","colors","shadows","frameloop","penumbra","group","to","fallback","Preload","all","Loader","Button","variant","className","onClick","includes","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.099b59ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placard.7cc94612.gltf\";","export default __webpack_public_path__ + \"static/media/unityLogo.ce3ee7a0.gltf\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport model from \"./unityLogo.gltf\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { MathUtils } from \"three\";\n\nexport default function UnityLogo(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 0.2) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <= -0.2) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.03;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        -1,\n        progress\n      );\n    } else {\n      progress += 0.03;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        1,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/bobble.7a6582ef.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { forwardRef, useRef, useEffect, useLayoutEffect } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport model from \"./bobble.glb\";\r\nimport { useFrame, useThree, instancedMesh } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useGesture, useDrag } from \"react-use-gesture\";\r\n\r\nimport { useSpring, a } from \"@react-spring/three\";\r\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\r\nimport { Box } from \"@react-three/drei\";\r\nconst tempObject = new THREE.Object3D();\r\nexport const SimpleBox = forwardRef((props, xx) => {\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n  const [ref, api] = useCompoundBody(() => ({\r\n    mass: 10,\r\n    ...props,\r\n    position: props.positionInScreen,\r\n    rotation: props.rotationInScreen,\r\n\r\n    shapes: props.colliders,\r\n  }));\r\n  const position = useRef([0, 0, 0]);\r\n  const rot = useRef([0, 0, 0]);\r\n  useEffect(() => {\r\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\r\n    return unsubscribe;\r\n  }, []);\r\n  useEffect(() => {\r\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  let [currentPosx, currentPosy] = [0, 0];\r\n  let [copyX, copyY] = [0, 0];\r\n  const bind = useGesture({\r\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\r\n      console.log(\":asdwa\");\r\n\r\n      if (intial) {\r\n        currentPosx = position.current[0];\r\n        currentPosy = position.current[1];\r\n      }\r\n      copyX = ((x - position.current[0]) / aspect) * 1.2 + currentPosx;\r\n      copyY = ((position.current[1] - y) / aspect) * 1.2 + currentPosy;\r\n      api.mass.set(0);\r\n\r\n      api.position.set(\r\n        ((x - position.current[0]) / aspect) * 1.2 + currentPosx,\r\n        ((position.current[1] - y) / aspect) * 1.2 + currentPosy,\r\n        0\r\n      );\r\n      /*       xx.current.position.x =  ((x - position.current[0]) / aspect) * 1.2 + currentPosx;\r\n      xx.current.position.y =  ((position.current[1] - y) / aspect) * 1.2 + currentPosy; */\r\n      api.velocity.set(0, 0, 0);\r\n    },\r\n\r\n    onPointerUp: ({}) => {\r\n      api.mass.set(1);\r\n      api.wakeUp(false);\r\n    },\r\n  });\r\n  console.log(api)\r\n  useFrame(() => {\r\n    xx.current.position.x = position.current[0];\r\n    xx.current.position.y = position.current[1];\r\n    xx.current.position.z = position.current[2];\r\n    xx.current.rotation.x = rot.current[0];\r\n    xx.current.rotation.y = rot.current[1];\r\n    xx.current.rotation.z = rot.current[2];\r\n    let i = 0;\r\n    for (let x = 0; x < count; x++) {\r\n      const id = i++;\r\n      tempObject.position.set(props.colliders[x].position[0]+xx.current.position.x  , props.colliders[x].position[1]+ xx.current.position.y,props.colliders[x].position[2]+ xx.current.position.z);\r\n      tempObject.rotation.set(xx.current.rotation.x  , xx.current.rotation.y,xx.current.rotation.z);\r\n      tempObject.scale.set(props.colliders[x].args[0], props.colliders[x].args[1],props.colliders[x].args[2])\r\n      \r\n      tempObject.updateMatrix();\r\n      mesh.current.setMatrixAt(id, tempObject.matrix);\r\n\r\n      mesh.current.instanceMatrix.needsUpdate = true;\r\n    }\r\n  });\r\n  var count = props.colliders.length;\r\n  const mesh = useRef();\r\n  return (\r\n    <>\r\n      <group>\r\n        <group ref={xx} {...props}dispose={null}></group>\r\n      </group>\r\n      <instancedMesh ref={mesh}  {...bind()} args={[null, null, count]}>\r\n        <boxBufferGeometry attach=\"geometry\">\r\n        </boxBufferGeometry>\r\n          <meshStandardMaterial transparent={true} opacity={0} attach=\"material\"/>\r\n      </instancedMesh>\r\n     \r\n    </>\r\n  );\r\n});\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, {\n  useRef,\n  useMemo,\n  useState,\n  onPointerUp,\n  useEffect,\n} from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./placard.gltf\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport UnityLogo from \".//UnityLogo\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\n\nexport default function Placard(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n\n  const ref = useRef();\n\n  const box = useRef();\n  useFrame(() => {\n    box.current.position.x =ref.current.position.x;\n    box.current.position.y = ref.current.position.y;\n    box.current.position.z = ref.current.position.z;\n    box.current.rotation.x = -ref.current.rotation.x;\n    box.current.rotation.y = ref.current.rotation.y;\n    box.current.rotation.z = ref.current.rotation.z;\n  });\n  var boxes =[\n    {\n      type: \"Box\",\n      position: [1, -1, 0],\n      args: [0.5, 3, 11],\n      rotation: [0, 0, -Math.PI / 10],\n    },\n    { type: \"Box\", position: [0, 0, 0], args: [1, 1, 10] },\n]\n\n  return (\n    <>\n    <SimpleBox  ref = {ref}rotationInScreen={[0, -Math.PI / 2, -Math.PI / 2.5]} colliders={boxes} positionInScreen={[0, 0, 1]}/>\n\n    <group\n      rotation={[0, -1.55, -1.34]}\n      scale={[0.95, 0.09, 5.98]}\n   \n      ref={box}\n      \n    >\n      <mesh geometry={nodes.Cube_1.geometry} material={materials.Material} raycast={meshBounds}/>\n      <mesh\n        geometry={nodes.Cube_2.geometry}\n        material={materials[\"Material.003\"]}\n        raycast={meshBounds}\n      />\n    </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","export default __webpack_public_path__ + \"static/media/hook.17574861.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./hook.glb\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Hook(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model)\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    rotation: [0, Math.PI, 0],\n    \n    shapes: [\n\n      { type: \"Cylinder\", position: [0, 0,1], args: [0.13, 0.13, 1], rotation:[Math.PI/2,0,0] },\n      { type: \"Cylinder\", position: [0, 0.16,0.3], args: [0.13, 0.13, 0.5], rotation:[-Math.PI/5,0,0] },\n      { type: \"Sphere\", position: [0, 0.55,0.05], args: [0.15, 4, 4], rotation:[-Math.PI/4,0,0] },\n    ],\n  }));\n\n  return (\n    <group ref={ref} {...props} dispose={null} rotation={[0,Math.PI,0]} scale={0.3}>\n      <mesh\n        geometry={nodes.Cylinder001.geometry}\n        material={materials.hook}\n        position={[0, 0.05, 3.46]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.4, 1.5, 0.4]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Researchlanyard.aa445638.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./Researchlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport { SimpleBox } from \"./SimpleBox\";\nexport default function Lanyard(props) {\n  const group = useRef();\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const { nodes, materials } = useGLTF(model);\n\n  const ref = useRef();\n  const box = useRef();\n  useFrame(() => {\n    box.current.position.x = ref.current.position.x;\n    box.current.position.y = ref.current.position.y;\n    box.current.position.z = ref.current.position.z;\n    box.current.rotation.x = -ref.current.rotation.x;\n    box.current.rotation.y = ref.current.rotation.y;\n    box.current.rotation.z = ref.current.rotation.z;\n  });\n  var boxes = [\n    { type: \"Box\", position: [0, -0.8, 0], args: [0.4, 7.2, 5.8] },\n    { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\n    { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\n    { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\n  ];\n\n  return (\n    <>\n   <SimpleBox  ref = {ref}rotationInScreen={[0, Math.PI / 2, 0]} colliders={boxes} positionInScreen={[-8,-15,-1.2]}/>\n\n      <group ref={box} {...props} dispose={null} scale={1}>\n        <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          castShadow\n          receiveShadow\n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/DSlanyard.4f4112cc.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./DSlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nexport default function Lanyard2(props) {\n  const group = useRef();\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const { nodes, materials } = useGLTF(model);\n  const ref = useRef();\n  const box = useRef();\n  useFrame(() => {\n    box.current.position.x = ref.current.position.x;\n    box.current.position.y = ref.current.position.y;\n    box.current.position.z = ref.current.position.z;\n    box.current.rotation.x = -ref.current.rotation.x;\n    box.current.rotation.y = ref.current.rotation.y;\n    box.current.rotation.z = ref.current.rotation.z;\n  });\n  var boxes = [\n    { type: \"Box\", position: [0, -0.8, 0], args: [0.4, 7.2, 5.8] },\n    { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\n    { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\n    { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\n  ];\n\n  return (\n    <>\n   <SimpleBox  ref = {ref}rotationInScreen={[0, Math.PI / 2, 0]} colliders={boxes} positionInScreen={[8,-15,-1.2]}/>\n\n    <group ref={box} {...props}  dispose={null} scale={1}>\n      <mesh\n        geometry={nodes.Cube.geometry}\n        material={nodes.Cube.material}\n        scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </>\n  );\n}\n\nuseGLTF.preload(\"/DSlanyard.glb\");\n","export default __webpack_public_path__ + \"static/media/XRLanyard.5a81e0bf.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./XRLanyard.glb\"\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport {SimpleBox} from './SimpleBox';\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Lanyard3(props) {\n  const group = useRef()\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const ref = useRef();\n  \n  const { nodes, materials } = useGLTF(model)\n  const box = useRef();\n  useFrame(() => {\n    box.current.position.x =ref.current.position.x;\n    box.current.position.y = ref.current.position.y;\n    box.current.position.z = ref.current.position.z;\n    box.current.rotation.x = -ref.current.rotation.x;\n    box.current.rotation.y = ref.current.rotation.y;\n    box.current.rotation.z = ref.current.rotation.z;\n  });\n  var boxes =[{ \n     type: \"Box\", position: [0, -0.8, 0], args: [0.4, 7.2, 5.8] },\n    { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\n    { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\n    { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\n]\n  return(\n    <>\n\n\n   <SimpleBox  ref = {ref}rotationInScreen={[0, Math.PI / 2, 0]} colliders={boxes} positionInScreen={[0, -14, -1]}/>\n\n\n     <group  {...props} dispose={null} position={[0,-13,0]}  ref = {box} scale={1}>\n      <mesh\n     geometry={nodes.Cube.geometry} material={nodes.Cube.material}  raycast={meshBounds}    scale={[0.15, 4.3, 2.9]}\n\n        castShadow\n        receiveShadow\n      />\n    </group>\n\n    \n\n  </>\n  )\n}\n\n\nuseGLTF.preload('/XRlanyard.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./shelf.gltf\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport Hook from \"./Hook\"\nimport Lanyard from './Blanklanyard';\nimport Lanyard2 from './DSlanyard';\nimport Lanyard3 from './XRlanyard';\n\nexport default function Shelf(props) {\n  const {viewport} = useThree()\n  const boxSize = [5, 1.2,25]\n  const { nodes, materials } = useGLTF(model)\n\n\n  const [ref] = useCompoundBody(() => ({ mass: 0, ...props, position: [0,-22,0], rotation:[0,-Math.PI/2,0], shapes:[\n    {type: 'Box', position:[0,0.2,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-13.7,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-29.5,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[0,14.4,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[-2,0,0], rotation: [0, 0, 0],args:[1, 60,30]},\n    {type: 'Box', position:[-2,0,13], rotation: [0, 0, 0],args:[30, 60,1]},\n    {type: 'Box', position:[-2,0,-13], rotation: [0, 0, 0],args:[30, 60,1]},\n  ], }))\n\n  return (\n<>\n      <group ref={ref} position={[0, -30, 0]} scale={[3 ,viewport.height*4,  viewport.width]}   rotation={[0, Math.PI, 0]}>\n      \n        <mesh geometry={nodes.Cube001.geometry} material={materials.Exterior}  receiveShadow />\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials.Shelf}   receiveShadow/>\n         \n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.004']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_3.geometry} material={materials['Material.001']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_4.geometry} material={materials['Material.005']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_5.geometry} material={materials['Material.007']} />\n        <mesh geometry={nodes.Cube001_6.geometry} material={materials['Material.006']} />\n        <mesh geometry={nodes.Cube001_7.geometry} material={materials['Material.011']} />\n        <mesh geometry={nodes.Cube001_8.geometry} material={materials['Material.010']} />\n        <mesh geometry={nodes.Cube001_9.geometry} material={materials['Material.009']} />\n        <mesh geometry={nodes.Cube001_10.geometry} material={materials['Material.008']} />\n        <mesh geometry={nodes.Cube001_11.geometry} material={materials['Material.016']} />\n        <mesh geometry={nodes.Cube001_12.geometry} material={materials['Material.015']} />\n        <mesh geometry={nodes.Cube001_13.geometry} material={materials['Material.014']} />\n        <mesh geometry={nodes.Cube001_14.geometry} material={materials['Material.013']} />\n        <mesh geometry={nodes.Cube001_15.geometry} material={materials['Material.021']} />\n        <mesh geometry={nodes.Cube001_16.geometry} material={materials['Material.020']} />\n        <mesh geometry={nodes.Cube001_17.geometry} material={materials['Material.019']} />\n        <mesh geometry={nodes.Cube001_18.geometry} material={materials['Material.018']} />\n        <mesh geometry={nodes.Cube001_19.geometry} material={materials['Material.026']} />\n        <mesh geometry={nodes.Cube001_20.geometry} material={materials['Material.025']} />\n        <mesh geometry={nodes.Cube001_21.geometry} material={materials['Material.024']} />\n        <mesh geometry={nodes.Cube001_22.geometry} material={materials['Material.023']} />\n        <mesh geometry={nodes.Cube001_23.geometry} material={materials['Material.031']} />\n        <mesh geometry={nodes.Cube001_24.geometry} material={materials['Material.030']} />\n        <mesh geometry={nodes.Cube001_25.geometry} material={materials['Material.029']} />\n        <mesh geometry={nodes.Cube001_26.geometry} material={materials['Material.028']} />\n      </group>\n\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, 6,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -9,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -24,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -38,0]}/>\n    <Hook position={[-8,-11,-0.3]} />\n    <Hook position={[0,-11,-0.3]} />\n    <Hook position={[8,-11,-0.3]} />\n    <Lanyard2  position={[8,-15,-1.2]} />\n    <Lanyard3 position={[0,-15,-1.2]} />\n    <Lanyard position={[-8,-15,-1.2]} />\n\n</>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/hologram.d73e046a.glb\";","export default __webpack_public_path__ + \"static/media/smallerLogo.dd935cb4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef , useEffect} from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./smallerLogo.glb\";\nimport * as THREE from \"three\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 3.7) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <=3) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.0008;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        2,\n        progress\n      );\n    } else {\n      progress += 0.002;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        4,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group>\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n        castShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useMemo } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./hologram.glb\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport Model from \"./SmallerLogo\";\nimport * as THREE from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nfunction Swarm({ count }) {\n  const mesh = useRef();\n  const light = useRef();\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  let newY = 0;\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  // Generate some random positions, speed factors and timings\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -0.5 + Math.random();\n      const yFactor = 0.7 + Math.random();\n      const zFactor = -0.3 + Math.random();\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor });\n    }\n    return temp;\n  }, [count]);\n  // The innards of this hook will run every frame\n  useFrame((state) => {\n    // Makes the light follow the mouse\n\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n\n      const s = Math.cos(t);\n      const b = Math.sin(t) + Math.cos(t * 2) / 25;\n\n      // Update the dummy object\n      dummy.position.set(xFactor, yFactor + b, zFactor);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 3, s * 3, s * 3);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#065b8d\"\n          opacity={0.5}\n          transparent\n        />\n      </instancedMesh>\n    </>\n  );\n}\nexport default function Hologram(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  //-1, -20\n\n  const ref = useRef();\n\n  const box = useRef();\n  useFrame(() => {\n    box.current.position.x =ref.current.position.x;\n    box.current.position.y = ref.current.position.y;\n    box.current.position.z = ref.current.position.z;\n    box.current.rotation.x = -ref.current.rotation.x;\n    box.current.rotation.y = ref.current.rotation.y;\n    box.current.rotation.z = ref.current.rotation.z;\n  });\n  var boxes =[{ type: \"Box\", position: [0, 0, 0], args: [1.2, 0.7, 1.2] }]\n\n  const cube = useRef();\n  useFrame(() => {\n    cube.current.position.x =  box.current.position.x;\n    cube.current.position.y =   box.current.position.y;\n  });\n\n  return (\n    <>\n        <SimpleBox  ref = {ref}rotationInScreen={[0, 0, 0]} colliders={boxes} positionInScreen={[0, -20, 0]}/>\n\n      <group ref={box} {...props} dispose={null}>\n        <mesh geometry={nodes.Sphere.geometry}raycast={meshBounds} material={materials.legs} />\n        <spotLight\n          color={\"#03fcec\"}\n          power={100}\n          distance={10}\n          angle={Math.PI / 6}\n          position={[0, -1.4, 0]}\n          castShadow\n\n        />\n        <Swarm count={10} />\n      </group>\n      <group ref={cube}>\n      <Model  scale={0.3}/>\n      </group>\n  \n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./bobble.glb\"\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Bobble(props) {\n  \n  const [ref, api] = useCompoundBody(() => ({\n    mass: 10,\n    ...props,\n    position: [10, 0, 0],\n    \n    shapes: [\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      \n   \n    ],\n  }));\n  const { nodes, materials } = useGLTF(model)\n  return (\n    <group ref={ref} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Sphere003.geometry}\n        material={materials.me}\n        rotation={[-2.53, -1.46, -2.41]}\n        scale={[0.065, 0.065, 0.04]}\n        raycast={meshBounds}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -28, -41]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","/// <reference types=\"@welldone-software/why-did-you-render\" />\nimport './wdyr'; // <--- first import\nimport React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Placard from \"./components/Models/Placard.js\";\nimport Shelf from \"./components/Models/Shelf.js\";\nimport Hologram from \"./components/Models/Hologram\";\nimport Model from \"./components/Models/SmallerLogo\";\nimport Bobble from \"./components/Models/Bobble\"\nimport { Loader, OrbitControls, PerspectiveCamera, Text, Preload } from \"@react-three/drei\";\nimport { useScrollDirection } from 'react-use-scroll-direction'\nimport { MathUtils } from \"three\";\nimport useScrollY from './hooks/useScrollY'\nimport { a } from \"@react-spring/three\"\nimport { Debug, Physics } from \"@react-three/cannon\"\nimport { Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nvar cameraPositions = [] as any;\ncameraPositions = [0, -.3, -.6, -.9]\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    height: 60,\n    textAlign: 'center'\n  },\n});\n\nfunction ScrollingCamera(props: any) {\n  const ref = useRef<THREE.Camera>(null);\n  const { isScrollingUp, isScrollingDown } = useScrollDirection()\n  let position = 0;\n  let start = 0;\n  let end = 0;\n  let progress = 0;\n  useFrame(() => {\n\n    start = ref!.current!.position.y;\n    progress += 0.001;\n    if (progress > 1) {\n      progress = 0;\n    }\n    if (isScrollingUp) {\n      if (position === 0) {\n\n        position = 3;\n      }\n      else {\n        position--;\n      }\n\n    }\n    if (isScrollingDown) {\n      if (position === 3) {\n        position = 0;\n      }\n      else {\n        position++;\n      }\n\n    }\n    end = cameraPositions[position];\n    ref!.current!.position.y = MathUtils.lerp(start, end, progress);\n  })\n\n\n\n\n\n  return (\n    <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0, 0, 20]} rotation={[0, 0, 0]} />\n  )\n}\n\n\nfunction App() {\n  const classes = useStyles();\n  const [y]: any = useScrollY([-2400, 0], { domTarget: window })\n  //        <a.group position-z={y.to((y: any) => y)}>\n  //<ScrollingCamera/>\n  //</a.group>\n\n\n\n  const [state, setstate] = useState({ color: \"\" })\n  const changeState = () => {\n\n    if (colors.includes(state.color)) {\n      setstate({ color: colors[colors.indexOf(state.color) + 1] })\n    }\n    else {\n      setstate({ color: colors[0] })\n    }\n\n\n  };\n  const colors: any = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\"]\n  return (\n    <>\n\n\n\n      <Canvas shadows frameloop=\"demand\">\n\n        <ambientLight />\n        <spotLight\n          color={\"#ffffff\"}\n          position={[0, 0, 8]}\n          angle={Math.PI}\n          penumbra={1}\n          rotation={[0, 0, 0]}\n          power={6}\n        />\n        <a.group position-y={y.to((y: any) => y)}>\n          <ScrollingCamera />\n        </a.group>\n        <Physics>\n\n          <Suspense fallback={null}>\n\n            <Placard />\n\n\n\n\n            <Bobble />\n            <Debug>\n              <Shelf color={state.color} />\n            </Debug>\n            <Hologram />\n            <Preload all />\n          </Suspense>\n        </Physics>\n\n      </Canvas>\n      <Loader />\n\n      <Button variant=\"contained\" className={classes.root} onClick={changeState}>Change LED Color</Button>\n\n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}