{"version":3,"sources":["components/Models/placard.gltf","components/Models/Placard.js","components/Models/shelf.gltf","components/Models/Shelf.js","hooks/useScrollY.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Placard","props","group","useRef","useGLTF","model","nodes","materials","ref","dispose","position","rotation","scale","geometry","Cube_1","material","Material","Cube_2","preload","Shelf","Cube001","Exterior","Cube001_1","Cube001_2","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","cameraPositions","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","progress","useFrame","current","y","MathUtils","lerp","PerspectiveCamera","makeDefault","fov","Plane","useState","setHover","receiveShadow","onPointerOver","e","onPointerOut","attach","args","color","App","bounds","useSpring","config","slow","set","index","fn","useCallback","cy","xy","py","previous","move","movement","roll","first","memo","get","newY","clamp","console","log","bind","useGesture","onWheel","useEffect","domTarget","useScrollY","window","angle","Math","PI","penumbra","power","to","fallback","Loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fd5fc9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placard.7cc94612.gltf\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./placard.gltf\";\n\nexport default function Placard(props) {\n  const group = useRef();\n  const { nodes, materials } = useGLTF(model);\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group\n        position={[0.79, 1.15, 0]}\n        rotation={[0, -1.55, -1.34]}\n        scale={[0.95, 0.09, 5.98]}\n        \n      >\n        <mesh geometry={nodes.Cube_1.geometry} material={materials.Material} />\n        <mesh\n          geometry={nodes.Cube_2.geometry}\n          material={materials[\"Material.003\"]}\n        />\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./shelf.gltf\";\n\nexport default function Shelf(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model)\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[0, -22, 0]} scale={[6.3, 31.62,14.34]}   rotation={[0, -1.55, 0]}>\n        <mesh geometry={nodes.Cube001.geometry} material={materials.Exterior} />\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials.Shelf} />\n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.004']} />\n        <mesh geometry={nodes.Cube001_3.geometry} material={materials['Material.001']} />\n        <mesh geometry={nodes.Cube001_4.geometry} material={materials['Material.005']} />\n        <mesh geometry={nodes.Cube001_5.geometry} material={materials['Material.007']} />\n        <mesh geometry={nodes.Cube001_6.geometry} material={materials['Material.006']} />\n        <mesh geometry={nodes.Cube001_7.geometry} material={materials['Material.011']} />\n        <mesh geometry={nodes.Cube001_8.geometry} material={materials['Material.010']} />\n        <mesh geometry={nodes.Cube001_9.geometry} material={materials['Material.009']} />\n        <mesh geometry={nodes.Cube001_10.geometry} material={materials['Material.008']} />\n        <mesh geometry={nodes.Cube001_11.geometry} material={materials['Material.016']} />\n        <mesh geometry={nodes.Cube001_12.geometry} material={materials['Material.015']} />\n        <mesh geometry={nodes.Cube001_13.geometry} material={materials['Material.014']} />\n        <mesh geometry={nodes.Cube001_14.geometry} material={materials['Material.013']} />\n        <mesh geometry={nodes.Cube001_15.geometry} material={materials['Material.021']} />\n        <mesh geometry={nodes.Cube001_16.geometry} material={materials['Material.020']} />\n        <mesh geometry={nodes.Cube001_17.geometry} material={materials['Material.019']} />\n        <mesh geometry={nodes.Cube001_18.geometry} material={materials['Material.018']} />\n        <mesh geometry={nodes.Cube001_19.geometry} material={materials['Material.026']} />\n        <mesh geometry={nodes.Cube001_20.geometry} material={materials['Material.025']} />\n        <mesh geometry={nodes.Cube001_21.geometry} material={materials['Material.024']} />\n        <mesh geometry={nodes.Cube001_22.geometry} material={materials['Material.023']} />\n        <mesh geometry={nodes.Cube001_23.geometry} material={materials['Material.031']} />\n        <mesh geometry={nodes.Cube001_24.geometry} material={materials['Material.030']} />\n        <mesh geometry={nodes.Cube001_25.geometry} material={materials['Material.029']} />\n        <mesh geometry={nodes.Cube001_26.geometry} material={materials['Material.028']} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -28, -41]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n      console.log(\"memo\" + index + \" cy\" + cy + \" py\" + py + \" result: \" + cameraPositions[index])\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","import React, { Suspense, useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Placard from \"./components/Models/Placard.js\";\nimport Shelf from \"./components/Models/Shelf.js\";\nimport { Html, Loader, OrbitControls, PerspectiveCamera, Text, TrackballControls } from \"@react-three/drei\";\nimport { ScrollDirectionHookResult, useScrollDirection } from 'react-use-scroll-direction'\nimport { MathUtils } from \"three\";\nimport useScrollY from './hooks/useScrollY'\nimport {a} from \"@react-spring/three\"\n\n\n\nvar cameraPositions = [] as any;\ncameraPositions = [0, -.3, -.6, -.9]\n\nfunction ScrollingCamera(props: any) {\n  const ref = useRef<THREE.Camera>(null);\n  const { isScrollingUp, isScrollingDown } = useScrollDirection()\n  let position = 0;\n  let start = 0;\n  let end = 0;\n  let progress = 0;\n  useFrame(() => {\n   \n    start = ref!.current!.position.y;\n    progress += 0.001;\n    if(progress > 1){\n      progress = 0;\n    }\n    if (isScrollingUp) {\n      if (position === 0) {\n       \n        position = 3;\n      }\n      else {\n        position--;\n      }\n\n    }\n    if (isScrollingDown) {\n      if (position === 3) {\n        position = 0;\n      }\n      else {\n        position++;\n      }\n\n    }\n    end = cameraPositions[position];\n    ref!.current!.position.y = MathUtils.lerp(start, end, progress);\n  })\n\n\n\n\n\n  return (\n    \n\n\n     <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0,0,20]}rotation={[0, 0, 0]} />\n\n     \n\n  )\n}\n\nfunction Plane({ props }: any) {\n  const ref = useRef();\n  const [hover, setHover] = useState(false)\n\n  return (\n    <mesh ref={ref} receiveShadow rotation={[0, 0, 0]} position={[0, 0, -5]}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n\n      <planeBufferGeometry attach=\"geometry\" args={[150, 150]} />\n      <meshStandardMaterial attach=\"material\" color='#000000' />\n\n    </mesh>\n  )\n}\n/* function TurnLightsOn(color: any) {\n  const ref = useRef();\n  return (\n    <group ref={ref}>\n      <spotLight\n        position={[0, 15, 0]}\n        angle={Math.PI / 3}\n        penumbra={1}\n        color={\"#FFFFFF\"}\n      />\n      <spotLight\n        position={[4, -3, 0]}\n        color={\"#FFFFFF\"}\n        angle={Math.PI / 2}\n        penumbra={1}\n        rotation={[45, 0, 0]}\n        power={4}\n      />\n      <spotLight\n        color={\"#FFFFFF\"}\n        position={[-4, -3, 0]}\n        angle={Math.PI}\n        penumbra={1}\n        rotation={[45, 0, 0]}\n        power={4}\n      />\n    </group>\n  );\n} */\n/* \nfunction IntroText({ props, children }: any) {\n  const [click, setClick] = useState(true);\n  const ref = useRef();\n  return (\n    <>\n\n\n      {click ? (<Text color=\"white\" anchorX={'center'} anchorY='middle' fontSize={2} position={[0, 0, 5]}\n        onClick={(e) => setClick(false)}>\n        Click here\n      </Text>) : <><HtmlContent>\n        <FlexboxContainer>\n          <Wave text=\"Muhammed El-Sayed\" effect=\"verticalFadeIn\" iterations={1} speed={7} />\n          <SubText>  Multi-Media Application Developer</SubText>\n        </FlexboxContainer>\n      </HtmlContent>  <TurnLightsOn /></>}\n    </>\n  )\n} */\n\n/* function HtmlContent({ className, style, children, portal }: any) {\n  const { size } = useThree()\n  return (\n    <Html\n\n      portal={portal}\n      style={{\n        position: 'absolute',\n        top: -size.height / 2,\n        left: -size.width / 2,\n        width: size.width,\n        height: size.height,\n        pointerEvents: 'none'\n\n      }}>\n      <div className={className} style={style}>\n        {children}\n      </div>\n    </Html>\n  )\n}\n */\nfunction App() {\n  const [y]: any = useScrollY([-2400, 0], { domTarget: window })\n\n  return (\n    <>\n\n\n\n      <Canvas >\n        <ambientLight />\n        <spotLight\n          color={\"#ffffff\"}\n          position={[0, 0, 8]}\n          angle={Math.PI}\n          penumbra={1}\n          rotation={[0, 0, 0]}\n          power={4}\n        />\n         <a.group position-y={y.to((y: any) => (y))}>\n         <ScrollingCamera />\n         </a.group>\n       \n        <Suspense fallback={null}>\n          <Shelf />\n          <Placard />\n          <Plane />\n\n        </Suspense>\n      </Canvas>\n\n\n      <Loader />\n\n\n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}