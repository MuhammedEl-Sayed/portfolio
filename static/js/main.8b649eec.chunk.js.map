{"version":3,"sources":["components/Models/DSlanyard.glb","components/Models/SimpleBox.js","components/settings/Boxes.js","components/Models/DSlanyard.js","components/Models/Researchlanyard.glb","components/Models/Blanklanyard.js","components/Models/frog.glb","components/Models/Frog.js","components/Models/gitIcon.glb","components/Models/GitIcon.js","components/Models/hologram.glb","components/Models/smallerLogo.glb","components/Models/SmallerLogo.js","components/Models/Hologram.js","components/Models/linkicon.glb","components/Models/Lnicon.js","components/Models/placard.glb","components/Models/Placard.js","components/Models/ship.glb","components/Models/Ship.js","components/Models/trowel.glb","components/Models/Trowel.js","components/Models/XRLanyard.glb","components/Models/XRlanyard.js","components/Models/shelf.gltf","components/Models/hook.glb","components/Models/Hook.js","components/Models/Shelf.js","hooks/useScrollY.js","components/Scene.js","components/HtmlBS/HoverText.js","components/HtmlBS/BoxContent.js","components/Helpers/SceneWrapper.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tempObject","THREE","SimpleGeometry","forwardRef","props","forwarded","useThree","size","viewport","aspect","width","count","colliders","length","dragged","useRef","handleChange","setDrag","useEffect","i","x","id","scale","set","args","position","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","bind","useGesture","onDrag","movement","y","first","lastPos","onDragEnd","ref","positionCol","rotation","rotationCol","attach","transparent","opacity","LanyardBoxes","type","PlacardBoxes","Math","PI","LIcon","GIcon","ShipBoxes","PlainImages","LanyardDS","useGLTF","model","nodes","box","materials","rot","boxes","useCompoundBody","mass","positionOfObj","rotationOfObj","shapes","api","subscribe","v","useState","dragging","setLastPos","useFrame","wakeUp","sleep","copy","newValue","dispose","geometry","Cube","material","castShadow","receiveShadow","raycast","meshBounds","preload","Lanyard","Frog","frog","GitIcon","Curve","LnIcon","Curve001","Placard","Cube001_1","Cube001_2","Text","Ship","Mesh_0_1","M_Catherine","Mesh_0_2","Mesh_0_3","M_WoodCeiling","Mesh_0_4","M_Glass","Mesh_0_5","M_Metal_02","Mesh_0_6","Mesh_0_7","Mesh_0_8","Mesh_0_9","M_ManilaRope","Mesh_0_10","M_Metal_01","Mesh_0_11","Mesh_0_12","Mesh_0_13","M_Wood_01","Mesh_0_14","M_Wood_02","Mesh_0_15","Material","Trowel","Untitled","LanyardXR","Hook","Cylinder001","hook","Shelf","boxSize","height","Cube001","Exterior","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","color","intensity","cameraPositions","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","progress","MathUtils","lerp","PerspectiveCamera","makeDefault","fov","Scene","bounds","useSpring","config","slow","index","fn","useCallback","cy","xy","py","previous","move","roll","memo","get","newY","clamp","pan","vxvy","onWheel","domTarget","useScrollY","window","tcontext","useContext","TextContext","group","to","angle","penumbra","power","fallback","onPointerOver","s","t","className","setText","enable","content","title","onPointerOut","BoxContent","context","React","console","log","text","DefaultText","state","createContext","ContextBridger","ContextBridge","useContextBridge","shadows","frameloop","Loader","Button","variant","SceneWrapper","Provider","value","makeStyles","root","bottom","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b649eec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DSlanyard.4f4112cc.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { forwardRef, useRef, useEffect, useState } from \"react\";\r\nimport {useThree, instancedMesh } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nconst tempObject = new THREE.Object3D();\r\n\r\nexport const SimpleGeometry = forwardRef((props, forwarded) => {\r\n\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n  var count = props.colliders.length;\r\n  let [currentPosx, currentPosy] = [0, 0];\r\n  const mesh = useRef();\r\n\r\n  let dragged = false;\r\n  const handleChange = () => {\r\n    props.setDrag(dragged);\r\n}\r\n  useEffect(() => { \r\n    let i = 0;\r\n    for (let x = 0; x < count; x++) {\r\n      const id = i++;\r\n      \r\n  \r\n      tempObject.scale.set(\r\n        props.colliders[x].args[0],\r\n        props.colliders[x].args[1],\r\n        props.colliders[x].args[2]\r\n      );\r\n      tempObject.position.set(\r\n        props.colliders[x].position[0],\r\n        props.colliders[x].position[1],\r\n        props.colliders[x].position[2]\r\n      );\r\n      tempObject.updateMatrix();\r\n\r\n      forwarded.current.setMatrixAt(id, tempObject.matrix);\r\n\r\n      forwarded.current.instanceMatrix.needsUpdate = true;\r\n    }\r\n  }, []);\r\n  const bind = useGesture({\r\n\r\n    onDrag: ({ movement: [x, y], first: intial}) => {\r\n      dragged= true;\r\n      handleChange()\r\n\r\n\r\n      forwarded.current.position.set(\r\n        ((x - currentPosx) / aspect) * 1.2 + props.lastPos[0],\r\n        ((currentPosy - y) / aspect) * 1.2 + props.lastPos[1],\r\n        0\r\n      );\r\n    \r\n \r\n    },\r\n    onDragEnd: ({}) => {\r\n      dragged= false;\r\n      handleChange()\r\n    }\r\n  });\r\n  \r\n\r\n  return (\r\n  \r\n      <instancedMesh\r\n      ref={forwarded}\r\n        {...bind()}\r\n        position={props.positionCol}\r\n        rotation={props.rotationCol}\r\n        setDrag={handleChange}\r\n        args={[null, null, count]}\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\"></boxBufferGeometry>\r\n        <meshStandardMaterial\r\n          transparent={true}\r\n          opacity={0}\r\n          attach=\"material\"\r\n        />\r\n      </instancedMesh>\r\n\r\n   \r\n \r\n  );\r\n});\r\n","\r\nexport const LanyardBoxes = [{ \r\n    type: \"Box\", position: [0, -0.8, 0], args: [0.3, 7, 5.5] },\r\n     { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\r\n]\r\n\r\nexport const PlacardBoxes = [\r\n    {\r\n      type: \"Box\",\r\n      position: [1, -1, 0],\r\n      args: [0.5, 3, 11],\r\n      rotation: [0, 0, -Math.PI / 10],\r\n    },\r\n    { type: \"Box\", position: [0, 0, 0], args: [1, 1, 10] },\r\n]\r\n\r\nexport const LIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [1,0.2,-1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\nexport const GIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [-1,-.2,1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const ShipBoxes = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [2.3, 2.3,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const PlainImages = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [3, 3,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\n\r\nexport const HologramBoxes = [{ type: \"Box\", position: [0, 0, 0], args: [1.2, 0.7, 1.2] }]","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState, forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./DSlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {LanyardBoxes} from \"../settings/Boxes\"\n\nexport default function LanyardDS(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n      <group ref={ref} {...props}  dispose={null} scale={1}>\n      <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n        scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n        raycast={meshBounds}\n      />\n    </group>\n\n    </>\n  );\n  }\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/Researchlanyard.aa445638.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./Researchlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {LanyardBoxes} from \"../settings/Boxes\"\nexport default function Lanyard(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n      <group  ref={ref} dispose={null} scale={1}>\n        <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          castShadow\n          receiveShadow\n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/frog.756ff6dd.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { PlainImages } from \"../settings/Boxes\";\nimport model from './frog.glb'\n\n\nexport default function Frog(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlainImages;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n    <mesh geometry={nodes.frog.geometry} material={materials.frog} rotation={[Math.PI/2, 0, 0]}position={[0.08, 0, -0.2]} scale={[3,1,3]}/>\n  </group>\n\n    </>\n  );\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/gitIcon.26e7b6f0.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef  } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { GIcon } from \"../settings/Boxes\";\n\nimport model from './gitIcon.glb'\n\n\nexport default function GitIcon(props) {\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = GIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref}  {...props} dispose={null}>\n      <mesh raycast={meshBounds} geometry={nodes.Curve.geometry} material={materials['SVGMat.001']}rotation={[0, Math.PI, 0]} scale={[300.04, 70.11, 300.04]} />\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/hologram.d73e046a.glb\";","export default __webpack_public_path__ + \"static/media/smallerLogo.dd935cb4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef , useEffect} from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./smallerLogo.glb\";\nimport * as THREE from \"three\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 3.7) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <=3) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.0008;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        2,\n        progress\n      );\n    } else {\n      progress += 0.002;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        4,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group>\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n        castShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useMemo, useState, forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./hologram.glb\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport Model from \"./SmallerLogo\";\nimport * as THREE from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {HologramBoxes} from \"../settings/Boxes\"\n\nfunction Swarm({ count }) {\n  const mesh = useRef();\n  const light = useRef();\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  let newY = 0;\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  // Generate some random positions, speed factors and timings\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -0.5 + Math.random();\n      const yFactor = 0.7 + Math.random();\n      const zFactor = -0.3 + Math.random();\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor });\n    }\n    return temp;\n  }, [count]);\n  // The innards of this hook will run every frame\n  useFrame((state) => {\n    // Makes the light follow the mouse\n\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n\n      const s = Math.cos(t);\n      const b = Math.sin(t) + Math.cos(t * 2) / 25;\n\n      // Update the dummy object\n      dummy.position.set(xFactor, yFactor + b, zFactor);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 3, s * 3, s * 3);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#065b8d\"\n          opacity={0.5}\n          transparent\n        />\n      </instancedMesh>\n    </>\n  );\n}\n\nexport default function Hologram(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = HologramBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n <group ref={ref} {...props} dispose={null}>\n        <mesh geometry={nodes.Sphere.geometry}raycast={meshBounds} material={materials.legs} />\n        <spotLight\n          color={\"#03fcec\"}\n          power={100}\n          distance={10}\n          angle={Math.PI / 6}\n  \n          castShadow\n\n        />\n        <Swarm count={10} />\n      </group>\n      <group >\n      <Model  scale={0.3}/>\n      </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/linkicon.5c105a95.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./linkicon.glb\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LIcon } from \"../settings/Boxes\";\n\n\n\nexport default function LnIcon (props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref}{...props}  dispose={null}>\n    <mesh   raycast={meshBounds} geometry={nodes.Curve001.geometry} material={materials['SVGMat.002']} scale={300.24} />\n  </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/placard.cf98b553.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport {SimpleGeometry} from './SimpleBox';\nimport model from \"./placard.glb\";\nimport {PlacardBoxes} from \"../settings/Boxes\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\n\nexport default function Placard(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlacardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <group  scale={[0.95, 0.09, 5.98]}>\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.001']} />\n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.003']} />\n      </group>\n      <mesh\n        geometry={nodes.Text.geometry}\n        material={nodes.Text.material}\n        position={[.2, 0.1, 4.11]}\n        rotation={[Math.PI / 2, Math.PI / 2, -Math.PI / 2]}\n      />\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/ship.685ce8f4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef  } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from './ship.glb'\nimport {useBox, Debug, useTrimesh, useCompoundBody} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { ShipBoxes } from \"../settings/Boxes\";\nimport { SimpleGeometry } from \"./SimpleBox\";\n\n\nexport default function  Ship(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = ShipBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.15}>\n        <mesh geometry={nodes.Mesh_0_1.geometry} material={materials.M_Catherine} />\n        <mesh geometry={nodes.Mesh_0_2.geometry} material={materials['M_Fabric-Sails']} />\n        <mesh geometry={nodes.Mesh_0_3.geometry} material={materials.M_WoodCeiling} />\n        <mesh geometry={nodes.Mesh_0_4.geometry} material={materials.M_Glass} />\n        <mesh geometry={nodes.Mesh_0_5.geometry} material={materials.M_Metal_02} />\n        <mesh geometry={nodes.Mesh_0_6.geometry} material={materials['M_WoodPainted-Red']} />\n        <mesh geometry={nodes.Mesh_0_7.geometry} material={materials['M_WoodPainted-Yellow']} />\n        <mesh geometry={nodes.Mesh_0_8.geometry} material={materials['M_WoodPainted-Black']} />\n        <mesh geometry={nodes.Mesh_0_9.geometry} material={materials.M_ManilaRope} />\n        <mesh geometry={nodes.Mesh_0_10.geometry} material={materials.M_Metal_01} />\n        <mesh geometry={nodes.Mesh_0_11.geometry} material={materials['M_Wood-Floor']} />\n        <mesh geometry={nodes.Mesh_0_12.geometry} material={materials['M_WoodPainted-White']} />\n        <mesh geometry={nodes.Mesh_0_13.geometry} material={materials.M_Wood_01} />\n        <mesh geometry={nodes.Mesh_0_14.geometry} material={materials.M_Wood_02} />\n        <mesh geometry={nodes.Mesh_0_15.geometry} material={materials.Material} />\n      </group>\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/trowel.357f81c8.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { PlainImages } from \"../settings/Boxes\";\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport model from './trowel.glb'\n\n\n\nexport default function Trowel(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlainImages;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <mesh geometry={nodes.Untitled.geometry} material={materials.Untitled} rotation={[Math.PI/2, 0, 0]}scale={[3,1,3]}position={[0.08, 0, -0.2]} />\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/XRLanyard.5a81e0bf.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState,forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./XRLanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LanyardBoxes } from \"../settings/Boxes\";\n\n\nexport default function LanyardXR(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n      <group {...props} dispose={null} ref={ref} scale={1}>\n        <mesh\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          castShadow\n          receiveShadow\n  \n        />\n      </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","export default __webpack_public_path__ + \"static/media/hook.17574861.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./hook.glb\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Hook(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model)\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    rotation: [0, Math.PI, 0],\n    \n    shapes: [\n\n      { type: \"Cylinder\", position: [0, 0,1], args: [0.13, 0.13, 1], rotation:[Math.PI/2,0,0] },\n      { type: \"Cylinder\", position: [0, 0.16,0.3], args: [0.13, 0.13, 0.5], rotation:[-Math.PI/5,0,0] },\n      { type: \"Sphere\", position: [0, 0.55,0.05], args: [0.15, 4, 4], rotation:[-Math.PI/4,0,0] },\n    ],\n  }));\n\n  return (\n    <group ref={ref} {...props} dispose={null} rotation={[0,Math.PI,0]} scale={0.3}>\n      <mesh\n        geometry={nodes.Cylinder001.geometry}\n        material={materials.hook}\n        position={[0, 0.05, 3.46]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.4, 1.5, 0.4]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, useMemo, useEffect, useState } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport model from \"./shelf.gltf\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport {\r\n  useBox,\r\n  Debug,\r\n  useTrimesh,\r\n  useCompoundBody,\r\n  useConvexPolyhedron,\r\n} from \"@react-three/cannon\";\r\nimport Hook from \"./Hook\";\r\nimport * as Models from \"../Helpers/GLBReroute\";\r\nimport state from \"../../hooks/layout\";\r\n//import { MyContext } from \"../../App\";\r\n\r\n\r\n\r\n\r\n/* const initialState : ContextText = {\r\n  text: \"wow\",\r\n  enable: true,\r\n}\r\n */\r\n\r\n\r\nexport default function Shelf(props) {\r\n  const { viewport } = useThree();\r\n  const boxSize = [5, 1.2, 25];\r\n  const { nodes, materials } = useGLTF(model);\r\n\r\n\r\n\r\n\r\n  const [ref] = useCompoundBody(() => ({\r\n    mass: 0,\r\n    ...props,\r\n    position: [0, -22, 0],\r\n    rotation: [0, -Math.PI / 2, 0],\r\n    shapes: [\r\n      {\r\n        type: \"Box\",\r\n        position: [0, 0.2, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [0, -13.7, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [0, -29.5, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [0, 14.4, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [-2, 0, 0],\r\n        rotation: [0, 0, 0],\r\n        args: [1, 60, 30],\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [-2, 0, 13],\r\n        rotation: [0, 0, 0],\r\n        args: [30, 60, 1],\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [-2, 0, -13],\r\n        rotation: [0, 0, 0],\r\n        args: [30, 60, 1],\r\n      },\r\n    ],\r\n  }));\r\n  /*   \r\n            \r\n  */\r\n  return (\r\n    <>\r\n\r\n      <group\r\n        ref={ref}\r\n        position={[0, -30, 0]}\r\n        scale={[3, viewport.height * 4, viewport.width]}\r\n        rotation={[0, Math.PI, 0]}\r\n      >\r\n        <mesh\r\n          geometry={nodes.Cube001.geometry}\r\n          material={materials.Exterior}\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_1.geometry}\r\n          material={materials.Shelf}\r\n          receiveShadow\r\n        />\r\n\r\n        <mesh\r\n          geometry={nodes.Cube001_2.geometry}\r\n          material={materials[\"Material.004\"]}\r\n          castShadow\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_3.geometry}\r\n          material={materials[\"Material.001\"]}\r\n          castShadow\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_4.geometry}\r\n          material={materials[\"Material.005\"]}\r\n          castShadow\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_5.geometry}\r\n          material={materials[\"Material.007\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_6.geometry}\r\n          material={materials[\"Material.006\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_7.geometry}\r\n          material={materials[\"Material.011\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_8.geometry}\r\n          material={materials[\"Material.010\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_9.geometry}\r\n          material={materials[\"Material.009\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_10.geometry}\r\n          material={materials[\"Material.008\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_11.geometry}\r\n          material={materials[\"Material.016\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_12.geometry}\r\n          material={materials[\"Material.015\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_13.geometry}\r\n          material={materials[\"Material.014\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_14.geometry}\r\n          material={materials[\"Material.013\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_15.geometry}\r\n          material={materials[\"Material.021\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_16.geometry}\r\n          material={materials[\"Material.020\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_17.geometry}\r\n          material={materials[\"Material.019\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_18.geometry}\r\n          material={materials[\"Material.018\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_19.geometry}\r\n          material={materials[\"Material.026\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_20.geometry}\r\n          material={materials[\"Material.025\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_21.geometry}\r\n          material={materials[\"Material.024\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_22.geometry}\r\n          material={materials[\"Material.023\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_23.geometry}\r\n          material={materials[\"Material.031\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_24.geometry}\r\n          material={materials[\"Material.030\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_25.geometry}\r\n          material={materials[\"Material.029\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_26.geometry}\r\n          material={materials[\"Material.028\"]}\r\n        />\r\n      </group>\r\n\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={30}\r\n        position={[0, 6, 0]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={30}\r\n        position={[0, -9, 2.5]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={30}\r\n        position={[0, -24, 0]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={30}\r\n        position={[0, -38, 0]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(model);\r\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -30, -44]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","import * as Models from \"./Helpers/GLBReroute\"\r\nimport Hook from \"./Models/Hook\";\r\nimport { useGLTF, PerspectiveCamera } from \"@react-three/drei\";\r\nimport React, { useRef, useContext, useEffect, useState, Suspense } from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { Debug, Physics } from \"@react-three/cannon\"\r\nimport useScrollY from '../hooks/useScrollY'\r\nimport { MathUtils } from \"three\";\r\nimport { useScrollDirection } from 'react-use-scroll-direction'\r\nimport { a } from \"@react-spring/three\"\r\nimport { TextContext, CanvasContext } from \"./Helpers/SceneWrapper\";\r\nimport {introText} from \"./HtmlBS/HoverText\"\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -.3, -.6, -.9]\r\n\r\n\r\n\r\n//TODO Fix shelf button color changer\r\nfunction ScrollingCamera(props) {\r\n    const ref = useRef(null);\r\n    const { isScrollingUp, isScrollingDown } = useScrollDirection()\r\n    let position = 0;\r\n    let start = 0;\r\n    let end = 0;\r\n    let progress = 0;\r\n    useFrame(() => {\r\n\r\n        start = ref.current.position.y;\r\n        progress += 0.001;\r\n        if (progress > 1) {\r\n            progress = 0;\r\n        }\r\n        if (isScrollingUp) {\r\n            if (position === 0) {\r\n\r\n                position = 3;\r\n            }\r\n            else {\r\n                position--;\r\n            }\r\n\r\n        }\r\n        if (isScrollingDown) {\r\n            if (position === 3) {\r\n                position = 0;\r\n            }\r\n            else {\r\n                position++;\r\n            }\r\n\r\n        }\r\n        end = cameraPositions[position];\r\n        ref.current.position.y = MathUtils.lerp(start, end, progress);\r\n    })\r\n\r\n    return (\r\n        <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0, 0, 20]} rotation={[0, 0, 0]} />\r\n    )\r\n}\r\n\r\n/* \r\nState won't change no matter what I try. It is pretty annoying.\r\nUsing a function/const to handle the setText doesn't work.\r\nI'm kinda tired of this. Props maybe? Shit will look pretty bad.\r\nProblem is with context. Not being passed in. useSate by itself works.\r\n*/\r\nexport default function Scene(props) {\r\n    const [y] = useScrollY([-2400, 0], { domTarget: window })\r\n    const [color, setstate] = useState({ color: \"\" })\r\n    const changeState = () => {\r\n\r\n        if (colors.includes(color.color)) {\r\n            setstate({ color: colors[colors.indexOf(color.color) + 1] })\r\n        }\r\n        else {\r\n            setstate({ color: colors[0] })\r\n        }\r\n\r\n\r\n    };\r\n    const colors = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\", \"#ffffff\"]\r\n\r\n\r\n    const tcontext = useContext(TextContext)\r\n\r\n    const handleEnableText=( s, t) => { \r\n           tcontext.setText({enable: true, content: s, title: t})\r\n    }\r\n\r\n    const handleDisableText = () => {\r\n        tcontext.setText({enable: false, ...tcontext.content, ...tcontext.title})\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [tcontext])\r\n\r\n    return (\r\n        <>\r\n        \r\n            <a.group position-y={y.to((y) => y)}>\r\n                <ScrollingCamera />\r\n            </a.group>\r\n\r\n            <ambientLight />\r\n            <spotLight\r\n                color={\"#ffffff\"}\r\n                position={[0, 0, 8]}\r\n                angle={Math.PI}\r\n                penumbra={1}\r\n                rotation={[0, 0, 0]}\r\n                power={6}\r\n            />\r\n            <Physics>\r\n                <Suspense fallback={null}>\r\n                    <Models.Shelf color={color.color} />\r\n                    <Hook position={[-8, -11, -0.3]} />\r\n                    <Hook position={[0, -11, -0.3]} />\r\n                    <Hook position={[8, -11, -0.3]} />\r\n                    <Models.Lanyard\r\n                        positionOfObj={[0, -14, -1]}\r\n                        rotationOfObj={[0, -Math.PI / 2, 0]}\r\n                    />\r\n                    <Models.LanyardDS\r\n                        positionOfObj={[-8, -14, -1]}\r\n                        rotationOfObj={[0, -Math.PI / 2, 0]}\r\n                    />\r\n                    <Models.LanyardXR\r\n                        positionOfObj={[8, -14, -1]}\r\n                        rotationOfObj={[0, -Math.PI / 2, 0]}\r\n                    />\r\n                    <Models.Frog positionOfObj={[9, -30, 1]} />\r\n\r\n                    <Models.GitIcon\r\n                        positionOfObj={[4, -45, 1]}\r\n                        rotationOfObj={[-Math.PI / 2, 0, 0]}\r\n                    />\r\n                    <Models.LnIcon\r\n                        positionOfObj={[-4, -45, 1]}\r\n                        rotationOfObj={[Math.PI / 2, 0, 0]}\r\n                    />\r\n                    <Models.Placard\r\n                        positionOfObj={[0, 0, 1]}\r\n                        rotationOfObj={[Math.PI / 2.3, -Math.PI / 2, 0]}\r\n                        onPointerOver={() => {\r\n                            \r\n                            handleEnableText(introText(),\"Welcome to my portfolio website!\");\r\n\r\n                        }}\r\n                        onPointerOut={() => {\r\n                            \r\n                            handleDisableText();\r\n\r\n                        }}\r\n                    />\r\n                    <Models.Trowel positionOfObj={[0, -30, 1]} />\r\n                    <Models.Ship positionOfObj={[-9, -30, 1]} />\r\n                </Suspense>\r\n            </Physics>\r\n\r\n        </>\r\n    );\r\n}\r\n","export const introText = () => {\r\n   return <span className={`m-auto text-white`}>This entire website was built using JS, React Three Fiber, and the React framekwork. </span>\r\n}","import React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { CanvasContext, TextContext } from \"../Helpers/SceneWrapper\";\r\nexport default function BoxContent(props) {\r\n  const context = React.useContext(TextContext);\r\n  let text;\r\n  useEffect(() => {\r\n    console.log(context)\r\n\r\n  }, [context])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"pointer-events-none\">\r\n        <div className={`h-screen bg-gray-800 bg-opacity-70 w-1/3 right-0 fixed z-50 ${context.text.enable ? \"animate-fade-in\" : \"animate-fade-out\"}`}>\r\n          <div className=\" flex relative items-center z-10 justify-center flex-col h-screen\">\r\n          <span className={`m-auto text-white`}>{context.text.title}</span>\r\n            { context.text.content} \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useContextBridge, Loader } from \"@react-three/drei\";\r\nimport Scene from \"../Scene\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport BoxContent from \"../HtmlBS/BoxContent\";\r\nimport { Button } from \"@material-ui/core\";\r\n/*\r\n\r\nSo what you do is:\r\nImport context bridge \r\ncreate a scene wrapper that holds a canvas and camera,s and wraps the scene with the bridge\r\nand then within the scene we go ahead and consume both contexes.\r\nmake sure to wrap the scene wrapper with the first context.\r\n*/\r\n\r\nconst DefaultText = {\r\n  text: {\r\n    enable: false,\r\n    content: () => () => console.log(\"nothing\"),\r\n    title: \"\",\r\n  },\r\n  setText: (state) => {},\r\n};\r\n\r\nexport const TextContext = React.createContext(DefaultText);\r\nexport const CanvasContext = React.createContext(DefaultText);\r\nfunction ContextBridger() {\r\n  const ContextBridge = useContextBridge(TextContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"absolute h-screen w-screen\">\r\n        <Canvas shadows frameloop=\"demand\">\r\n          {/* create the bridge inside the Canvas and forward the context */}\r\n          <ContextBridge>\r\n            <Scene />\r\n          </ContextBridge>\r\n        </Canvas>\r\n\r\n        <Loader />\r\n      </div>\r\n      <div className=\"fixed z-2\">\r\n        <Button variant=\"contained\">Change LED Color</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default function SceneWrapper() {\r\n  const [text, setText] = useState(DefaultText.text);\r\n\r\n  return (\r\n    <>\r\n      <TextContext.Provider value={{ text, setText }}>\r\n        <ContextBridger />\r\n        <BoxContent />\r\n      </TextContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","/// <reference types=\"@welldone-software/why-did-you-render\" />\r\nimport './wdyr'; // <--- first import\r\nimport React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport \"./App.css\";\r\n\r\nimport Shelf from \"./components/Models/Shelf.js\";\r\n\r\nimport SceneWrapper from \"./components/Helpers/SceneWrapper\"\r\n\r\nimport { Loader, OrbitControls, PerspectiveCamera, Text, Preload } from \"@react-three/drei\";\r\nimport { useScrollDirection } from 'react-use-scroll-direction'\r\nimport { MathUtils } from \"three\";\r\nimport useScrollY from './hooks/useScrollY'\r\nimport { a } from \"@react-spring/three\"\r\nimport { Debug, Physics } from \"@react-three/cannon\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BoxContent from './components/HtmlBS/BoxContent';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: 60,\r\n    textAlign: 'center'\r\n  },\r\n});\r\n\r\nfunction HiddenImage(props: any) {\r\n  return (\r\n    <img src={props.image} alt={\"wow\"} />\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n\r\n      <div className=\" m-0 p-0  h-screen relative bg-wall bg-no-repeat bg-cover bg-center\">\r\n        <SceneWrapper/>\r\n        \r\n\r\n\r\n      </div >\r\n\r\n  );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}