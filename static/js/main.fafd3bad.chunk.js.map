{"version":3,"sources":["components/Models/placard.gltf","components/Models/unityLogo.gltf","components/Models/UnityLogo.js","components/Models/Placard.js","components/Models/shelf.gltf","components/Models/hook.glb","components/Models/Hook.js","components/Models/Researchlanyard.glb","components/Models/Blanklanyard.js","components/Models/DSlanyard.glb","components/Models/DSlanyard.js","components/Models/XRLanyard.glb","components/Models/bobble.glb","components/Models/SimpleBox.js","components/Models/XRlanyard.js","components/Models/Shelf.js","components/Models/hologram.glb","components/Models/smallerLogo.glb","components/Models/SmallerLogo.js","components/Models/Hologram.js","components/Models/Bobble.js","hooks/useScrollY.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useGLTF","preload","model","Placard","props","nodes","materials","useThree","size","viewport","aspect","width","useCompoundBody","mass","position","rotation","Math","PI","shapes","type","args","ref","api","currentPosx","currentPosy","useSpring","scale","config","friction","useRef","useEffect","subscribe","v","current","bind","useGesture","onDrag","movement","x","y","intial","first","lastOffset","set","velocity","sleep","onPointerUp","wakeUp","geometry","Cube_1","material","Material","raycast","meshBounds","Cube_2","Hook","dispose","Cylinder001","hook","castShadow","receiveShadow","Lanyard","Cube","Lanyard2","SimpleBox","positionInScreen","sizeOfBody","Lanyard3","Shelf","boxSize","height","Cube001","Exterior","Cube001_1","Cube001_2","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","color","intensity","Model","decrease","mesh","useFrame","state","delta","progress","MathUtils","lerp","Swarm","count","dummy","useMemo","THREE","particles","temp","i","t","random","factor","speed","xFactor","yFactor","zFactor","push","forEach","particle","s","cos","b","sin","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","attach","opacity","transparent","Hologram","cube","Sphere","legs","power","distance","angle","Bobble","Sphere003","me","cameraPositions","useStyles","makeStyles","root","bottom","textAlign","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","PerspectiveCamera","makeDefault","fov","App","classes","bounds","slow","index","fn","useCallback","cy","xy","py","previous","move","roll","memo","get","newY","clamp","pan","vxvy","onWheel","domTarget","useScrollY","window","useState","setstate","colors","shadows","frameloop","penumbra","group","to","fallback","Preload","all","Loader","Button","variant","className","onClick","includes","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fafd3bad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placard.7cc94612.gltf\";","export default __webpack_public_path__ + \"static/media/unityLogo.ce3ee7a0.gltf\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport model from \"./unityLogo.gltf\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { MathUtils } from \"three\";\n\nexport default function UnityLogo(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 0.2) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <= -0.2) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.03;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        -1,\n        progress\n      );\n    } else {\n      progress += 0.03;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        1,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(model);\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, {\n  useRef,\n  useMemo,\n  useState,\n  onPointerUp,\n  useEffect,\n} from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./placard.gltf\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport UnityLogo from \".//UnityLogo\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Placard(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    ...props,\n    position: [0, 0, 1],\n    rotation: [0, -Math.PI / 2, -Math.PI / 2.5],\n    shapes: [\n      {\n        type: \"Box\",\n        position: [1, -1, 0],\n        args: [0.5, 3, 11],\n        rotation: [0, 0, -Math.PI / 10],\n      },\n      { type: \"Box\", position: [0, 0, 0], args: [1, 1, 10] },\n    ],\n  }));\n\n  // const box=\n  let [currentPosx, currentPosy] = [0, 0];\n  const [spring, set] = useSpring(() => ({\n    scale: [1, 1, 1],\n    position: [0, 0, 0],\n    config: { friction: 10 },\n  }));\n\n  const position = useRef([0, 0, 0]);\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  const bind = useGesture({\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\n      if (intial) {\n        currentPosx = position.current[0];\n        currentPosy = position.current[1];\n      }\n\n      api.mass.set(0);\n\n      api.position.set(\n        ((x - position.current[0]) / aspect) * 1.2 + currentPosx,\n        ((position.current[1] - y) / aspect) * 1.2 + currentPosy,\n        0\n      );\n\n      api.velocity.set(0, 0, 0);\n      api.rotation.set(0, -Math.PI / 2, -Math.PI / 2.5);\n      api.sleep(true);\n    },\n\n    onPointerUp: ({}) => {\n      api.mass.set(1);\n      api.wakeUp(true);\n    },\n  });\n\n  return (\n    <group\n      rotation={[0, -1.55, -1.34]}\n      scale={[0.95, 0.09, 5.98]}\n      {...bind()}\n      ref={ref}\n      \n    >\n      <mesh geometry={nodes.Cube_1.geometry} material={materials.Material} raycast={meshBounds}/>\n      <mesh\n        geometry={nodes.Cube_2.geometry}\n        material={materials[\"Material.003\"]}\n        raycast={meshBounds}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","export default __webpack_public_path__ + \"static/media/hook.17574861.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./hook.glb\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Hook(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model)\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    rotation: [0, Math.PI, 0],\n    \n    shapes: [\n\n      { type: \"Cylinder\", position: [0, 0,1], args: [0.13, 0.13, 1], rotation:[Math.PI/2,0,0] },\n      { type: \"Cylinder\", position: [0, 0.16,0.3], args: [0.13, 0.13, 0.5], rotation:[-Math.PI/5,0,0] },\n      { type: \"Sphere\", position: [0, 0.55,0.05], args: [0.15, 4, 4], rotation:[-Math.PI/4,0,0] },\n    ],\n  }));\n\n  return (\n    <group ref={ref} {...props} dispose={null} rotation={[0,Math.PI,0]} scale={0.3}>\n      <mesh\n        geometry={nodes.Cylinder001.geometry}\n        material={materials.hook}\n        position={[0, 0.05, 3.46]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.4, 1.5, 0.4]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Researchlanyard.aa445638.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./Researchlanyard.glb\"\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Lanyard(props) {\n  const group = useRef()\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const { nodes, materials } = useGLTF(model)\n  \n\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    ...props,\n    rotation: [0, Math.PI / 2, 0],\n\n    shapes: [\n      { type: \"Box\", position: [0, -0.8, 0], args: [0.4, 7.2, 5.8] },\n      { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\n      { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\n      { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\n    ],\n  }));\n\n  let [currentPosx, currentPosy] = [0, 0];\n  const position = useRef([0, 0, 0]);\n   useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  const bind = useGesture({\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\n      if (intial) {\n        currentPosx = position.current[0];\n        currentPosy = position.current[1];\n      }\n\n      api.mass.set(0);\n\n      api.position.set(\n        ((x - position.current[0]) / aspect) * 1.2 + currentPosx,\n        ((position.current[1] - y) / aspect) * 1.2 + currentPosy,\n        -1\n      );\n\n      api.velocity.set(0, 0, 0);\n      api.sleep(true);\n    },\n\n    onPointerUp: ({}) => {\n      api.mass.set(1);\n      api.wakeUp(false);\n    },\n  }); \n  return(\n    <group ref={ref} {...props} {...bind()} dispose={null} scale={1} >\n      <mesh\n     geometry={nodes.Cube.geometry} material={nodes.Cube.material}   raycast={meshBounds}    scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/DSlanyard.4f4112cc.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./DSlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Lanyard2(props) {\n  const group = useRef();\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const { nodes, materials } = useGLTF(model);\n\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    ...props,\n    rotation: [0, Math.PI / 2, 0],\n\n    shapes: [\n      { type: \"Box\", position: [0, -0.8, 0], args: [0.4, 7.2, 5.8] },\n      { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\n      { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\n      { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\n    ],\n  }));\n\n  let [currentPosx, currentPosy] = [0, 0];\n  const position = useRef([0, 0, 0]);\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  const bind = useGesture({\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\n      if (intial) {\n        currentPosx = position.current[0];\n        currentPosy = position.current[1];\n      }\n\n      api.mass.set(0);\n\n      api.position.set(\n        ((x - position.current[0]) / aspect) * 1.2 + currentPosx,\n        ((position.current[1] - y) / aspect) * 1.2 + currentPosy,\n        -1\n      );\n\n      api.velocity.set(0, 0, 0);\n      api.sleep(true);\n    },\n\n    onPointerUp: ({}) => {\n      api.mass.set(1);\n      api.wakeUp(false);\n    },\n  }); \n  return (\n    <group ref={ref} {...props} {...bind()} dispose={null} scale={1}>\n      <mesh\n        geometry={nodes.Cube.geometry}\n        material={nodes.Cube.material}\n        scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n        raycast={meshBounds}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/DSlanyard.glb\");\n","export default __webpack_public_path__ + \"static/media/XRLanyard.5a81e0bf.glb\";","export default __webpack_public_path__ + \"static/media/bobble.7a6582ef.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport model from \"./bobble.glb\"\r\nimport { useSpring, a } from \"@react-spring/three\";\r\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\r\nexport default function SimpleBox(props) {\r\n  \r\n  const [ref, api] = useCompoundBody(() => ({\r\n    mass: 10,\r\n    ...props,\r\n    position: [0, 0, 0],\r\n    \r\n    shapes: [\r\n      {\r\n        type: \"Box\",\r\n        position: props.positionInScreen,\r\n        args: props.sizeOfBody,\r\n        rotation:[0, 0, 0]\r\n    \r\n      },\r\n\r\n    ],\r\n  }));\r\n\r\n  return (\r\n    <group ref={ref} {...props} dispose={null}>\r\n        <mesh/>\r\n    </group>\r\n  )\r\n}\r\n\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./XRLanyard.glb\"\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport SimpleBox from './SimpleBox';\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Lanyard3(props) {\n  const group = useRef()\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  const { nodes, materials } = useGLTF(model)\n/* \n  let [currentPosx, currentPosy] = [0, 0];\n  const position = useRef([0, 0, 0]);\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  const bind = useGesture({\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\n      if (intial) {\n        currentPosx = position.current[0];\n        currentPosy = position.current[1];\n      }\n\n      api.mass.set(0);\n\n      api.position.set(\n        ((x - position.current[0]) / aspect) * 1.2 + currentPosx,\n        ((position.current[1] - y) / aspect) * 1.2 + currentPosy,\n        -1\n      );\n\n      api.velocity.set(0, 0, 0);\n      api.sleep(true);\n    },\n\n    onPointerUp: ({}) => {\n      api.mass.set(1);\n      api.wakeUp(false);\n    },\n  }); */\n  return(\n    <>\n   \n    <SimpleBox sizeOfBody={[0.4, 7.2, 5.8]} positionInScreen={[0, -13, 0]}/> \n\n    \n    <group  {...props} dispose={null} scale={1}>\n      <mesh\n     geometry={nodes.Cube.geometry} material={nodes.Cube.material}    raycast={meshBounds}    scale={[0.15, 4.3, 2.9]}\n\n        castShadow\n        receiveShadow\n      />\n    </group>\n  </>\n  )\n}\n\n\nuseGLTF.preload('/XRlanyard.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./shelf.gltf\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport Hook from \"./Hook\"\nimport Lanyard from './Blanklanyard';\nimport Lanyard2 from './DSlanyard';\nimport Lanyard3 from './XRlanyard';\n\nexport default function Shelf(props) {\n  const {viewport} = useThree()\n  const boxSize = [5, 1.2,25]\n  const { nodes, materials } = useGLTF(model)\n\n\n  const [ref] = useCompoundBody(() => ({ mass: 0, ...props, position: [0,-22,0], rotation:[0,-Math.PI/2,0], shapes:[\n    {type: 'Box', position:[0,0.2,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-13.7,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-29.5,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[0,14.4,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[-2,0,0], rotation: [0, 0, 0],args:[1, 60,30]},\n    {type: 'Box', position:[-2,0,13], rotation: [0, 0, 0],args:[30, 60,1]},\n    {type: 'Box', position:[-2,0,-13], rotation: [0, 0, 0],args:[30, 60,1]},\n  ], }))\n\n  return (\n<>\n      <group ref={ref} position={[0, -30, 0]} scale={[3 ,viewport.height*4,  viewport.width]}   rotation={[0, Math.PI, 0]}>\n      \n        <mesh geometry={nodes.Cube001.geometry} material={materials.Exterior}  receiveShadow />\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials.Shelf}   receiveShadow/>\n         \n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.004']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_3.geometry} material={materials['Material.001']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_4.geometry} material={materials['Material.005']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_5.geometry} material={materials['Material.007']} />\n        <mesh geometry={nodes.Cube001_6.geometry} material={materials['Material.006']} />\n        <mesh geometry={nodes.Cube001_7.geometry} material={materials['Material.011']} />\n        <mesh geometry={nodes.Cube001_8.geometry} material={materials['Material.010']} />\n        <mesh geometry={nodes.Cube001_9.geometry} material={materials['Material.009']} />\n        <mesh geometry={nodes.Cube001_10.geometry} material={materials['Material.008']} />\n        <mesh geometry={nodes.Cube001_11.geometry} material={materials['Material.016']} />\n        <mesh geometry={nodes.Cube001_12.geometry} material={materials['Material.015']} />\n        <mesh geometry={nodes.Cube001_13.geometry} material={materials['Material.014']} />\n        <mesh geometry={nodes.Cube001_14.geometry} material={materials['Material.013']} />\n        <mesh geometry={nodes.Cube001_15.geometry} material={materials['Material.021']} />\n        <mesh geometry={nodes.Cube001_16.geometry} material={materials['Material.020']} />\n        <mesh geometry={nodes.Cube001_17.geometry} material={materials['Material.019']} />\n        <mesh geometry={nodes.Cube001_18.geometry} material={materials['Material.018']} />\n        <mesh geometry={nodes.Cube001_19.geometry} material={materials['Material.026']} />\n        <mesh geometry={nodes.Cube001_20.geometry} material={materials['Material.025']} />\n        <mesh geometry={nodes.Cube001_21.geometry} material={materials['Material.024']} />\n        <mesh geometry={nodes.Cube001_22.geometry} material={materials['Material.023']} />\n        <mesh geometry={nodes.Cube001_23.geometry} material={materials['Material.031']} />\n        <mesh geometry={nodes.Cube001_24.geometry} material={materials['Material.030']} />\n        <mesh geometry={nodes.Cube001_25.geometry} material={materials['Material.029']} />\n        <mesh geometry={nodes.Cube001_26.geometry} material={materials['Material.028']} />\n      </group>\n\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, 6,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -9,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -24,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -38,0]}/>\n    <Hook position={[-8,-11,-0.3]} />\n    <Hook position={[0,-11,-0.3]} />\n    <Hook position={[8,-11,-0.3]} />\n    <Lanyard2  position={[8,-15,-1.2]} />\n    <Lanyard3 position={[0,-15,-1.2]} />\n    <Lanyard position={[-8,-15,-1.2]} />\n\n</>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/hologram.d73e046a.glb\";","export default __webpack_public_path__ + \"static/media/smallerLogo.dd935cb4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef , useEffect} from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./smallerLogo.glb\";\nimport * as THREE from \"three\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 3.7) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <=3) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.0008;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        2,\n        progress\n      );\n    } else {\n      progress += 0.002;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        4,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group>\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n        castShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useMemo } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./hologram.glb\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport Model from \"./SmallerLogo\";\nimport * as THREE from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\n\nfunction Swarm({ count }) {\n  const mesh = useRef();\n  const light = useRef();\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  let newY = 0;\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  // Generate some random positions, speed factors and timings\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -0.5 + Math.random();\n      const yFactor = 0.7 + Math.random();\n      const zFactor = -0.3 + Math.random();\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor });\n    }\n    return temp;\n  }, [count]);\n  // The innards of this hook will run every frame\n  useFrame((state) => {\n    // Makes the light follow the mouse\n\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n\n      const s = Math.cos(t);\n      const b = Math.sin(t) + Math.cos(t * 2) / 25;\n\n      // Update the dummy object\n      dummy.position.set(xFactor, yFactor + b, zFactor);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 3, s * 3, s * 3);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#065b8d\"\n          opacity={0.5}\n          transparent\n        />\n      </instancedMesh>\n    </>\n  );\n}\nexport default function Hologram(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  //-1, -20\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    ...props,\n    position: [0, -20, 0],\n    shapes: [{ type: \"Box\", position: [0, 0, 0], args: [1.2, 0.7, 1.2] }],\n  }));\n  let [currentPosx, currentPosy] = [0, 0];\n  let [copyX, copyY] = [0, 0];\n  const position = useRef([0, 0, 0]);\n useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  const bind = useGesture({\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\n      if (intial) {\n        currentPosx = position.current[0];\n        currentPosy = position.current[1];\n      }\n      copyX = ((x - position.current[0]) / aspect) * 1.2 + currentPosx;\n      copyY = ((position.current[1] - y) / aspect) * 1.2 + currentPosy;\n      api.mass.set(0);\n\n      api.position.set(\n        ((x - position.current[0]) / aspect) * 1.2 + currentPosx,\n        ((position.current[1] - y) / aspect) * 1.2 + currentPosy,\n        0\n      );\n\n      api.velocity.set(0, 0, 0);\n      api.sleep(true);\n    },\n\n    onPointerUp: ({}) => {\n      api.mass.set(1);\n      api.wakeUp(false);\n    },\n  }); \n  const cube = useRef();\n  useFrame(() => {\n    cube.current.position.x = position.current[0];\n    cube.current.position.y =  position.current[1]+0.3;\n  });\n\n  return (\n    <>\n      <group ref={ref} {...props} {...bind()} dispose={null}>\n        <mesh geometry={nodes.Sphere.geometry}raycast={meshBounds} material={materials.legs} />\n        <spotLight\n          color={\"#03fcec\"}\n          power={100}\n          distance={10}\n          angle={Math.PI / 6}\n          position={[0, -1.4, 0]}\n          castShadow\n\n        />\n        <Swarm count={10} />\n      </group>\n      <group ref={cube}>\n      <Model  scale={0.3}/>\n      </group>\n  \n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./bobble.glb\"\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Bobble(props) {\n  \n  const [ref, api] = useCompoundBody(() => ({\n    mass: 10,\n    ...props,\n    position: [10, 0, 0],\n    \n    shapes: [\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      \n   \n    ],\n  }));\n  const { nodes, materials } = useGLTF(model)\n  return (\n    <group ref={ref} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Sphere003.geometry}\n        material={materials.me}\n        rotation={[-2.53, -1.46, -2.41]}\n        scale={[0.065, 0.065, 0.04]}\n        raycast={meshBounds}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -28, -41]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","/// <reference types=\"@welldone-software/why-did-you-render\" />\nimport './wdyr'; // <--- first import\nimport React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Placard from \"./components/Models/Placard.js\";\nimport Shelf from \"./components/Models/Shelf.js\";\nimport Hologram from \"./components/Models/Hologram\";\nimport Model from \"./components/Models/SmallerLogo\";\nimport Bobble from \"./components/Models/Bobble\"\nimport { Loader, OrbitControls, PerspectiveCamera, Text, Preload } from \"@react-three/drei\";\nimport { useScrollDirection } from 'react-use-scroll-direction'\nimport { MathUtils } from \"three\";\nimport useScrollY from './hooks/useScrollY'\nimport { a } from \"@react-spring/three\"\nimport { Debug, Physics } from \"@react-three/cannon\"\nimport { Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nvar cameraPositions = [] as any;\ncameraPositions = [0, -.3, -.6, -.9]\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    height: 60,\n    textAlign: 'center'\n  },\n});\n\nfunction ScrollingCamera(props: any) {\n  const ref = useRef<THREE.Camera>(null);\n  const { isScrollingUp, isScrollingDown } = useScrollDirection()\n  let position = 0;\n  let start = 0;\n  let end = 0;\n  let progress = 0;\n  useFrame(() => {\n\n    start = ref!.current!.position.y;\n    progress += 0.001;\n    if (progress > 1) {\n      progress = 0;\n    }\n    if (isScrollingUp) {\n      if (position === 0) {\n\n        position = 3;\n      }\n      else {\n        position--;\n      }\n\n    }\n    if (isScrollingDown) {\n      if (position === 3) {\n        position = 0;\n      }\n      else {\n        position++;\n      }\n\n    }\n    end = cameraPositions[position];\n    ref!.current!.position.y = MathUtils.lerp(start, end, progress);\n  })\n\n\n\n\n\n  return (\n    <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0, 0, 20]} rotation={[0, 0, 0]} />\n  )\n}\n\n\nfunction App() {\n  const classes = useStyles();\n  const [y]: any = useScrollY([-2400, 0], { domTarget: window })\n  //        <a.group position-z={y.to((y: any) => y)}>\n  //<ScrollingCamera/>\n  //</a.group>\n\n\n\n  const [state, setstate] = useState({ color: \"\" })\n  const changeState = () => {\n\n    if (colors.includes(state.color)) {\n      setstate({ color: colors[colors.indexOf(state.color) + 1] })\n    }\n    else {\n      setstate({ color: colors[0] })\n    }\n\n\n  };\n  const colors: any = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\"]\n  return (\n    <>\n\n\n\n      <Canvas shadows frameloop=\"demand\">\n\n        <ambientLight />\n        <spotLight\n          color={\"#ffffff\"}\n          position={[0, 0, 8]}\n          angle={Math.PI}\n          penumbra={1}\n          rotation={[0, 0, 0]}\n          power={6}\n        />\n        <a.group position-y={y.to((y: any) => y)}>\n          <ScrollingCamera />\n        </a.group>\n        <Physics>\n\n          <Suspense fallback={null}>\n   \n    <Placard />\n     \n           \n\n\n            <Bobble />\n            <Debug>\n            <Shelf color={state.color} />\n            </Debug>\n            <Hologram />\n            <Preload all />\n          </Suspense>\n        </Physics>\n\n      </Canvas>\n      <Loader />\n\n      <Button variant=\"contained\" className={classes.root} onClick={changeState}>Change LED Color</Button>\n\n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}