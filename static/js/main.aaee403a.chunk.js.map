{"version":3,"sources":["components/Models/SimpleBox.js","components/Models/placard.glb","components/settings/Boxes.js","components/Models/Placard.js","components/Models/shelf.gltf","components/Models/hook.glb","components/Models/Hook.js","components/Models/Researchlanyard.glb","components/Models/Blanklanyard.js","components/Models/DSlanyard.glb","components/Models/DSlanyard.js","components/Models/XRLanyard.glb","components/Models/XRlanyard.js","components/Models/lnicon.glb","components/Models/Lnicon.js","components/Models/gitIcon.glb","components/Models/GitIcon.js","components/Models/ship.glb","components/Models/Ship.js","components/ModelGen.js","components/Models/frog.glb","components/Models/Frog.js","components/Models/trowel.glb","components/Models/Trowel.js","components/Models/Shelf.js","components/Models/hologram.glb","components/Models/smallerLogo.glb","components/Models/SmallerLogo.js","components/Models/Hologram.js","components/Models/bobble.glb","components/Models/Bobble.js","hooks/useScrollY.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tempObject","THREE","SimpleGeometry","forwardRef","props","forwarded","useThree","size","viewport","aspect","width","count","colliders","length","dragged","useRef","handleChange","setDrag","useEffect","i","x","id","scale","set","args","position","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","bind","useGesture","onDrag","movement","y","first","console","log","lastPos","onDragEnd","ref","positionCol","rotation","rotationCol","attach","transparent","opacity","LanyardBoxes","type","PlacardBoxes","Math","PI","LIcon","GIcon","ShipBoxes","PlainImages","HologramBoxes","Model","useGLTF","model","nodes","materials","box","rot","boxes","useCompoundBody","mass","shapes","api","subscribe","v","useState","dragging","setLastPos","useFrame","wakeUp","sleep","copy","newValue","dispose","geometry","Cube001_1","material","Cube001_2","Text","preload","Hook","Cylinder001","hook","castShadow","receiveShadow","Lanyard","Cube","raycast","meshBounds","Lanyard2","Lanyard3","LnIcon","Curve001","GitIcon","group","Curve","Ship","Mesh_0_1","M_Catherine","Mesh_0_2","Mesh_0_3","M_WoodCeiling","Mesh_0_4","M_Glass","Mesh_0_5","M_Metal_02","Mesh_0_6","Mesh_0_7","Mesh_0_8","Mesh_0_9","M_ManilaRope","Mesh_0_10","M_Metal_01","Mesh_0_11","Mesh_0_12","Mesh_0_13","M_Wood_01","Mesh_0_14","M_Wood_02","Mesh_0_15","Material","LogoMesh","meshScaleFactor","extrudeSettings","curveSegments","steps","depth","bevelEnabled","extrudeDir","color","wireframe","depthWrite","fillOpacity","shape","LogoShape","paths","useLoader","SVGLoader","url","useMemo","flatMap","thisPath","toShapes","map","fillColor","nodeID","userData","node","logoShape_Ref","bBox","setFromObject","bSize","getSize","xOffset","yOffset","children","forEach","item","uuid","SVGs","Frog","frog","Trowel","Untitled","Shelf","boxSize","height","Cube001","Exterior","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","intensity","decrease","mesh","state","delta","progress","MathUtils","lerp","Swarm","dummy","particles","temp","t","random","factor","speed","xFactor","yFactor","zFactor","push","particle","s","cos","b","sin","Hologram","cube","Sphere","legs","power","distance","angle","Bobble","Sphere003","me","cameraPositions","useStyles","makeStyles","root","bottom","textAlign","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","PerspectiveCamera","makeDefault","fov","App","classes","bounds","useSpring","config","slow","index","fn","useCallback","cy","xy","py","previous","move","roll","memo","get","newY","clamp","pan","vxvy","onWheel","domTarget","useScrollY","window","setstate","colors","shadows","frameloop","penumbra","to","fallback","Preload","all","Loader","Button","variant","className","onClick","includes","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaee403a.chunk.js","sourcesContent":["/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { forwardRef, useRef, useEffect, useState } from \"react\";\r\nimport {useThree, instancedMesh } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nconst tempObject = new THREE.Object3D();\r\n\r\nexport const SimpleGeometry = forwardRef((props, forwarded) => {\r\n\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n  var count = props.colliders.length;\r\n  let [currentPosx, currentPosy] = [0, 0];\r\n  const mesh = useRef();\r\n\r\n  let dragged = false;\r\n  const handleChange = () => {\r\n    props.setDrag(dragged);\r\n}\r\n  useEffect(() => { \r\n    let i = 0;\r\n    for (let x = 0; x < count; x++) {\r\n      const id = i++;\r\n      \r\n  \r\n      tempObject.scale.set(\r\n        props.colliders[x].args[0],\r\n        props.colliders[x].args[1],\r\n        props.colliders[x].args[2]\r\n      );\r\n      tempObject.position.set(\r\n        props.colliders[x].position[0],\r\n        props.colliders[x].position[1],\r\n        props.colliders[x].position[2]\r\n      );\r\n      tempObject.updateMatrix();\r\n\r\n      forwarded.current.setMatrixAt(id, tempObject.matrix);\r\n\r\n      forwarded.current.instanceMatrix.needsUpdate = true;\r\n    }\r\n  }, []);\r\n  const bind = useGesture({\r\n\r\n    onDrag: ({ movement: [x, y], first: intial}) => {\r\n      dragged= true;\r\n      handleChange()\r\n      console.log(currentPosy - y)\r\n\r\n      forwarded.current.position.set(\r\n        ((x - currentPosx) / aspect) * 1.2 + props.lastPos[0],\r\n        ((currentPosy - y) / aspect) * 1.2 + props.lastPos[1],\r\n        0\r\n      );\r\n    \r\n \r\n    },\r\n    onDragEnd: ({}) => {\r\n      dragged= false;\r\n      handleChange()\r\n    }\r\n  });\r\n  \r\n\r\n  return (\r\n  \r\n      <instancedMesh\r\n      ref={forwarded}\r\n        {...bind()}\r\n        position={props.positionCol}\r\n        rotation={props.rotationCol}\r\n        setDrag={handleChange}\r\n        args={[null, null, count]}\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\"></boxBufferGeometry>\r\n        <meshStandardMaterial\r\n          transparent={true}\r\n          opacity={0}\r\n          attach=\"material\"\r\n        />\r\n      </instancedMesh>\r\n\r\n   \r\n \r\n  );\r\n});\r\n","export default __webpack_public_path__ + \"static/media/placard.cf98b553.glb\";","\r\nexport const LanyardBoxes = [{ \r\n    type: \"Box\", position: [0, -0.8, 0], args: [0.3, 7, 5.5] },\r\n     { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\r\n]\r\n\r\nexport const PlacardBoxes = [\r\n    {\r\n      type: \"Box\",\r\n      position: [1, -1, 0],\r\n      args: [0.5, 3, 11],\r\n      rotation: [0, 0, -Math.PI / 10],\r\n    },\r\n    { type: \"Box\", position: [0, 0, 0], args: [1, 1, 10] },\r\n]\r\n\r\nexport const LIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [1,0.2,-1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\nexport const GIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [-1,-.2,1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const ShipBoxes = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [2.3, 2.3,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const PlainImages = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [3, 3,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\n\r\nexport const HologramBoxes = [{ type: \"Box\", position: [0, 0, 0], args: [1.2, 0.7, 1.2] }]","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport {SimpleGeometry} from './SimpleBox';\nimport model from \"./placard.glb\";\nimport {PlacardBoxes} from \"../settings/Boxes\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlacardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0, 0, 1],\n    rotation: [0, -Math.PI / 2, -Math.PI / 2.5],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n        ref={box}\n   \n        setDrag={handleChange}\n        lastPos={lastPos}\n        rotationCol={[0, -Math.PI / 2, -Math.PI / 2.5]} colliders={boxes} positionCol={[0, 0, 1]}/>\n\n    <group ref={ref} {...props} dispose={null}>\n      <group  scale={[0.95, 0.09, 5.98]}>\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.001']} />\n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.003']} />\n      </group>\n      <mesh\n        geometry={nodes.Text.geometry}\n        material={nodes.Text.material}\n        position={[.2, 0.1, 4.11]}\n        rotation={[Math.PI / 2, Math.PI / 2, -Math.PI / 2]}\n      />\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","export default __webpack_public_path__ + \"static/media/hook.17574861.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./hook.glb\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Hook(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model)\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    rotation: [0, Math.PI, 0],\n    \n    shapes: [\n\n      { type: \"Cylinder\", position: [0, 0,1], args: [0.13, 0.13, 1], rotation:[Math.PI/2,0,0] },\n      { type: \"Cylinder\", position: [0, 0.16,0.3], args: [0.13, 0.13, 0.5], rotation:[-Math.PI/5,0,0] },\n      { type: \"Sphere\", position: [0, 0.55,0.05], args: [0.15, 4, 4], rotation:[-Math.PI/4,0,0] },\n    ],\n  }));\n\n  return (\n    <group ref={ref} {...props} dispose={null} rotation={[0,Math.PI,0]} scale={0.3}>\n      <mesh\n        geometry={nodes.Cylinder001.geometry}\n        material={materials.hook}\n        position={[0, 0.05, 3.46]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.4, 1.5, 0.4]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Researchlanyard.aa445638.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./Researchlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {LanyardBoxes} from \"../settings/Boxes\"\nexport default function Lanyard(props) {\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [-8, -15, -1.2],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[-8, -15, -1.2]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n\n      <group ref={ref} {...props} dispose={null} scale={1}>\n        <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          castShadow\n          receiveShadow\n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/DSlanyard.4f4112cc.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./DSlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {LanyardBoxes} from \"../settings/Boxes\"\nexport default function Lanyard2(props) {\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [8, -15, -1.2],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[8, -15, -1.2]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n\n    <group ref={ref} {...props}  dispose={null} scale={1}>\n      <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n        scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </>\n  );\n}\n\nuseGLTF.preload(\"/DSlanyard.glb\");\n","export default __webpack_public_path__ + \"static/media/XRLanyard.5a81e0bf.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./XRLanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LanyardBoxes } from \"../settings/Boxes\";\n\nexport default function Lanyard3(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0, -15, -1.2],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n//        onClick={()=>setDrag(!dragging)}\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0, -15, -1.2]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n\n      <group {...props} dispose={null} ref={ref} scale={1}>\n        <mesh\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          castShadow\n          receiveShadow\n  \n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(\"/XRlanyard.glb\");\n","export default __webpack_public_path__ + \"static/media/lnicon.5c105a95.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./lnicon.glb\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LIcon } from \"../settings/Boxes\";\n\nexport default function LnIcon(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0,-44,-0.3],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n//        onClick={()=>setDrag(!dragging)}\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0,-15,0]}\n        rotationCol={[0, 0 ,-Math.PI/2 ]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n    <group {...props} ref={ref} {...props}dispose={null}>\n      <mesh   raycast={meshBounds} geometry={nodes.Curve001.geometry} material={materials['SVGMat.002']} scale={2964.24} />\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/gitIcon.26e7b6f0.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState  } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { GIcon } from \"../settings/Boxes\";\n\nimport model from './gitIcon.glb'\n\nexport default function GitIcon(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = GIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [-6,-43,-0.3],\n    rotation: [0, 0, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n//        onClick={()=>setDrag(!dragging)}\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0,-15,0]}\n        rotationCol={[Math.PI/2 , Math.PI/2 ,Math.PI/2 ]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n    <group ref={group} ref={ref} {...props} dispose={null}>\n      <mesh raycast={meshBounds} geometry={nodes.Curve.geometry} material={materials['SVGMat.001']}rotation={[0, Math.PI, 0]} scale={[3275.04, 766.11, 3275.04]} />\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/ship.685ce8f4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState  } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from './ship.glb'\nimport {useBox, Debug, useTrimesh, useCompoundBody} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { ShipBoxes } from \"../settings/Boxes\";\nimport { SimpleGeometry } from \"./SimpleBox\";\n\nexport default function Ship(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = ShipBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [8,-33,-0.3],\n    rotation: [0, 0, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={[0,-15,0]}\n    rotationCol={[0, 0 ,-Math.PI/2 ]}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.15}>\n        <mesh geometry={nodes.Mesh_0_1.geometry} material={materials.M_Catherine} />\n        <mesh geometry={nodes.Mesh_0_2.geometry} material={materials['M_Fabric-Sails']} />\n        <mesh geometry={nodes.Mesh_0_3.geometry} material={materials.M_WoodCeiling} />\n        <mesh geometry={nodes.Mesh_0_4.geometry} material={materials.M_Glass} />\n        <mesh geometry={nodes.Mesh_0_5.geometry} material={materials.M_Metal_02} />\n        <mesh geometry={nodes.Mesh_0_6.geometry} material={materials['M_WoodPainted-Red']} />\n        <mesh geometry={nodes.Mesh_0_7.geometry} material={materials['M_WoodPainted-Yellow']} />\n        <mesh geometry={nodes.Mesh_0_8.geometry} material={materials['M_WoodPainted-Black']} />\n        <mesh geometry={nodes.Mesh_0_9.geometry} material={materials.M_ManilaRope} />\n        <mesh geometry={nodes.Mesh_0_10.geometry} material={materials.M_Metal_01} />\n        <mesh geometry={nodes.Mesh_0_11.geometry} material={materials['M_Wood-Floor']} />\n        <mesh geometry={nodes.Mesh_0_12.geometry} material={materials['M_WoodPainted-White']} />\n        <mesh geometry={nodes.Mesh_0_13.geometry} material={materials.M_Wood_01} />\n        <mesh geometry={nodes.Mesh_0_14.geometry} material={materials.M_Wood_02} />\n        <mesh geometry={nodes.Mesh_0_15.geometry} material={materials.Material} />\n      </group>\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Html } from \"@react-three/drei\";\r\nimport {\r\n  ExtrudeBufferGeometry,\r\n  MeshStandardMaterial,\r\n  ShapeBufferGeometry,\r\n} from \"three\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader\";\r\nfunction LogoMesh(props) {\r\n  const meshScaleFactor = 0.05;\r\n  // const meshScaleFactor = 1;\r\n  const meshColor = \"#0000ff\";\r\n\r\n  // #region -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\r\n\r\n  let extrudeSettings = {\r\n    curveSegments: 7,\r\n    steps: 1,\r\n    depth: 5,\r\n    bevelEnabled: false,\r\n\r\n    // curveSegments: 7,\r\n    // steps: 2,\r\n    // depth: 25,\r\n    // bevelEnabled: true,\r\n    // bevelThickness: 5,\r\n    // bevelSize: 5,\r\n    // bevelOffset: 0,\r\n    // bevelSegments: 5,\r\n  };\r\n\r\n  if (props.extrudeDir === \"negative\") {\r\n    extrudeSettings.depth = extrudeSettings.depth * -1;\r\n  }\r\n\r\n  // #endregion -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\r\n\r\n  return (\r\n    <mesh\r\n      id={props.id}\r\n      scale={[meshScaleFactor, -meshScaleFactor, meshScaleFactor]}\r\n      castShadow\r\n      receiveShadow\r\n    >\r\n      <meshNormalMaterial\r\n        attach=\"material\"\r\n        color={meshColor}\r\n        wireframe={true}\r\n        depthWrite={true}\r\n        transparent\r\n        opacity={props.fillOpacity}\r\n      />\r\n      <extrudeBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[[props.shape], extrudeSettings]}\r\n      />\r\n    </mesh>\r\n  );\r\n}\r\nfunction LogoShape(props) {\r\n  // const LogoShape = React.forwardRef((props, logoShape_Ref) => {\r\n\r\n  // #region -------------------- LOGOSHAPE shapes --------------------\r\n\r\n  const { paths } = useLoader(SVGLoader, props.url);\r\n\r\n  const shapes = useMemo(\r\n    () =>\r\n      paths.flatMap((thisPath, i) =>\r\n        thisPath\r\n          .toShapes(true)\r\n          .map((shape) => ({\r\n            shape,\r\n            color: props.fillColor,\r\n            fillOpacity: props.fillOpacity,\r\n            extrudeDir: props.extrudeDir,\r\n            nodeID: thisPath.userData.node.id,\r\n          }))\r\n      ),\r\n    [paths, props]\r\n  );\r\n\r\n  // #endregion -------------------- LOGOSHAPE shapes --------------------\r\n\r\n  const logoShape_Ref = useRef();\r\n\r\n  // #region -------------------- LOGOSHAPE center - REF: https://muffinman.io/three-js-extrude-svg-path/ --------------------\r\n\r\n  useEffect(() => {\r\n    // #region - - - - - - - - - - - LOGOSHAPE useEffect: center - REF: https://muffinman.io/three-js-extrude-svg-path/ - - - - - - - - - - -\r\n    console.log(paths)\r\n    let bBox = new THREE.Box3().setFromObject(logoShape_Ref.current);\r\n    let bSize = new THREE.Vector3();\r\n\r\n    // bBox.setFromObject(logoShape_Ref.current);\r\n    bBox.getSize(bSize);\r\n\r\n    // console.log(logoShape_Ref.current.children);\r\n    // console.log(bBox);\r\n    // console.log(bSize);\r\n    // // console.log(bBox.getSize(bSize));\r\n\r\n    let xOffset = bSize.x * -0.5;\r\n    let yOffset = bSize.y * 0.5;\r\n\r\n    logoShape_Ref.current.children.forEach((item) => {\r\n      item.position.x = xOffset;\r\n      item.position.y = yOffset;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <group ref={logoShape_Ref}>\r\n      {shapes.map((props) => (\r\n        <LogoMesh key={props.shape.uuid} {...props} />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\nfunction SVGToMesh(props) {\r\n  const ref = useRef();\r\n  var data = useLoader(SVGLoader, props.svg);\r\n  var paths = data.paths;\r\n  console.log(props.svg);\r\n  var shapes = [];\r\n\r\n  for (var i = 0; i < paths.length; i++) {\r\n    Array.prototype.push.apply(shapes, paths[i].toShapes()); // catenate, so we can create a single geometry and mesh\r\n  }\r\n  console.log(shapes);\r\n  var extrusionSettings = {\r\n    depth: 20,\r\n    bevelEnabled: false,\r\n  };\r\n\r\n  var geometry = new THREE.ExtrudeBufferGeometry(shapes, extrusionSettings);\r\n  geometry.center();\r\n\r\n  console.log(ref);\r\n  return (\r\n    <>\r\n      <mesh ref={ref}>\r\n        <extrudeBufferGeometry name=\"geometry\" args={[shapes, props]} />\r\n        <meshStandardMaterial attach=\"material\" color={\"red\"} />\r\n      </mesh>\r\n    </>\r\n  );\r\n}\r\nexport default function SVGs(props) {\r\n  return (\r\n    <>\r\n\r\n      <LogoShape\r\n        fillOpacity=\"1\"\r\n        extrudeDir=\"positive\"\r\n        position={[-4, 0, 0]}\r\n        url={\"./src/images/frog.svg\"}\r\n      />\r\n      <LogoShape position={[4, 0, 0]} url={\"./src/images/drawing.svg\"} />\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/frog.756ff6dd.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { PlainImages } from \"../settings/Boxes\";\nimport model from './frog.glb'\nexport default function Frog(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlainImages;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0,-33,-0.3],\n    rotation: [0, 0, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={[0,-15,0]}\n    rotationCol={[Math.PI/2 , Math.PI/2 ,Math.PI/2 ]}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n    <mesh geometry={nodes.frog.geometry} material={materials.frog} rotation={[Math.PI/2, 0, 0]}position={[0.08, 0, -0.2]} scale={[3,1,3]}/>\n  </group>\n  </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/trowel.357f81c8.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { PlainImages } from \"../settings/Boxes\";\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport model from './trowel.glb'\n\n\nexport default function Trowel(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlainImages;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [-6,-33,-0.3],\n    rotation: [0, 0, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={[0,-15,0]}\n    rotationCol={[Math.PI/2 , Math.PI/2 ,Math.PI/2 ]}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n\n    <group ref={ref} {...props} dispose={null}>\n      <mesh geometry={nodes.Untitled.geometry} material={materials.Untitled} rotation={[Math.PI/2, 0, 0]}scale={[3,1,3]}position={[0.08, 0, -0.2]} />\n    </group>\n    </>\n  )\n\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./shelf.gltf\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport {\n  useBox,\n  Debug,\n  useTrimesh,\n  useCompoundBody,\n  useConvexPolyhedron,\n} from \"@react-three/cannon\";\nimport Hook from \"./Hook\";\nimport Lanyard from \"./Blanklanyard\";\nimport Lanyard2 from \"./DSlanyard\";\nimport Lanyard3 from \"./XRlanyard\";\nimport LnIcon from \"./Lnicon\";\nimport GitIcon from \"./GitIcon\";\nimport Ship from \"./Ship\";\nimport SVGs from \"../ModelGen\";\nimport Frog from \"./Frog\";\nimport Trowel from \"./Trowel\";\nexport default function Shelf(props) {\n  const { viewport } = useThree();\n  const boxSize = [5, 1.2, 25];\n  const { nodes, materials } = useGLTF(model);\n\n  const [ref] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    position: [0, -22, 0],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: [\n      {\n        type: \"Box\",\n        position: [0, 0.2, 0],\n        rotation: [0, 0, 0],\n        args: boxSize,\n      },\n      {\n        type: \"Box\",\n        position: [0, -13.7, 0],\n        rotation: [0, 0, 0],\n        args: boxSize,\n      },\n      {\n        type: \"Box\",\n        position: [0, -29.5, 0],\n        rotation: [0, 0, 0],\n        args: boxSize,\n      },\n      {\n        type: \"Box\",\n        position: [0, 14.4, 0],\n        rotation: [0, 0, 0],\n        args: boxSize,\n      },\n      {\n        type: \"Box\",\n        position: [-2, 0, 0],\n        rotation: [0, 0, 0],\n        args: [1, 60, 30],\n      },\n      {\n        type: \"Box\",\n        position: [-2, 0, 13],\n        rotation: [0, 0, 0],\n        args: [30, 60, 1],\n      },\n      {\n        type: \"Box\",\n        position: [-2, 0, -13],\n        rotation: [0, 0, 0],\n        args: [30, 60, 1],\n      },\n    ],\n  }));\n  /*   <Lanyard2  position={[8,-15,-1.2]} />\n  <Lanyard3 position={[0,-15,-1.2]} />\n  <Lanyard position={[-8,-15,-1.2]} /> */\n  return (\n    <>\n      <group\n        ref={ref}\n        position={[0, -30, 0]}\n        scale={[3, viewport.height * 4, viewport.width]}\n        rotation={[0, Math.PI, 0]}\n      >\n        <mesh\n          geometry={nodes.Cube001.geometry}\n          material={materials.Exterior}\n          receiveShadow\n        />\n        <mesh\n          geometry={nodes.Cube001_1.geometry}\n          material={materials.Shelf}\n          receiveShadow\n        />\n\n        <mesh\n          geometry={nodes.Cube001_2.geometry}\n          material={materials[\"Material.004\"]}\n          castShadow\n          receiveShadow\n        />\n        <mesh\n          geometry={nodes.Cube001_3.geometry}\n          material={materials[\"Material.001\"]}\n          castShadow\n          receiveShadow\n        />\n        <mesh\n          geometry={nodes.Cube001_4.geometry}\n          material={materials[\"Material.005\"]}\n          castShadow\n          receiveShadow\n        />\n        <mesh\n          geometry={nodes.Cube001_5.geometry}\n          material={materials[\"Material.007\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_6.geometry}\n          material={materials[\"Material.006\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_7.geometry}\n          material={materials[\"Material.011\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_8.geometry}\n          material={materials[\"Material.010\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_9.geometry}\n          material={materials[\"Material.009\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_10.geometry}\n          material={materials[\"Material.008\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_11.geometry}\n          material={materials[\"Material.016\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_12.geometry}\n          material={materials[\"Material.015\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_13.geometry}\n          material={materials[\"Material.014\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_14.geometry}\n          material={materials[\"Material.013\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_15.geometry}\n          material={materials[\"Material.021\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_16.geometry}\n          material={materials[\"Material.020\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_17.geometry}\n          material={materials[\"Material.019\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_18.geometry}\n          material={materials[\"Material.018\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_19.geometry}\n          material={materials[\"Material.026\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_20.geometry}\n          material={materials[\"Material.025\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_21.geometry}\n          material={materials[\"Material.024\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_22.geometry}\n          material={materials[\"Material.023\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_23.geometry}\n          material={materials[\"Material.031\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_24.geometry}\n          material={materials[\"Material.030\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_25.geometry}\n          material={materials[\"Material.029\"]}\n        />\n        <mesh\n          geometry={nodes.Cube001_26.geometry}\n          material={materials[\"Material.028\"]}\n        />\n      </group>\n\n      <rectAreaLight\n        color={props.color}\n        intensity={15}\n        width={30}\n        height={5}\n        position={[0, 6, 0]}\n      />\n      <rectAreaLight\n        color={props.color}\n        intensity={15}\n        width={30}\n        height={5}\n        position={[0, -9, 0]}\n      />\n      <rectAreaLight\n        color={props.color}\n        intensity={15}\n        width={30}\n        height={5}\n        position={[0, -24, 0]}\n      />\n      <rectAreaLight\n        color={props.color}\n        intensity={15}\n        width={30}\n        height={5}\n        position={[0, -38, 0]}\n      />\n      <Hook position={[-8, -11, -0.3]} />\n      <Hook position={[0, -11, -0.3]} />\n      <Hook position={[8, -11, -0.3]} />\n\n      <Lanyard2 />\n      <Lanyard3 />\n      <Lanyard />\n    \n      <LnIcon rotation={[Math.PI / 2, 0, 0]} scale={[0.12, 0.12, 0.12]} />\n      <GitIcon rotation={[-Math.PI / 2, 0, 0]} scale={[0.12, 0.12, 0.12]} />\n      <Ship />\n      <Trowel/>\n      <Frog/>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/hologram.d73e046a.glb\";","export default __webpack_public_path__ + \"static/media/smallerLogo.dd935cb4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef , useEffect} from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./smallerLogo.glb\";\nimport * as THREE from \"three\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 3.7) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <=3) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.0008;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        2,\n        progress\n      );\n    } else {\n      progress += 0.002;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        4,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group>\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n        castShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useMemo, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./hologram.glb\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport Model from \"./SmallerLogo\";\nimport * as THREE from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {HologramBoxes} from \"../settings/Boxes\"\n\nfunction Swarm({ count }) {\n  const mesh = useRef();\n  const light = useRef();\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  let newY = 0;\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  // Generate some random positions, speed factors and timings\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -0.5 + Math.random();\n      const yFactor = 0.7 + Math.random();\n      const zFactor = -0.3 + Math.random();\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor });\n    }\n    return temp;\n  }, [count]);\n  // The innards of this hook will run every frame\n  useFrame((state) => {\n    // Makes the light follow the mouse\n\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n\n      const s = Math.cos(t);\n      const b = Math.sin(t) + Math.cos(t * 2) / 25;\n\n      // Update the dummy object\n      dummy.position.set(xFactor, yFactor + b, zFactor);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 3, s * 3, s * 3);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#065b8d\"\n          opacity={0.5}\n          transparent\n        />\n      </instancedMesh>\n    </>\n  );\n}\nexport default function Hologram(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  //-1, -20\n\n\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0, -15, 1],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  var boxes = HologramBoxes\n\n  const cube = useRef();\n  useFrame(() => {\n    cube.current.position.x =  box.current.position.x;\n    cube.current.position.y =   box.current.position.y;\n  });\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0, -15, 1]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n      <group ref={ref} {...props} dispose={null}>\n        <mesh geometry={nodes.Sphere.geometry}raycast={meshBounds} material={materials.legs} />\n        <spotLight\n          color={\"#03fcec\"}\n          power={100}\n          distance={10}\n          angle={Math.PI / 6}\n  \n          castShadow\n\n        />\n        <Swarm count={10} />\n      </group>\n      <group ref={cube}>\n      <Model  scale={0.3}/>\n      </group>\n  \n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/bobble.7a6582ef.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./bobble.glb\"\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Bobble(props) {\n  \n  const [ref, api] = useCompoundBody(() => ({\n    mass: 10,\n    ...props,\n    position: [10, 0, 0],\n    \n    shapes: [\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      \n   \n    ],\n  }));\n  const { nodes, materials } = useGLTF(model)\n  return (\n    <group ref={ref} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Sphere003.geometry}\n        material={materials.me}\n        rotation={[-2.53, -1.46, -2.41]}\n        scale={[0.065, 0.065, 0.04]}\n        raycast={meshBounds}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -30, -44]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","/// <reference types=\"@welldone-software/why-did-you-render\" />\nimport './wdyr'; // <--- first import\nimport React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Placard from \"./components/Models/Placard.js\";\nimport Shelf from \"./components/Models/Shelf.js\";\nimport Hologram from \"./components/Models/Hologram\";\nimport Model from \"./components/Models/SmallerLogo\";\nimport Bobble from \"./components/Models/Bobble\"\nimport { Loader, OrbitControls, PerspectiveCamera, Text, Preload } from \"@react-three/drei\";\nimport { useScrollDirection } from 'react-use-scroll-direction'\nimport { MathUtils } from \"three\";\nimport useScrollY from './hooks/useScrollY'\nimport { a } from \"@react-spring/three\"\nimport { Debug, Physics } from \"@react-three/cannon\"\nimport { Button, Hidden } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport SVGs from './components/ModelGen';\nvar cameraPositions = [] as any;\ncameraPositions = [0, -.3, -.6, -.9]\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    height: 60,\n    textAlign: 'center'\n  },\n});\n\nfunction HiddenImage(props: any) {\n  return (\n    <img src={props.image} alt={\"wow\"}/>\n  )\n\n\n}\n\nfunction ScrollingCamera(props: any) {\n  const ref = useRef<THREE.Camera>(null);\n  const { isScrollingUp, isScrollingDown } = useScrollDirection()\n  let position = 0;\n  let start = 0;\n  let end = 0;\n  let progress = 0;\n  useFrame(() => {\n\n    start = ref!.current!.position.y;\n    progress += 0.001;\n    if (progress > 1) {\n      progress = 0;\n    }\n    if (isScrollingUp) {\n      if (position === 0) {\n\n        position = 3;\n      }\n      else {\n        position--;\n      }\n\n    }\n    if (isScrollingDown) {\n      if (position === 3) {\n        position = 0;\n      }\n      else {\n        position++;\n      }\n\n    }\n    end = cameraPositions[position];\n    ref!.current!.position.y = MathUtils.lerp(start, end, progress);\n  })\n\n\n\n\n\n  return (\n    <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0, 0, 20]} rotation={[0, 0, 0]} />\n  )\n}\n\n\nfunction App() {\n  const classes = useStyles();\n  const [y]: any = useScrollY([-2400, 0], { domTarget: window })\n\n/* \n\n<a.group position-y={y.to((y: any) => y)}>\n  <ScrollingCamera />\n</a.group>\n */\n\n  const [state, setstate] = useState({ color: \"\" })\n  const changeState = () => {\n\n    if (colors.includes(state.color)) {\n      setstate({ color: colors[colors.indexOf(state.color) + 1] })\n    }\n    else {\n      setstate({ color: colors[0] })\n    }\n\n\n  };\n  const colors: any = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\"]\n  return (\n    <>\n\n      <Canvas shadows frameloop=\"demand\">\n\n<ambientLight />\n<spotLight\n  color={\"#ffffff\"}\n  position={[0, 0, 8]}\n  angle={Math.PI}\n  penumbra={1}\n  rotation={[0, 0, 0]}\n  power={6}\n/>\n<a.group position-y={y.to((y: any) => y)}>\n  <ScrollingCamera />\n</a.group>\n<Physics>\n\n  <Suspense fallback={null}>\n\n    <Placard />\n\n\n    <SVGs/>\n\n    <Bobble />\n    <Debug>\n\n    <Shelf color={state.color} />\n    </Debug>\n    <Hologram />\n    <Preload all />\n  </Suspense>\n</Physics>\n\n</Canvas>\n<Loader />\n\n<Button variant=\"contained\" className={classes.root} onClick={changeState}>Change LED Color</Button>\n\n\n\n\n\n\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}