{"version":3,"sources":["components/Models/DSlanyard.glb","components/Models/SimpleBox.js","components/settings/Boxes.js","components/Models/DSlanyard.js","components/Models/Researchlanyard.glb","components/Models/Blanklanyard.js","components/Models/frog.glb","components/Models/Frog.js","components/Models/gitIcon.glb","components/Models/GitIcon.js","components/Models/hologram.glb","components/Models/smallerLogo.glb","components/Models/SmallerLogo.js","components/Models/Hologram.js","components/Models/linkicon.glb","components/Models/Lnicon.js","components/Models/placardDraco.glb","components/Models/Placard.js","components/Models/ship.glb","components/Models/Ship.js","components/Models/trowel.glb","components/Models/Trowel.js","components/Models/XRLanyard.glb","components/Models/XRlanyard.js","components/Models/shelf.glb","components/Models/hook.glb","components/Models/Hook.js","components/Models/Shelf.js","hooks/useScrollY.js","components/Scene.js","components/HtmlBS/HoverText.js","components/HtmlBS/BoxContent.js","images/lightbulb.png","components/Helpers/SceneWrapper.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tempObject","THREE","SimpleGeometry","forwardRef","props","forwarded","useThree","size","viewport","aspect","width","count","colliders","length","tcontext","useRef","useContext","TextContext","dragged","handleChange","setDrag","useEffect","i","x","id","scale","set","args","position","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","bind","useGesture","onDrag","movement","y","first","setText","beingDragged","lastPos","onDragEnd","console","log","ref","positionCol","rotation","rotationCol","attach","transparent","opacity","LanyardBoxes","type","PlacardBoxes","Math","PI","LIcon","GIcon","ShipBoxes","PlainImages","HologramBoxes","LanyardDS","useGLTF","model","nodes","box","materials","rot","boxes","useCompoundBody","mass","positionOfObj","rotationOfObj","shapes","api","subscribe","v","useState","dragging","setLastPos","useFrame","wakeUp","sleep","copy","newValue","dispose","geometry","Cube","material","castShadow","receiveShadow","raycast","meshBounds","preload","Lanyard","Frog","frog","GitIcon","Curve","Model","decrease","mesh","state","delta","progress","MathUtils","lerp","Cube001","Swarm","dummy","useMemo","particles","temp","t","random","factor","speed","xFactor","yFactor","zFactor","push","forEach","particle","s","cos","b","sin","color","Hologram","Sphere","legs","power","distance","angle","LnIcon","Curve001","children","Placard","Cube001_1","Cube001_2","Text","Ship","Mesh_0_1","M_Catherine","Mesh_0_2","Mesh_0_3","M_WoodCeiling","Mesh_0_4","M_Glass","Mesh_0_5","M_Metal_02","Mesh_0_6","Mesh_0_7","Mesh_0_8","Mesh_0_9","M_ManilaRope","Mesh_0_10","M_Metal_01","Mesh_0_11","Mesh_0_12","Mesh_0_13","M_Wood_01","Mesh_0_14","M_Wood_02","Mesh_0_15","Material","Trowel","Untitled","LanyardXR","Hook","Cylinder001","hook","Shelf","boxSize","height","Exterior","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","intensity","cameraPositions","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","PerspectiveCamera","makeDefault","fov","Scene","bounds","useSpring","config","slow","index","fn","useCallback","cy","xy","py","previous","move","roll","memo","get","newY","clamp","pan","vxvy","onWheel","domTarget","useScrollY","window","handleEnableText","text","enable","content","title","handleDisableText","bcontext","ButtonContext","group","to","penumbra","fallback","onPointerOver","className","onPointerOut","onClick","open","BoxContent","context","React","DefaultText","DefaultButton","setColor","createContext","ContextBridger","ContextBridge","useContextBridge","shadows","frameloop","Loader","HTMLOverlay","colors","IconButton","indexOf","src","img","alt","SceneWrapper","DataContext","initialLoad","ReactGA","pageview","location","pathname","setInitialLoad","Provider","value","initialize","DefaultData","PerformanceObserver","list","getEntries","entry","timing","category","variable","name","responseEnd","observe","entryTypes","App","document","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sPAAe,MAA0B,sC,uDCgBnCA,EAAa,IAAIC,WAOVC,EAAiBC,sBAAW,SAACC,EAAOC,GAC/C,MAA2BC,cAAnBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACRC,EAASF,EAAKG,MAAQF,EAASE,MACjCC,EAAQP,EAAMQ,UAAUC,OAItBC,GAFOC,mBAEIC,qBAAWC,KAKxBC,GAAU,EACRC,EAAe,WACnBf,EAAMgB,QAAQF,IAEhBG,qBAAU,WAER,IADA,IAAIC,EAAI,EACCC,EAAI,EAAGA,EAAIZ,EAAOY,IAAK,CAC9B,IAAMC,EAAKF,IAEXtB,EAAWyB,MAAMC,IACftB,EAAMQ,UAAUW,GAAGI,KAAK,GACxBvB,EAAMQ,UAAUW,GAAGI,KAAK,GACxBvB,EAAMQ,UAAUW,GAAGI,KAAK,IAE1B3B,EAAW4B,SAASF,IAClBtB,EAAMQ,UAAUW,GAAGK,SAAS,GAC5BxB,EAAMQ,UAAUW,GAAGK,SAAS,GAC5BxB,EAAMQ,UAAUW,GAAGK,SAAS,IAE9B5B,EAAW6B,eAEXxB,EAAUyB,QAAQC,YAAYP,EAAIxB,EAAWgC,QAE7C3B,EAAUyB,QAAQG,eAAeC,aAAc,MAGnD,IAAMC,EAAOC,qBAAW,CACtBC,OAAQ,YAA0C,IAAD,gBAAtCC,SAAsC,GAA3Bf,EAA2B,KAAxBgB,EAAwB,OAApBC,MAC3B1B,EAAS2B,QAAT,2BAAsB3B,GAAtB,IAAgC4B,cAAc,KAC9CxB,GAAU,EACVC,IAEAd,EAAUyB,QAAQF,SAASF,KACvBH,EAzC0B,GAyCPd,EAAU,IAAML,EAAMuC,QAAQ,IAzCpB,EA0CfJ,GAAK9B,EAAU,IAAML,EAAMuC,QAAQ,GACnD,IAGJC,UAAW,YAAS,eAClB9B,EAAS2B,QAAT,2BAAsB3B,GAAtB,IAAgC4B,cAAc,KAC9CxB,GAAU,EACV2B,QAAQC,IAAI,SACZ3B,OAIJ,OACE,wDACE4B,IAAK1C,GACD8B,KAFN,IAGEP,SAAUxB,EAAM4C,YAChBC,SAAU7C,EAAM8C,YAChB9B,QAASD,EACTQ,KAAM,CAAC,KAAM,KAAMhB,GANrB,UAQE,mCAAmBwC,OAAO,aAC1B,sCAAsBC,aAAa,EAAMC,QAAS,EAAGF,OAAO,oBC1FrDG,EAAe,CAAC,CACzBC,KAAM,MAAO3B,SAAU,CAAC,GAAI,GAAK,GAAID,KAAM,CAAC,GAAK,EAAG,MACnD,CAAE4B,KAAM,MAAO3B,SAAU,CAAC,EAAG,KAAM,KAAMD,KAAM,CAAC,GAAK,IAAK,MAC1D,CAAE4B,KAAM,MAAO3B,SAAU,CAAC,EAAG,IAAK,KAAMD,KAAM,CAAC,GAAK,IAAK,MACzD,CAAE4B,KAAM,MAAO3B,SAAU,CAAC,EAAG,EAAK,GAAID,KAAM,CAAC,GAAK,GAAK,MAG/C6B,EAAe,CACxB,CACED,KAAM,MACN3B,SAAU,CAAC,GAAI,EAAG,GAClBD,KAAM,CAAC,GAAK,EAAG,IACfsB,SAAU,CAAC,EAAG,GAAIQ,KAAKC,GAAK,KAE9B,CAAEH,KAAM,MAAO3B,SAAU,CAAC,EAAG,EAAG,GAAID,KAAM,CAAC,EAAG,EAAG,MAGxCgC,EAAQ,CACnB,CACEJ,KAAM,MACN3B,SAAU,CAAC,EAAE,IAAK,KAClBD,KAAM,CAAC,IAAK,EAAE,KACdsB,SAAU,CAAC,EAAG,EAAG,KAKRW,EAAQ,CACnB,CACEL,KAAM,MACN3B,SAAU,EAAE,GAAG,GAAG,KAClBD,KAAM,CAAC,IAAK,EAAE,KACdsB,SAAU,CAAC,EAAG,EAAG,KAIRY,EAAY,CACvB,CACEN,KAAM,MACN3B,SAAU,CAAC,EAAE,EAAE,GACfD,KAAM,CAAC,IAAK,IAAI,GAChBsB,SAAU,CAAC,EAAG,EAAG,KAIRa,EAAc,CACzB,CACEP,KAAM,MACN3B,SAAU,CAAC,EAAE,EAAE,GACfD,KAAM,CAAC,IAAK,IAAI,GAChBsB,SAAU,CAAC,EAAG,EAAG,KAMRc,EAAgB,CAAC,CAAER,KAAM,MAAO3B,SAAU,CAAC,EAAG,EAAG,GAAID,KAAM,CAAC,IAAK,GAAK,OC1CpE,SAASqC,EAAU5D,GACXE,cAAbE,SAAR,IACA,EAA6ByD,YAAQC,GAA7BC,EAAR,EAAQA,MACFC,GADN,EAAeC,UACHtD,oBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQjB,EACZ,EAAmBkB,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAyBA,OAvBAC,aAAS,YAEU,IAAbF,IAEFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACA,cAAC/C,EAAD,CACA6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAEP,+CAAOI,IAAKA,GAAS3C,GAArB,IAA6BoF,QAAS,KAAM/D,MAAO,EAAnD,SACA,sBACIgE,SAAUtB,EAAMuB,KAAKD,SACrBE,SAAUxB,EAAMuB,KAAKC,SACvBlE,MAAO,CAAC,IAAM,IAAK,KACnBmE,YAAU,EACVC,eAAa,EACbC,QAASC,YAQjB9B,IAAQ+B,QAAQ9B,GCvFD,UAA0B,4CCe1B,SAAS+B,EAAQ7F,GAC9B,MAA6B6D,YAAQC,GAA7BC,EAAR,EAAQA,MACFC,GADN,EAAeC,UACHtD,oBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQjB,EACZ,EAAmBkB,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,QAGxE1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,QAGnE,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAyBA,OAvBAC,aAAS,YAEU,IAAbF,IAEFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IACJpC,QAAQC,IAAI,qBACZ+B,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACA,cAAC/C,EAAD,CACA6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAEP,uBAAQI,IAAKA,EAAKyC,QAAS,KAAM/D,MAAO,EAAxC,SACE,sBACEgE,SAAUtB,EAAMuB,KAAKD,SACrBE,SAAUxB,EAAMuB,KAAKC,SACrBG,QAASC,IACTtE,MAAO,CAAC,IAAM,IAAK,KACnBmE,YAAU,EACVC,eAAa,SAOvB5B,IAAQ+B,QAAQ9B,GCrFD,UAA0B,iCCe1B,SAASgC,EAAK9F,GAC3B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQT,EACZ,EAAmBU,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACI,cAAC/C,EAAD,CACJ6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAET,+CAAOI,IAAKA,GAAS3C,GAArB,IAA4BoF,QAAS,KAArC,SACA,sBAAMC,SAAUtB,EAAMgC,KAAKV,SAAUE,SAAUtB,EAAU8B,KAAMlD,SAAU,CAACQ,KAAKC,GAAG,EAAG,EAAG,GAAG9B,SAAU,CAAC,IAAM,GAAI,IAAMH,MAAO,CAAC,EAAE,EAAE,WAOtIwC,IAAQ+B,QAAQ9B,GC9ED,UAA0B,oCCkB1B,SAASkC,EAAQhG,GAC9B,MAA6B6D,YAAQC,GAA7BC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQX,EACZ,EAAmBY,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACI,cAAC/C,EAAD,CACJ6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAET,+CAAOI,IAAKA,GAAU3C,GAAtB,IAA6BoF,QAAS,KAAtC,SACE,sBAAMM,QAASC,IAAYN,SAAUtB,EAAMkC,MAAMZ,SAAUE,SAAUtB,EAAU,cAAcpB,SAAU,CAAC,EAAGQ,KAAKC,GAAI,GAAIjC,MAAO,CAAC,OAAQ,MAAO,gBAMrJwC,IAAQ+B,QAAQ9B,GChFD,UAA0B,qCCA1B,MAA0B,wCCa1B,SAASoC,EAAMlG,GAC5B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACXkC,GAAW,EAETC,EAAOzF,mBA6Bb,OA3BAoE,aAAS,SAACsB,EAAOC,GACf,IAAIC,EAAW,EAEXH,EAAK1E,QAAQF,SAASW,GAAK,KAC7BgE,GAAW,EACXI,EAAW,GACFH,EAAK1E,QAAQF,SAASW,GAAI,IACnCgE,GAAW,EACXI,EAAW,GAETJ,GACFI,GAAY,KACZH,EAAK1E,QAAQF,SAASW,EAAIqE,YAAUC,KAClCL,EAAK1E,QAAQF,SAASW,EACtB,EACAoE,KAGFA,GAAY,KACZH,EAAK1E,QAAQF,SAASW,EAAIqE,YAAUC,KAClCL,EAAK1E,QAAQF,SAASW,EACtB,EACAoE,OAMJ,gCACA,+CAAO5D,IAAKyD,GAAUpG,GAAtB,IAA6BoF,QAAS,KAAtC,SACE,sBACEC,SAAUtB,EAAM2C,QAAQrB,SACxBE,SAAUtB,EAAU,gBACpBzC,SAAU,CAAC,EAAG,EAAG,IACjBqB,SAAU,CAAC,IAAM,GAAK,GACtBxB,MAAO,IACPmE,YAAU,EACVE,QAASC,WCxCjB,SAASgB,EAAT,GAA2B,IAAVpG,EAAS,EAATA,MACT6F,EAAOzF,mBAGb,GAFcA,mBAEaT,eAAnBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAGRwG,GAFSzG,EAAKG,MAAQF,EAASE,MAEvBuG,mBAAQ,kBAAM,IAAIhH,aAAkB,KAE5CiH,EAAYD,mBAAQ,WAExB,IADA,IAAME,EAAO,GACJ7F,EAAI,EAAGA,EAAIX,EAAOW,IAAK,CAC9B,IAAM8F,EAAoB,IAAhB3D,KAAK4D,SACTC,EAAS,GAAqB,IAAhB7D,KAAK4D,SACnBE,EAAQ,IAAO9D,KAAK4D,SAAW,IAC/BG,GAAW,GAAM/D,KAAK4D,SACtBI,EAAU,GAAMhE,KAAK4D,SACrBK,GAAW,GAAMjE,KAAK4D,SAC5BF,EAAKQ,KAAK,CAAEP,IAAGE,SAAQC,QAAOC,UAASC,UAASC,YAElD,OAAOP,IACN,CAACxG,IAwBJ,OAtBAwE,aAAS,SAACsB,GAIRS,EAAUU,SAAQ,SAACC,EAAUvG,GAC3B,IAAM8F,EAAgDS,EAAhDT,EAAWG,GAAqCM,EAA7CP,OAA6CO,EAArCN,OAAOC,EAA8BK,EAA9BL,QAASC,EAAqBI,EAArBJ,QAASC,EAAYG,EAAZH,QAE1CN,EAAIS,EAAST,GAAKG,EAAQ,EAE1B,IAAMO,EAAIrE,KAAKsE,IAAIX,GACbY,EAAIvE,KAAKwE,IAAIb,GAAK3D,KAAKsE,IAAQ,EAAJX,GAAS,GAG1CJ,EAAMpF,SAASF,IAAI8F,EAASC,EAAUO,EAAGN,GACzCV,EAAMvF,MAAMC,IAAIoG,EAAGA,EAAGA,GACtBd,EAAM/D,SAASvB,IAAQ,EAAJoG,EAAW,EAAJA,EAAW,EAAJA,GACjCd,EAAMnF,eAEN2E,EAAK1E,QAAQC,YAAYT,EAAG0F,EAAMhF,WAEpCwE,EAAK1E,QAAQG,eAAeC,aAAc,KAG1C,mCACE,gCAAea,IAAKyD,EAAM7E,KAAM,CAAC,KAAM,KAAMhB,GAA7C,UACE,4CAA4BwC,OAAO,WAAWxB,KAAM,CAAC,GAAK,KAC1D,mCACEwB,OAAO,WACP+E,MAAM,UACN7E,QAAS,GACTD,aAAW,SAON,SAAS+E,EAAS/H,GAC/B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQR,EACZ,EAAmBS,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAG,IAA3C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAsBA,OApBAC,aAAS,YACU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WAEW,IAAbH,IACFJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAOhC,qCACE,cAAC/C,EAAD,CACE6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVN,SAAsBmE,GACpBnE,EAAQmE,IAUJ5C,QAASA,IAEX,gDAAOI,IAAKA,GAAS3C,GAArB,IAA4BoF,QAAS,KAArC,UACE,sBACEC,SAAUtB,EAAMiE,OAAO3C,SACvBK,QAASC,IACTJ,SAAUtB,EAAUgE,OAEtB,cAAC/B,EAAD,CAAO1E,SAAU,CAAC,EAAG,EAAG,GAAIH,MAAO,KACnC,2BACEyG,MAAO,UACPI,MAAO,IACPC,SAAU,GACVC,MAAO/E,KAAKC,GAAK,EACjBkC,YAAU,IAEZ,cAACmB,EAAD,CAAOpG,MAAO,SAEhB,6BDlFNsD,IAAQ+B,QAAQ9B,GCsFhBD,IAAQ+B,QAAQ9B,GCrJD,UAA0B,qCCiB1B,SAASuE,EAAQrI,GAC9B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQZ,EACZ,EAAmBa,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACI,cAAC/C,EAAD,CACJ6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAET,+CAAOI,IAAKA,GAAQ3C,GAApB,IAA4BoF,QAAS,KAArC,SACA,sBAAQM,QAASC,IAAYN,SAAUtB,EAAMuE,SAASjD,SAAUE,SAAUtB,EAAU,cAAe5C,MAAO,OAA1G,SACCrB,EAAMuI,iBAOX1E,IAAQ+B,QAAQ9B,GCjFD,UAA0B,yCCa1B,SAAS0E,EAAQxI,GAC9B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQf,EACZ,EAAmBgB,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACI,cAAC/C,EAAD,CACJ6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAET,gDAAOI,IAAKA,GAAS3C,GAArB,IAA4BoF,QAAS,KAArC,UACE,wBAAQ/D,MAAO,CAAC,IAAM,IAAM,MAA5B,UACE,sBAAMgE,SAAUtB,EAAM0E,UAAUpD,SAAUE,SAAUtB,EAAU,kBAC9D,sBAAMoB,SAAUtB,EAAM2E,UAAUrD,SAAUE,SAAUtB,EAAU,qBAEhE,sBACEoB,SAAUtB,EAAM4E,KAAKtD,SACrBE,SAAUxB,EAAM4E,KAAKpD,SACrB/D,SAAU,CAAC,GAAI,GAAK,MACpBqB,SAAU,CAACQ,KAAKC,GAAK,EAAGD,KAAKC,GAAK,GAAID,KAAKC,GAAK,YAOxDO,IAAQ+B,QAAQ9B,GCpFD,UAA0B,iCCa1B,SAAU8E,EAAK5I,GAC5B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQV,EACZ,EAAmBW,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACI,cAAC/C,EAAD,CACJ6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAET,+CAAOI,IAAKA,GAAS3C,GAArB,IAA4BoF,QAAS,KAArC,SACE,wBAAOvC,SAAU,EAAEQ,KAAKC,GAAK,EAAG,EAAG,GAAIjC,MAAO,IAA9C,UACE,sBAAMgE,SAAUtB,EAAM8E,SAASxD,SAAUE,SAAUtB,EAAU6E,cAC7D,sBAAMzD,SAAUtB,EAAMgF,SAAS1D,SAAUE,SAAUtB,EAAU,oBAC7D,sBAAMoB,SAAUtB,EAAMiF,SAAS3D,SAAUE,SAAUtB,EAAUgF,gBAC7D,sBAAM5D,SAAUtB,EAAMmF,SAAS7D,SAAUE,SAAUtB,EAAUkF,UAC7D,sBAAM9D,SAAUtB,EAAMqF,SAAS/D,SAAUE,SAAUtB,EAAUoF,aAC7D,sBAAMhE,SAAUtB,EAAMuF,SAASjE,SAAUE,SAAUtB,EAAU,uBAC7D,sBAAMoB,SAAUtB,EAAMwF,SAASlE,SAAUE,SAAUtB,EAAU,0BAC7D,sBAAMoB,SAAUtB,EAAMyF,SAASnE,SAAUE,SAAUtB,EAAU,yBAC7D,sBAAMoB,SAAUtB,EAAM0F,SAASpE,SAAUE,SAAUtB,EAAUyF,eAC7D,sBAAMrE,SAAUtB,EAAM4F,UAAUtE,SAAUE,SAAUtB,EAAU2F,aAC9D,sBAAMvE,SAAUtB,EAAM8F,UAAUxE,SAAUE,SAAUtB,EAAU,kBAC9D,sBAAMoB,SAAUtB,EAAM+F,UAAUzE,SAAUE,SAAUtB,EAAU,yBAC9D,sBAAMoB,SAAUtB,EAAMgG,UAAU1E,SAAUE,SAAUtB,EAAU+F,YAC9D,sBAAM3E,SAAUtB,EAAMkG,UAAU5E,SAAUE,SAAUtB,EAAUiG,YAC9D,sBAAM7E,SAAUtB,EAAMoG,UAAU9E,SAAUE,SAAUtB,EAAUmG,oBAOtEvG,IAAQ+B,QAAQ9B,GC3FD,UAA0B,mCCgB1B,SAASuG,EAAOrK,GAC7B,MAA6B6D,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACTD,EAAMrD,mBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQT,EACZ,EAAmBU,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACA,cAAC/C,EAAD,CACA6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAET,+CAAOI,IAAKA,GAAS3C,GAArB,IAA4BoF,QAAS,KAArC,SACE,sBAAMC,SAAUtB,EAAMuG,SAASjF,SAAUE,SAAUtB,EAAUqG,SAAUzH,SAAU,CAACQ,KAAKC,GAAG,EAAG,EAAG,GAAGjC,MAAO,CAAC,EAAE,EAAE,GAAGG,SAAU,CAAC,IAAM,GAAI,YAM7IqC,IAAQ+B,QAAQ9B,GC9ED,UAA0B,sCCoB1B,SAASyG,EAAUvK,GACXE,cAAbE,SAAR,IACA,EAA6ByD,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MACFC,GADN,EAAeC,UACHtD,oBACNa,EAAWb,iBAAO,CAAC,EAAG,EAAG,IACzBuD,EAAMvD,iBAAO,CAAC,EAAG,EAAG,IACtBwD,EAAQjB,EACZ,EAAmBkB,aAAgB,iBAAO,CACxCC,KAAM,EACN7C,SAAUxB,EAAMsE,cAChBzB,SAAU7C,EAAMuE,cAChBC,OAAQL,MAJV,mBAAOxB,EAAP,KAAY8B,EAAZ,KAMAxD,qBAAU,WAER,OADoBwD,EAAIjD,SAASkD,WAAU,SAACC,GAAD,OAAQnD,EAASE,QAAUiD,OAErE,IACH1D,qBAAU,WAER,OADoBwD,EAAI5B,SAAS6B,WAAU,SAACC,GAAD,OAAQT,EAAIxC,QAAUiD,OAEhE,IACH,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAiB7D,EAAjB,KACA,EAA8B4D,mBAAS,CAAC,EAAE,IAA1C,mBAAOrC,EAAP,KAAgBuC,EAAhB,KAwBA,OAtBAC,aAAS,YAEU,IAAbF,IACFb,EAAItC,QAAQF,SAASF,IACnBE,EAASE,QAAQ,GACjBF,EAASE,QAAQ,GACjBF,EAASE,QAAQ,IAEnBsC,EAAItC,QAAQmB,SAASvB,IAAI4C,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,GAAIwC,EAAIxC,QAAQ,IACrEoD,EAAW,CAACtD,EAASE,QAAQ,GAAIF,EAASE,QAAQ,KAClD+C,EAAIO,WACa,IAAbH,IAEJJ,EAAIQ,QACJR,EAAIjD,SAAS0D,KAAKlB,EAAItC,QAAQF,UAC9BiD,EAAI5B,SAASqC,KAAKlB,EAAItC,QAAQmB,cAQhC,qCACA,cAAC/C,EAAD,CACA6C,IAAKqB,EACLxD,UAAW2D,EACXvB,YAAa5C,EAAMsE,cACnBxB,YAAa9C,EAAMsE,cACnBtD,QAVF,SAAsBmE,GACpBnE,EAAQmE,IAUR5C,QAASA,IAEP,iDAAWvC,GAAX,IAAkBoF,QAAS,KAAMzC,IAAKA,EAAKtB,MAAO,EAAlD,SACE,sBACEqE,QAASC,IACTtE,MAAO,CAAC,IAAM,IAAK,KACnBgE,SAAUtB,EAAMuB,KAAKD,SACrBE,SAAUxB,EAAMuB,KAAKC,SACrBC,YAAU,EACVC,eAAa,UAQvB5B,IAAQ+B,QAAQ9B,GC3FD,UAA0B,kCCA1B,MAA0B,iCCS1B,SAAS0G,EAAKxK,GACbW,mBAAd,IACA,EAA6BkD,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UACf,EAAmBG,aAAgB,8BAAC,aAClCC,KAAM,GACHrE,GAF8B,IAGjC6C,SAAU,CAAC,EAAGQ,KAAKC,GAAI,GAEvBkB,OAAQ,CAEN,CAAErB,KAAM,WAAY3B,SAAU,CAAC,EAAG,EAAE,GAAID,KAAM,CAAC,IAAM,IAAM,GAAIsB,SAAS,CAACQ,KAAKC,GAAG,EAAE,EAAE,IACrF,CAAEH,KAAM,WAAY3B,SAAU,CAAC,EAAG,IAAK,IAAMD,KAAM,CAAC,IAAM,IAAM,IAAMsB,SAAS,EAAEQ,KAAKC,GAAG,EAAE,EAAE,IAC7F,CAAEH,KAAM,SAAU3B,SAAU,CAAC,EAAG,IAAK,KAAOD,KAAM,CAAC,IAAM,EAAG,GAAIsB,SAAS,EAAEQ,KAAKC,GAAG,EAAE,EAAE,UAT3F,mBAAOX,EAAP,UAaA,OACE,+CAAOA,IAAKA,GAAS3C,GAArB,IAA4BoF,QAAS,KAAMvC,SAAU,CAAC,EAAEQ,KAAKC,GAAG,GAAIjC,MAAO,GAA3E,SACE,sBACEgE,SAAUtB,EAAM0G,YAAYpF,SAC5BE,SAAUtB,EAAUyG,KACpBlJ,SAAU,CAAC,EAAG,IAAM,MACpBqB,SAAU,CAACQ,KAAKC,GAAK,EAAG,EAAG,GAC3BjC,MAAO,CAAC,GAAK,IAAK,IAClBmE,YAAU,EACVC,eAAa,OAMrB5B,IAAQ+B,QAAQ9B,GCpBD,SAAS6G,GAAM3K,GAC5B,IAAQI,EAAaF,cAAbE,SACFwK,EAAU,CAAC,EAAG,IAAK,IACzB,EAA6B/G,YAAQC,EAAM,eAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,UAEf,EAAcG,aAAgB,8BAAC,aAC7BC,KAAM,GACHrE,GAFyB,IAG5BwB,SAAU,CAAC,GAAI,GAAI,GACnBqB,SAAU,CAAC,GAAIQ,KAAKC,GAAK,EAAG,GAC5BkB,OAAQ,CACN,CACErB,KAAM,MACN3B,SAAU,CAAC,EAAG,GAAK,GACnBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAMqJ,GAER,CACEzH,KAAM,MACN3B,SAAU,CAAC,GAAI,KAAM,GACrBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAMqJ,GAER,CACEzH,KAAM,MACN3B,SAAU,CAAC,GAAI,KAAM,GACrBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAMqJ,GAER,CACEzH,KAAM,MACN3B,SAAU,CAAC,EAAG,KAAM,GACpBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAMqJ,GAER,CACEzH,KAAM,MACN3B,SAAU,EAAE,EAAG,EAAG,GAClBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAM,CAAC,EAAG,GAAI,KAEhB,CACE4B,KAAM,MACN3B,SAAU,EAAE,EAAG,EAAG,IAClBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAM,CAAC,GAAI,GAAI,IAEjB,CACE4B,KAAM,MACN3B,SAAU,EAAE,EAAG,GAAI,IACnBqB,SAAU,CAAC,EAAG,EAAG,GACjBtB,KAAM,CAAC,GAAI,GAAI,UA9CdoB,EAAP,oBAqDA,OACE,qCACE,wBACEA,IAAKA,EACLnB,SAAU,CAAC,GAAI,GAAI,GACnBH,MAAO,CAAC,EAAqB,EAAlBjB,EAASyK,OAAYzK,EAASE,OACzCuC,SAAU,CAAC,EAAGQ,KAAKC,GAAI,GAJzB,UAME,sBACE+B,SAAUtB,EAAM2C,QAAQrB,SACxBE,SAAUtB,EAAU6G,SACpBrF,eAAa,IAEf,sBACEJ,SAAUtB,EAAM0E,UAAUpD,SAC1BE,SAAUtB,EAAU0G,MACpBlF,eAAa,IAGf,sBACEJ,SAAUtB,EAAM2E,UAAUrD,SAC1BE,SAAUtB,EAAU,gBACpBuB,YAAU,EACVC,eAAa,IAEf,sBACEJ,SAAUtB,EAAMgH,UAAU1F,SAC1BE,SAAUtB,EAAU,gBACpBuB,YAAU,EACVC,eAAa,IAEf,sBACEJ,SAAUtB,EAAMiH,UAAU3F,SAC1BE,SAAUtB,EAAU,gBACpBuB,YAAU,EACVC,eAAa,IAEf,sBACEJ,SAAUtB,EAAMkH,UAAU5F,SAC1BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMmH,UAAU7F,SAC1BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMoH,UAAU9F,SAC1BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMqH,UAAU/F,SAC1BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMsH,UAAUhG,SAC1BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMuH,WAAWjG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMwH,WAAWlG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMyH,WAAWnG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAM0H,WAAWpG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAM2H,WAAWrG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAM4H,WAAWtG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAM6H,WAAWvG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAM8H,WAAWxG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAM+H,WAAWzG,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMgI,WAAW1G,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMiI,WAAW3G,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMkI,WAAW5G,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMmI,WAAW7G,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMoI,WAAW9G,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMqI,WAAW/G,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMsI,WAAWhH,SAC3BE,SAAUtB,EAAU,kBAEtB,sBACEoB,SAAUtB,EAAMuI,WAAWjH,SAC3BE,SAAUtB,EAAU,qBAIxB,+BACE6D,MAAO9H,EAAM8H,MACbyE,UAAW,GACXjM,MAAO,GACPuK,OAAyB,EAAjBzK,EAASE,MACjBkB,SAAU,CAAC,EAAG,EAAG,GACjBqB,SAAU,CAAC,EAAG,GAAIQ,KAAKC,GAAK,KAE9B,+BACEwE,MAAO9H,EAAM8H,MACbyE,UAAW,GACXjM,MAAO,GACPuK,OAAyB,EAAjBzK,EAASE,MACjBkB,SAAU,CAAC,GAAI,EAAG,KAClBqB,SAAU,CAAC,EAAG,GAAIQ,KAAKC,GAAK,KAE9B,+BACEwE,MAAO9H,EAAM8H,MACbyE,UAAW,GACXjM,MAAO,GACPuK,OAAyB,EAAjBzK,EAASE,MACjBkB,SAAU,CAAC,GAAI,GAAI,GACnBqB,SAAU,CAAC,EAAG,GAAIQ,KAAKC,GAAK,KAE9B,+BACEwE,MAAO9H,EAAM8H,MACbyE,UAAW,GACXjM,MAAO,GACPuK,OAAyB,EAAjBzK,EAASE,MACjBkB,SAAU,CAAC,GAAI,GAAI,GACnBqB,SAAU,CAAC,EAAG,GAAIQ,KAAKC,GAAK,QAMpCO,IAAQ+B,QAAQ9B,G,IC7OZ0I,G,yDACJA,GAAkB,CAAC,GAAI,IAAK,IAAK,I,ICgB7BA,G,kBAIJ,SAASC,GAAgBzM,GACvB,IAAM2C,EAAMhC,iBAAO,MACnB,EAA2C+L,eAAnCC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,gBACnBpL,EAAW,EACXqL,EAAQ,EACRC,EAAM,EACNvG,EAAW,EAyBf,OAxBAxB,aAAS,WACP8H,EAAQlK,EAAIjB,QAAQF,SAASW,GAC7BoE,GAAY,MACG,IACbA,EAAW,GAEToG,IACe,IAAbnL,EACFA,EAAW,EAEXA,KAGAoL,IACe,IAAbpL,EACFA,EAAW,EAEXA,KAGJsL,EAAMN,GAAgBhL,GACtBmB,EAAIjB,QAAQF,SAASW,EAAIqE,YAAUC,KAAKoG,EAAOC,EAAKvG,MAIpD,cAACwG,GAAA,EAAD,CACEpK,IAAKA,EACLqK,aAAW,EACXC,IAAK,GACLzL,SAAU,CAAC,EAAG,EAAG,IACjBqB,SAAU,CAAC,EAAG,EAAG,KAqBR,SAASqK,GAAMlN,GAC5B,MD9Ea,SAAoBmN,EAAQnN,GACzC,MAAqBoN,sBAAU,iBAAO,CAAEjL,EAAG,EAAGkL,OAAQA,UAAOC,SAA7D,mBAASnL,EAAT,KAASA,EAAKb,EAAd,KAOIiM,EAAQ,EACNC,EAAKC,uBACT,YAA0F,IAA/EC,EAA8E,cAAtFC,GAAsF,MAA5DC,EAA4D,cAAzEC,SAAyE,MAA1CC,EAA0C,cAAvD5L,SAAuD,MAA3B6L,EAA2B,EAAnC3L,MAAmC,IAArB4L,YAAqB,MAAd7L,EAAE8L,MAAY,EACjFC,EAAOC,KAAK,WAAL,GAAMH,EAAON,EAAKE,GAAlB,oBAAyBT,KAsBtC,OArBGY,IACED,EAAO,EAGPP,IAGDA,IAECA,EAAQ,IACTA,EAAQ,GAEPA,EAAQ,IACTA,EAAQ,IAOZjM,EAAI,CAAEa,EAAGqK,GAAgBe,KAClBW,IAET,CAACf,EAAQhL,EAAGb,IAEV8M,GAAM,EAoCJrM,GAnCM0L,uBACV,YAA0E,IAA7DC,EAA4D,cAAtEW,KAAsE,MAA3BN,GAA2B,cAAvD7L,SAAuD,QAAnCE,OA6BpC,YA7BuE,MAArB4L,MAAO7L,EAAE8L,MAExDF,IACDK,GAAM,GAGHV,EAAK,GAAKU,GAGVb,IACAa,GAAM,GAEAV,EAAK,GAAIU,IAChBb,IACAa,GAAM,GAGLb,EAAQ,IACTA,EAAQ,GAEPA,EAAQ,IACTA,EAAQ,GAOZjM,EAAI,CAAEa,EAAGqK,GAAgBe,KAClBf,GAAgBe,KAEzB,CAACJ,EAAQhL,EAAGb,IAGDU,aAAW,CAAEsM,QAASd,GAAKxN,IAExC,OADAiB,qBAAU,kBAAMjB,GAASA,EAAMuO,WAAaxM,MAAQ,CAAC/B,EAAO+B,IACrD,CAACI,EAAGJ,GCGCyM,CAAW,EAAE,KAAM,GAAI,CAAED,UAAWE,SAAzCtM,EAAP,oBACA,EAA0ByC,mBAAS,CAAEkD,MAAO,KAA5C,mBAUMpH,GAVN,UAUiBE,qBAAWC,KAEtB6N,EAAmB,SAAChH,EAAGV,GACtBtG,EAASiO,KAAKrM,cACjB5B,EAAS2B,QAAT,aACEuM,QAAQ,EACRC,QAASnH,EACToH,MAAO9H,GACJtG,EAAS4B,gBAKZyM,EAAoB,WACxBrO,EAAS2B,QAAT,qCACEuM,QAAQ,GACLlO,EAASmO,SACTnO,EAASoO,OACTpO,EAAS4B,gBAIhBrB,qBAAU,cAAU,CAACP,IAErB,IAAMsO,EAAWpO,qBAAWqO,IAE5B,OACE,qCACE,cAAC,KAAEC,MAAH,CAAS,aAAY/M,EAAEgN,IAAG,SAAChN,GAAD,OAAOA,KAAjC,SACE,cAACsK,GAAD,MAGF,iCACA,2BACE3E,MAAO,UACPtG,SAAU,CAAC,EAAG,EAAG,GACjB4G,MAAO/E,KAAKC,GACZ8L,SAAU,EACVvM,SAAU,CAAC,EAAG,EAAG,GACjBqF,MAAO,IAET,cAAC,IAAD,UACE,eAAC,WAAD,CAAUmH,SAAU,KAApB,UACE,cAAC,GAAD,CAAcvH,MAAOkH,EAASlH,QAC9B,cAAC0C,EAAD,CAAMhJ,SAAU,EAAE,GAAI,IAAK,MAC3B,cAACgJ,EAAD,CAAMhJ,SAAU,CAAC,GAAI,IAAK,MAC1B,cAACgJ,EAAD,CAAMhJ,SAAU,CAAC,GAAI,IAAK,MAE1B,cAAC,EAAD,CACE8C,cAAe,EAAE,GAAI,IAAK,GAC1BC,cAAe,CAAC,GAAIlB,KAAKC,GAAK,EAAG,GACjCgM,cAAe,WACbZ,ECtIV,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,uCAAf,kYDqImC,kCAE7BC,aAAc,WACZT,OAGK,cAAC,EAAD,CACPzK,cAAe,CAAC,GAAI,IAAK,GACzBC,cAAe,CAAC,EAAGlB,KAAKC,GAAK,EAAG,GAChCgM,cAAe,WACX7M,QAAQC,IAAI,SACZgM,ECpHZ,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,gCAAf,2VDmH0C,qCAGpCC,aAAc,WAEVT,OAIN,cAAC,EAAD,CAAiBzK,cAAe,CAAC,GAAG,GAAG,KACvC,cAAC,EAAD,CACEA,cAAe,CAAC,GAAI,IAAK,GACzBC,cAAe,CAAC,GAAIlB,KAAKC,GAAK,EAAG,GACjCgM,cAAe,WACbZ,ECjJV,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,gCAAf,6eDkJU,sDAGJC,aAAc,WACZT,OAGJ,cAAC,EAAD,CACEzK,cAAe,CAAC,GAAI,GAAI,GACxBgL,cAAe,WACbZ,ECjIV,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,gCAAf,kQDgIqC,iBAE/BC,aAAc,WACZT,KAEFU,QAAS,WACPhB,OAAOiB,KAAK,4CAIhB,cAAC,EAAD,CACEpL,cAAe,CAAC,GAAI,GAAI,GACxBC,cAAe,EAAElB,KAAKC,GAAK,EAAG,EAAG,GACjCmM,QAAS,WACPhB,OAAOiB,KAAK,mDAGhB,cAAC,EAAD,CACEpL,cAAe,EAAE,GAAI,GAAI,GACzBC,cAAe,CAAClB,KAAKC,GAAK,EAAG,EAAG,GAChCmM,QAAS,WACPhB,OAAOiB,KAAK,2CAIhB,cAAC,EAAD,CACEpL,cAAe,CAAC,EAAG,EAAG,GACtBC,cAAe,CAAClB,KAAKC,GAAK,KAAMD,KAAKC,GAAK,EAAG,GAC7CgM,cAAe,WACbZ,ECnNV,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,iCAAf,+NDkNsC,qCAEhCC,aAAc,WACZT,OAGJ,cAAC,EAAD,CACEzK,cAAe,CAAC,GAAI,GAAI,GACxBgL,cAAe,WACbZ,EC3JV,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,gCAAf,wcD0JuC,WAEjCC,aAAc,WACZT,KAEFU,QAAS,WACPhB,OAAOiB,KAAK,gEAGhB,cAAC,EAAD,CACEpL,cAAe,EAAE,GAAI,GAAI,GACzBgL,cAAe,WACbZ,ECxJV,qBAAKa,UAAU,oBAAf,SACE,sBAAMA,UAAS,gCAAf,scDuJwC,iBAElCC,aAAc,WACZT,KAEFU,QAAS,WACPhB,OAAOiB,KAAK,+DE9OX,SAASC,GAAW3P,GACjC,IAAM4P,EAAUC,IAAMjP,WAAWC,IAMjC,OAJAI,qBAAU,WACRwB,QAAQC,IAAIkN,KACX,CAACA,IAGF,mCACE,qBAAKL,UAAS,uCAAd,SACE,qBACEA,UAAS,uEAAkEK,EAAQjB,KAAKC,OAAS,kBAAoB,oBADvH,SAGE,sBAAKW,UAAU,oEAAf,UACE,sBAAMA,UAAS,2EAAf,SAA8FK,EAAQjB,KAAKG,QAE1Gc,EAAQjB,KAAKE,iBFI1BrC,GAAkB,CAAC,GAAI,IAAM,IAAM,I,cGtBpB,OAA0B,sC,SCsBnCsD,GAAc,CAClBnB,KAAM,CACJC,QAAQ,EACRC,QAAS,kBAAM,kBAAMpM,QAAQC,IAAI,aACjCoM,MAAO,GACPxM,cAAc,GAEhBD,QAAS,SAACgE,MAEN0J,GAAgB,CACpBjI,MAAO,UACPkI,SAAU,SAAC3J,MAGAxF,GAAcgP,IAAMI,cAAcH,IAClCb,GAAgBY,IAAMI,cAAcF,IACjD,SAASG,KACP,IAAMC,EAAgBC,YAAiBvP,GAAaoO,IAEpD,OACE,qCACE,sBAAKM,UAAU,6BAAf,UACE,cAAC,IAAD,CAAQc,SAAO,EAACC,UAAU,SAA1B,SAEE,cAACH,EAAD,UACE,cAACjD,GAAD,QAIJ,cAACqD,EAAA,EAAD,OAEF,cAACC,GAAD,OAIN,SAASA,KACP,IAAMxB,EAAWpO,qBAAWqO,IACtBwB,EAAS,CAAC,UAAW,UAAW,UAAW,WAcjD,OAHAxP,qBAAU,cAEP,CAAC+N,EAASlH,QAEX,mCACE,qBAAKyH,UAAU,yBAAf,SACE,cAACmB,GAAA,EAAD,CAEEjB,QAAS,WAjBwB,IAAnCgB,EAAOE,QAAQ3B,EAASlH,OAC1BkH,EAASgB,SAASS,EAAO,IAGzBzB,EAASgB,SAASS,EAAOA,EAAOE,QAAQ3B,EAASlH,OAAS,KAgBtDyH,UAAU,mBALZ,SAOC,qBAAKqB,IAAKC,GAAKtB,UAAU,aAAauB,IAAI,cAMpC,SAASC,GAAa/Q,GACnCiB,qBAAU,WACJ+P,GAAYC,cACdC,KAAQC,SAASnR,EAAMoR,SAASC,UAChCL,GAAYM,gBAAe,MAE5B,IACH,MAAwB1M,mBAASkL,GAAYnB,MAA7C,mBAAOA,EAAP,KAAatM,EAAb,KACA,EAA0BuC,mBAASmL,GAAcjI,OAAjD,mBAAOA,EAAP,KAAckI,EAAd,KACA,OACE,mCACE,cAACnP,GAAY0Q,SAAb,CAAsBC,MAAO,CAAE7C,OAAMtM,WAArC,SACE,eAAC4M,GAAcsC,SAAf,CAAwBC,MAAO,CAAE1J,QAAOkI,YAAxC,UACE,cAACE,GAAD,IACA,cAACP,GAAD,WClGVuB,KAAQO,WAAW,gBAEnB,IAAMC,GAAc,CAClBT,aAAa,EACbK,eAAgB,cAELN,GAAcf,wBAAcyB,IAY1B,IAAIC,qBAXF,SAAAC,GACfA,EAAKC,aAAarK,SAAQ,SAAAsK,GACxBrP,QAAQC,IAAIoP,GACVZ,KAAQa,OAAO,CACbC,SAAU,yBACVC,SAAUH,EAAMI,KAChBV,MAAOM,EAAMK,oBAMZC,QAAQ,CAACC,WAAY,KA+BfC,OAtBf,WACErR,qBAAU,WACRsR,SAASzD,MAAQ,mCAChB,IACH,MAAsClK,oBAAS,GAA/C,mBAAOqM,EAAP,KAAoBK,EAApB,KACA,OACE,mCAGE,cAACN,GAAYO,SAAb,CACEC,MAAO,CACLP,YAAaA,EACbK,eAAgB,kBAAMA,GAAe,KAHzC,SAME,qBAAK/B,UAAU,sEAAf,SACE,cAACwB,GAAD,WCnCKyB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFZ,SAASa,eAAe,SAM1BZ,O","file":"static/js/main.29979ee0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DSlanyard.bf0a8265.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n  useState,\r\n} from \"react\";\r\nimport { useThree, instancedMesh } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useGesture } from \"@use-gesture/react\";\r\nimport { Cone } from \"@react-three/drei\";\r\nimport { TextContext } from \"../Helpers/SceneWrapper\";\r\nconst tempObject = new THREE.Object3D();\r\n//Know the problem isn't the BoxContent, or the way they are imported. Makes it very strange where this issue is coming from\r\n/*\r\nWhen dragging one after dragging another one, its like it thinks im still dragging the previous ones\r\nThe stop drag is being called. \r\n\r\n*/\r\nexport const SimpleGeometry = forwardRef((props, forwarded) => {\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n  var count = props.colliders.length;\r\n  let [currentPosx, currentPosy] = [0, 0];\r\n  const mesh = useRef();\r\n\r\n  const tcontext = useContext(TextContext);\r\n  const handleDisableText = () => {\r\n    tcontext.setText({ enable: false, ...tcontext.content, ...tcontext.title });\r\n  };\r\n\r\n  let dragged = false;\r\n  const handleChange = () => {\r\n    props.setDrag(dragged);\r\n  };\r\n  useEffect(() => {\r\n    let i = 0;\r\n    for (let x = 0; x < count; x++) {\r\n      const id = i++;\r\n\r\n      tempObject.scale.set(\r\n        props.colliders[x].args[0],\r\n        props.colliders[x].args[1],\r\n        props.colliders[x].args[2]\r\n      );\r\n      tempObject.position.set(\r\n        props.colliders[x].position[0],\r\n        props.colliders[x].position[1],\r\n        props.colliders[x].position[2]\r\n      );\r\n      tempObject.updateMatrix();\r\n\r\n      forwarded.current.setMatrixAt(id, tempObject.matrix);\r\n\r\n      forwarded.current.instanceMatrix.needsUpdate = true;\r\n    }\r\n  });\r\n  const bind = useGesture({\r\n    onDrag: ({ movement: [x, y], first: intial }) => {\r\n      tcontext.setText({ ...tcontext, beingDragged: true });\r\n      dragged = true;\r\n      handleChange();\r\n\r\n      forwarded.current.position.set(\r\n        ((x - currentPosx) / aspect) * 1.2 + props.lastPos[0],\r\n        ((currentPosy - y) / aspect) * 1.2 + props.lastPos[1],\r\n        0\r\n      );\r\n    },\r\n    onDragEnd: ({}) => {\r\n      tcontext.setText({ ...tcontext, beingDragged: false });\r\n      dragged = false;\r\n      console.log(\"false\");\r\n      handleChange();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <instancedMesh\r\n      ref={forwarded}\r\n      {...bind()}\r\n      position={props.positionCol}\r\n      rotation={props.rotationCol}\r\n      setDrag={handleChange}\r\n      args={[null, null, count]}\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\"></boxBufferGeometry>\r\n      <meshStandardMaterial transparent={true} opacity={0} attach=\"material\" />\r\n    </instancedMesh>\r\n  );\r\n});\r\n","\r\nexport const LanyardBoxes = [{ \r\n    type: \"Box\", position: [0, -0.8, 0], args: [0.3, 7, 5.5] },\r\n     { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\r\n]\r\n\r\nexport const PlacardBoxes = [\r\n    {\r\n      type: \"Box\",\r\n      position: [1, -1, 0],\r\n      args: [0.5, 3, 11],\r\n      rotation: [0, 0, -Math.PI / 10],\r\n    },\r\n    { type: \"Box\", position: [0, 0, 0], args: [1, 1, 10] },\r\n]\r\n\r\nexport const LIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [1,0.2,-1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\nexport const GIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [-1,-.2,1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const ShipBoxes = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [2.3, 2.3,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const PlainImages = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [2.5, 2.5,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\n\r\nexport const HologramBoxes = [{ type: \"Box\", position: [0, 0, 0], args: [1.2, 0.7, 1.2] }]","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState, forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./DSlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {LanyardBoxes} from \"../settings/Boxes\"\n\nexport default function LanyardDS(props){\n  const { viewport } = useThree();\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      \n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n      <group ref={ref} {...props}  dispose={null} scale={1}>\n      <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n        scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n        raycast={meshBounds}\n      />\n    </group>\n\n    </>\n  );\n  }\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/Researchlanyard.18f0ebfb.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./Researchlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {LanyardBoxes} from \"../settings/Boxes\"\nexport default function Lanyard(props){\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  });\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  });\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n \n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      console.log(\"Start dragging BL\")\n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n      <group  ref={ref} dispose={null} scale={1}>\n        <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          castShadow\n          receiveShadow\n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/frog.f2e3e0aa.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { PlainImages } from \"../settings/Boxes\";\nimport model from './frog.glb'\n\n\nexport default function Frog(props){\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlainImages;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n    <mesh geometry={nodes.frog.geometry} material={materials.frog} rotation={[Math.PI/2, 0, 0]}position={[0.08, 0, -0.2]} scale={[3,1,3]}/>\n  </group>\n\n    </>\n  );\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/gitIcon.26e7b6f0.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef  } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { GIcon } from \"../settings/Boxes\";\n\nimport model from './gitIcon.glb'\n\n\nexport default function GitIcon(props) {\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = GIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref}  {...props} dispose={null}>\n      <mesh raycast={meshBounds} geometry={nodes.Curve.geometry} material={materials['SVGMat.001']}rotation={[0, Math.PI, 0]} scale={[300.04, 70.11, 300.04]} />\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/hologram.6548de69.glb\";","export default __webpack_public_path__ + \"static/media/smallerLogo.a9380f49.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef , useEffect} from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./smallerLogo.glb\";\nimport * as THREE from \"three\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 3.7) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <=3) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.0008;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        2,\n        progress\n      );\n    } else {\n      progress += 0.002;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        4,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group>\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n        castShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useMemo, useState, forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./hologram.glb\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport Model from \"./SmallerLogo\";\nimport * as THREE from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport { HologramBoxes } from \"../settings/Boxes\";\n\nfunction Swarm({ count }) {\n  const mesh = useRef();\n  const light = useRef();\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  let newY = 0;\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  // Generate some random positions, speed factors and timings\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -0.5 + Math.random();\n      const yFactor = 0.7 + Math.random();\n      const zFactor = -0.3 + Math.random();\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor });\n    }\n    return temp;\n  }, [count]);\n  // The innards of this hook will run every frame\n  useFrame((state) => {\n    // Makes the light follow the mouse\n\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n\n      const s = Math.cos(t);\n      const b = Math.sin(t) + Math.cos(t * 2) / 25;\n\n      // Update the dummy object\n      dummy.position.set(xFactor, yFactor + b, zFactor);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 3, s * 3, s * 3);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#065b8d\"\n          opacity={0.5}\n          transparent\n        />\n      </instancedMesh>\n    </>\n  );\n}\n\nexport default function Hologram(props) {\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = HologramBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0, 0]);\n\n  useFrame(() => {\n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]);\n      setLastPos([position.current[0], position.current[1]]);\n      api.wakeUp();\n    }\n    if (dragging === true) {\n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={props.positionOfObj}\n        rotationCol={props.positionOfObj}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n      <group ref={ref} {...props} dispose={null}>\n        <mesh\n          geometry={nodes.Sphere.geometry}\n          raycast={meshBounds}\n          material={materials.legs}\n        />\n        <Model position={[0, 2, 0]} scale={0.2} />\n        <spotLight\n          color={\"#03fcec\"}\n          power={100}\n          distance={10}\n          angle={Math.PI / 6}\n          castShadow\n        />\n        <Swarm count={10} />\n      </group>\n      <group></group>\n    </>\n  );\n}\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/linkicon.ffac2a2f.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./linkicon.glb\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LIcon } from \"../settings/Boxes\";\n\n\n\nexport default function LnIcon (props){\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref}{...props}  dispose={null}>\n    <mesh   raycast={meshBounds} geometry={nodes.Curve001.geometry} material={materials['SVGMat.002']} scale={300.24} >\n    {props.children}\n      </mesh>\n  </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/placardDraco.8539c738.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport {SimpleGeometry} from './SimpleBox';\nimport model from \"./placardDraco.glb\";\nimport {PlacardBoxes} from \"../settings/Boxes\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\n\nexport default function Placard(props){\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlacardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <group  scale={[0.95, 0.09, 5.98]}>\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.001']} />\n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.003']} />\n      </group>\n      <mesh\n        geometry={nodes.Text.geometry}\n        material={nodes.Text.material}\n        position={[.2, 0.1, 4.11]}\n        rotation={[Math.PI / 2, Math.PI / 2, -Math.PI / 2]}\n      />\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/ship.3b64121a.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef  } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from './ship.glb'\nimport {useBox, Debug, useTrimesh, useCompoundBody} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { ShipBoxes } from \"../settings/Boxes\";\nimport { SimpleGeometry } from \"./SimpleBox\";\n\n\nexport default function  Ship(props){\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = ShipBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.15}>\n        <mesh geometry={nodes.Mesh_0_1.geometry} material={materials.M_Catherine} />\n        <mesh geometry={nodes.Mesh_0_2.geometry} material={materials['M_Fabric-Sails']} />\n        <mesh geometry={nodes.Mesh_0_3.geometry} material={materials.M_WoodCeiling} />\n        <mesh geometry={nodes.Mesh_0_4.geometry} material={materials.M_Glass} />\n        <mesh geometry={nodes.Mesh_0_5.geometry} material={materials.M_Metal_02} />\n        <mesh geometry={nodes.Mesh_0_6.geometry} material={materials['M_WoodPainted-Red']} />\n        <mesh geometry={nodes.Mesh_0_7.geometry} material={materials['M_WoodPainted-Yellow']} />\n        <mesh geometry={nodes.Mesh_0_8.geometry} material={materials['M_WoodPainted-Black']} />\n        <mesh geometry={nodes.Mesh_0_9.geometry} material={materials.M_ManilaRope} />\n        <mesh geometry={nodes.Mesh_0_10.geometry} material={materials.M_Metal_01} />\n        <mesh geometry={nodes.Mesh_0_11.geometry} material={materials['M_Wood-Floor']} />\n        <mesh geometry={nodes.Mesh_0_12.geometry} material={materials['M_WoodPainted-White']} />\n        <mesh geometry={nodes.Mesh_0_13.geometry} material={materials.M_Wood_01} />\n        <mesh geometry={nodes.Mesh_0_14.geometry} material={materials.M_Wood_02} />\n        <mesh geometry={nodes.Mesh_0_15.geometry} material={materials.Material} />\n      </group>\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/trowel.f040f18c.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState, forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { PlainImages } from \"../settings/Boxes\";\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport model from './trowel.glb'\n\n\n\nexport default function Trowel(props){\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlainImages;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <mesh geometry={nodes.Untitled.geometry} material={materials.Untitled} rotation={[Math.PI/2, 0, 0]}scale={[3,1,3]}position={[0.08, 0, -0.2]} />\n    </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/XRLanyard.1acaccfc.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState,forwardRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./XRLanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LanyardBoxes } from \"../settings/Boxes\";\n\n\nexport default function LanyardXR(props){\n  const { viewport } = useThree();\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: props.positionOfObj,\n    rotation: props.rotationOfObj,\n    shapes: boxes,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={props.positionOfObj}\n    rotationCol={props.positionOfObj}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n      <group {...props} dispose={null} ref={ref} scale={1}>\n        <mesh\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          castShadow\n          receiveShadow\n  \n        />\n      </group>\n\n    </>\n  );\n}\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/shelf.b1c9aef5.glb\";","export default __webpack_public_path__ + \"static/media/hook.e8b78764.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./hook.glb\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Hook(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    rotation: [0, Math.PI, 0],\n    \n    shapes: [\n\n      { type: \"Cylinder\", position: [0, 0,1], args: [0.13, 0.13, 1], rotation:[Math.PI/2,0,0] },\n      { type: \"Cylinder\", position: [0, 0.16,0.3], args: [0.13, 0.13, 0.5], rotation:[-Math.PI/5,0,0] },\n      { type: \"Sphere\", position: [0, 0.55,0.05], args: [0.15, 4, 4], rotation:[-Math.PI/4,0,0] },\n    ],\n  }));\n\n  return (\n    <group ref={ref} {...props} dispose={null} rotation={[0,Math.PI,0]} scale={0.3}>\n      <mesh\n        geometry={nodes.Cylinder001.geometry}\n        material={materials.hook}\n        position={[0, 0.05, 3.46]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.4, 1.5, 0.4]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, useMemo, useEffect, useState } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport model from \"./shelf.glb\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport {\r\n  useBox,\r\n  Debug,\r\n  useTrimesh,\r\n  useCompoundBody,\r\n  useConvexPolyhedron,\r\n} from \"@react-three/cannon\";\r\nimport Hook from \"./Hook\";\r\nimport * as Models from \"../Helpers/GLBReroute\";\r\nimport state from \"../../hooks/layout\";\r\n\r\nexport default function Shelf(props) {\r\n  const { viewport } = useThree();\r\n  const boxSize = [5, 1.2, 25];\r\n  const { nodes, materials } = useGLTF(model,'/draco-gltf');\r\n\r\n  const [ref] = useCompoundBody(() => ({\r\n    mass: 0,\r\n    ...props,\r\n    position: [0, -22, 0],\r\n    rotation: [0, -Math.PI / 2, 0],\r\n    shapes: [\r\n      {\r\n        type: \"Box\",\r\n        position: [0, 0.2, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [0, -13.7, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [0, -29.5, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [0, 14.4, 0],\r\n        rotation: [0, 0, 0],\r\n        args: boxSize,\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [-2, 0, 0],\r\n        rotation: [0, 0, 0],\r\n        args: [1, 60, 30],\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [-2, 0, 13],\r\n        rotation: [0, 0, 0],\r\n        args: [30, 60, 1],\r\n      },\r\n      {\r\n        type: \"Box\",\r\n        position: [-2, 0, -13],\r\n        rotation: [0, 0, 0],\r\n        args: [30, 60, 1],\r\n      },\r\n    ],\r\n  }));\r\n  /*   \r\n            \r\n  */\r\n  return (\r\n    <>\r\n      <group\r\n        ref={ref}\r\n        position={[0, -30, 0]}\r\n        scale={[3, viewport.height * 4, viewport.width]}\r\n        rotation={[0, Math.PI, 0]}\r\n      >\r\n        <mesh\r\n          geometry={nodes.Cube001.geometry}\r\n          material={materials.Exterior}\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_1.geometry}\r\n          material={materials.Shelf}\r\n          receiveShadow\r\n        />\r\n\r\n        <mesh\r\n          geometry={nodes.Cube001_2.geometry}\r\n          material={materials[\"Material.004\"]}\r\n          castShadow\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_3.geometry}\r\n          material={materials[\"Material.001\"]}\r\n          castShadow\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_4.geometry}\r\n          material={materials[\"Material.005\"]}\r\n          castShadow\r\n          receiveShadow\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_5.geometry}\r\n          material={materials[\"Material.007\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_6.geometry}\r\n          material={materials[\"Material.006\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_7.geometry}\r\n          material={materials[\"Material.011\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_8.geometry}\r\n          material={materials[\"Material.010\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_9.geometry}\r\n          material={materials[\"Material.009\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_10.geometry}\r\n          material={materials[\"Material.008\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_11.geometry}\r\n          material={materials[\"Material.016\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_12.geometry}\r\n          material={materials[\"Material.015\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_13.geometry}\r\n          material={materials[\"Material.014\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_14.geometry}\r\n          material={materials[\"Material.013\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_15.geometry}\r\n          material={materials[\"Material.021\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_16.geometry}\r\n          material={materials[\"Material.020\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_17.geometry}\r\n          material={materials[\"Material.019\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_18.geometry}\r\n          material={materials[\"Material.018\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_19.geometry}\r\n          material={materials[\"Material.026\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_20.geometry}\r\n          material={materials[\"Material.025\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_21.geometry}\r\n          material={materials[\"Material.024\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_22.geometry}\r\n          material={materials[\"Material.023\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_23.geometry}\r\n          material={materials[\"Material.031\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_24.geometry}\r\n          material={materials[\"Material.030\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_25.geometry}\r\n          material={materials[\"Material.029\"]}\r\n        />\r\n        <mesh\r\n          geometry={nodes.Cube001_26.geometry}\r\n          material={materials[\"Material.028\"]}\r\n        />\r\n      </group>\r\n\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={viewport.width * 2}\r\n        position={[0, 6, 0]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={viewport.width * 2}\r\n        position={[0, -9, 2.5]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={viewport.width * 2}\r\n        position={[0, -24, 0]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n      <rectAreaLight\r\n        color={props.color}\r\n        intensity={0.5}\r\n        width={55}\r\n        height={viewport.width * 2}\r\n        position={[0, -38, 0]}\r\n        rotation={[0, 0, -Math.PI / 2]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(model);\r\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -30, -44]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","import * as Models from \"./Helpers/GLBReroute\";\r\nimport Hook from \"./Models/Hook\";\r\nimport { useGLTF, PerspectiveCamera, Html } from \"@react-three/drei\";\r\nimport React, {\r\n  useRef,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  Suspense,\r\n} from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport {Physics } from \"@react-three/cannon\";\r\nimport useScrollY from \"../hooks/useScrollY\";\r\nimport { MathUtils } from \"three\";\r\nimport { useScrollDirection } from \"react-use-scroll-direction\";\r\nimport { a } from \"@react-spring/three\";\r\nimport { TextContext, CanvasContext } from \"./Helpers/SceneWrapper\";\r\nimport { DSText, FrogText, introText, ResearchText, SeaVentures, TrowelText, XRText } from \"./HtmlBS/HoverText\";\r\nimport { ButtonContext } from \"./Helpers/SceneWrapper\";\r\n\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -0.3, -0.6, -0.9];\r\n\r\n//TODO Fix shelf button color changer\r\nfunction ScrollingCamera(props) {\r\n  const ref = useRef(null);\r\n  const { isScrollingUp, isScrollingDown } = useScrollDirection();\r\n  let position = 0;\r\n  let start = 0;\r\n  let end = 0;\r\n  let progress = 0;\r\n  useFrame(() => {\r\n    start = ref.current.position.y;\r\n    progress += 0.001;\r\n    if (progress > 1) {\r\n      progress = 0;\r\n    }\r\n    if (isScrollingUp) {\r\n      if (position === 0) {\r\n        position = 3;\r\n      } else {\r\n        position--;\r\n      }\r\n    }\r\n    if (isScrollingDown) {\r\n      if (position === 3) {\r\n        position = 0;\r\n      } else {\r\n        position++;\r\n      }\r\n    }\r\n    end = cameraPositions[position];\r\n    ref.current.position.y = MathUtils.lerp(start, end, progress);\r\n  });\r\n\r\n  return (\r\n    <PerspectiveCamera\r\n      ref={ref}\r\n      makeDefault\r\n      fov={60}\r\n      position={[0, 0, 20]}\r\n      rotation={[0, 0, 0]}\r\n    />\r\n  );\r\n}\r\nfunction Button(){\r\n  //here the guy clicks the button\r\n  let clicks = 0;\r\n  //its get clicked\r\n  clicks++\r\n\r\n}\r\nfunction ShowClicks(props){\r\n    Scene(props);\r\n\r\n}\r\n/* \r\nState won't change no matter what I try. It is pretty annoying.\r\nUsing a function/const to handle the setText doesn't work.\r\nI'm kinda tired of this. Props maybe? Shit will look pretty bad.\r\nProblem is with context. Not being passed in. useSate by itself works.\r\n*/\r\nexport default function Scene(props) {\r\n  const [y] = useScrollY([-2400, 0], { domTarget: window });\r\n  const [color, setstate] = useState({ color: \"\" });\r\n/*   const changeState = () => {\r\n    if (colors.includes(color.color)) {\r\n      setstate({ color: colors[colors.indexOf(color.color) + 1] });\r\n    } else {\r\n      setstate({ color: colors[0] });\r\n    }\r\n  };\r\n  const colors = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\", \"#ffffff\"]; */\r\n\r\n  const tcontext = useContext(TextContext);\r\n\r\n  const handleEnableText = (s, t) => {\r\n    if (!tcontext.text.beingDragged) {\r\n      tcontext.setText({\r\n        enable: true,\r\n        content: s,\r\n        title: t,\r\n        ...tcontext.beingDragged,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDisableText = () => {\r\n    tcontext.setText({\r\n      enable: false,\r\n      ...tcontext.content,\r\n      ...tcontext.title,\r\n      ...tcontext.beingDragged,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {}, [tcontext]);\r\n\r\n  const bcontext = useContext(ButtonContext)\r\n//POsition button in middle of shelf\r\n  return (\r\n    <>\r\n      <a.group position-y={y.to((y) => y)}>\r\n        <ScrollingCamera />\r\n      </a.group>\r\n\r\n      <ambientLight />\r\n      <spotLight\r\n        color={\"#ffffff\"}\r\n        position={[0, 0, 8]}\r\n        angle={Math.PI}\r\n        penumbra={1}\r\n        rotation={[0, 0, 0]}\r\n        power={4}\r\n      />\r\n      <Physics>\r\n        <Suspense fallback={null}>\r\n          <Models.Shelf color={bcontext.color} />\r\n          <Hook position={[-8, -11, -0.3]} />\r\n          <Hook position={[0, -11, -0.3]} />\r\n          <Hook position={[8, -11, -0.3]} />\r\n \r\n          <Models.LanyardDS\r\n            positionOfObj={[-8, -14, -1]}\r\n            rotationOfObj={[0, -Math.PI / 2, 0]}\r\n            onPointerOver={() => {\r\n              handleEnableText(DSText(), \"Digital Scholarship Developer\");\r\n            }}\r\n            onPointerOut={() => {\r\n              handleDisableText();\r\n            }}\r\n          />\r\n                   <Models.Lanyard\r\n            positionOfObj={[0, -14, -1]}\r\n            rotationOfObj={[0, Math.PI / 2, 0]}\r\n            onPointerOver={() => {\r\n                console.log(\"ASdas\")\r\n                handleEnableText(ResearchText(),\"Research and Technical Asisstant\");\r\n\r\n            }}\r\n            onPointerOut={() => {\r\n                \r\n                handleDisableText();\r\n\r\n            }}\r\n          />\r\n          <Models.Hologram positionOfObj={[0,-14,1]}/>\r\n          <Models.LanyardXR\r\n            positionOfObj={[8, -14, -1]}\r\n            rotationOfObj={[0, -Math.PI / 2, 0]}\r\n            onPointerOver={() => {\r\n              handleEnableText(\r\n                XRText(),\r\n                \"Karp Library Fellow‑ XR Developer at StudioX\"\r\n              );\r\n            }}\r\n            onPointerOut={() => {\r\n              handleDisableText();\r\n            }}\r\n          />\r\n          <Models.Frog\r\n            positionOfObj={[9, -30, 1]}\r\n            onPointerOver={() => {\r\n              handleEnableText(FrogText(), \"Till You Die\");\r\n            }}\r\n            onPointerOut={() => {\r\n              handleDisableText();\r\n            }}\r\n            onClick={()=>{\r\n              window.open(\"https://slothins.itch.io/till-you-die\")\r\n            }}\r\n          />\r\n\r\n          <Models.GitIcon\r\n            positionOfObj={[4, -45, 1]}\r\n            rotationOfObj={[-Math.PI / 2, 0, 0]}\r\n            onClick={()=>{\r\n              window.open(\"https://www.linkedin.com/in/muhammedelsayed/\")\r\n            }}\r\n          />\r\n          <Models.LnIcon\r\n            positionOfObj={[-4, -45, 1]}\r\n            rotationOfObj={[Math.PI / 2, 0, 0]}\r\n            onClick={()=>{\r\n              window.open(\"https://github.com/MuhammedEl-Sayed/\")\r\n            }}\r\n          />\r\n\r\n          <Models.Placard\r\n            positionOfObj={[0, 0, 1]}\r\n            rotationOfObj={[Math.PI / 2.3, -Math.PI / 2, 0]}\r\n            onPointerOver={() => {\r\n              handleEnableText(introText(), \"Welcome to my portfolio website!\");\r\n            }}\r\n            onPointerOut={() => {\r\n              handleDisableText();\r\n            }}\r\n          />\r\n          <Models.Trowel\r\n            positionOfObj={[0, -30, 1]}\r\n            onPointerOver={() => {\r\n              handleEnableText(TrowelText(), \"Trowel\");\r\n            }}\r\n            onPointerOut={() => {\r\n              handleDisableText();\r\n            }}\r\n            onClick={()=>{\r\n              window.open(\"https://github.com/MuhammedEl-Sayed/Trowel-Dandyhacks2021\")\r\n            }}\r\n          />\r\n          <Models.Ship\r\n            positionOfObj={[-9, -30, 1]}\r\n            onPointerOver={() => {\r\n              handleEnableText(SeaVentures(), \"Sea Ventures\");\r\n            }}\r\n            onPointerOut={() => {\r\n              handleDisableText();\r\n            }}\r\n            onClick={()=>{\r\n              window.open(\"http://seaventures.digitalscholar.rochester.edu/\")\r\n            }}\r\n          />\r\n        </Suspense>\r\n      </Physics>\r\n    </>\r\n  );\r\n}\r\n/* //            <Html >\r\n<h1>sadasd</h1>\r\n<a href=\"https://github.com/pmndrs/drei#html\" > sadas</a>\r\n</Html>\r\n</Models.LnIcon> */","export const introText = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white text-center `}>\r\n        This entire website was built using JS, React Three Fiber, and the React\r\n        framework. React Three Cannon is also implemented f16or physics\r\n        simulation, so feel free to drag around any of the 3D Objects you see!\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const DSText = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white h-2/3 text-center `}>\r\n        Working with the Digital Scholarship Lab at the University of Rochester\r\n        was when I was first introduced to JS and React. Refactoring\r\n        functionality in Resurrect3D, a Digital Heritage 3D model viewer, was\r\n        where I was first introduced to React Three Fiber. I also got hands-on\r\n        experience with basic 3D modeling in Blender. Most of the models on this\r\n        website are made by me!\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const XRText = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white text-center`}>\r\n        StudioX is an XR peer-to-peer learning space for VR, AR, and MR\r\n        experiences. As a Karp Library Fellow, I serve as StudioX's XR\r\n        Developer. I curate workshops for students, faculty, and community\r\n        members on developing XR applications using Unity for a variety of\r\n        devices. Engaging with other peers, I've developed and assisted in the\r\n        production of AR and VR research-related prototypes. I've also presented\r\n        at various virtual and in-person events on the topic of XR in education.\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const ResearchText = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white text-center`}>\r\n        After creating Sea Ventures (see below ship), I had the opportunity to\r\n        develop a workflow for converting large point clouds into decimated\r\n        minimal meshes for a historical tour of the Elmina castle developed in\r\n        Unity. I also got to build a FreeNas server from both the hardware and\r\n        software level that is still in use 2 years later!\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const FrogText = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white text-center`}>\r\n        My team's submission for the 2019 GameJam hosted by the UR Video Game\r\n        Development Club, winning 2nd Place. Using the frog theme as\r\n        inspiration, as the Lead Developer I implemented precision platformer\r\n        mechanics and the core gameplay features.\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const TrowelText = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white text-center`}>\r\n        My team's submission for the 2021 DandyHacks Hackathon at the University\r\n        of Rochester winning 1st Place in the video game track. With an entirely\r\n        unique soundtrack and mostly custom pixel-art (minus the tilesets),\r\n        Trowel is a simple RNG-based rogue-like with a heavy emphasis on\r\n        min-maxing mechanics. Being the sole developer I designed it to be a fun\r\n        but brief experience that keeps you coming back again and again for\r\n        another playthrough.\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const SeaVentures = () => {\r\n  return (\r\n    <div className=\"h-2/3 mr-16 ml-16\">\r\n      <span className={`m-auto text-white text-center`}>\r\n        This was my first Unity project since the days of Slenderman. It is a\r\n        historical text-based game based on the discovery of Bermuda. As the\r\n        Sole Developer, not only was I responsible for implementing features,\r\n        but also anything regarding using the Unity Engine. Meeting our deadline\r\n        of 3 months, Sea Ventures was met with siginificant positive feedback\r\n        from faculty from related departments after a presentation at the end of\r\n        the deadline.\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { CanvasContext, TextContext } from \"../Helpers/SceneWrapper\";\r\nexport default function BoxContent(props) {\r\n  const context = React.useContext(TextContext);\r\n  let text;\r\n  useEffect(() => {\r\n    console.log(context);\r\n  }, [context]);\r\n\r\n  return (\r\n    <>\r\n      <div className={`pointer-events-none overflow-hidden `}>\r\n        <div\r\n          className={`h-screen bg-gray-800 bg-opacity-70 w-1/3 right-0 fixed z-50  ${context.text.enable ? \"animate-fade-in\" : \"animate-fade-out\"}`}\r\n        >\r\n          <div className=\" flex relative items-center z-10 justify-evenly flex-col h-screen\">\r\n            <span className={`m-auto mt-24 text-white h-1/3 font-bold text-2xl mr-10 ml-10 text-center`}>{context.text.title}</span>\r\n\r\n            {context.text.content}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n/*\r\n\r\n\r\n        <div className={`h-screen bg-gray-800 bg-opacity-70 w-1/3 right-0 fixed z-50 ${context.text.enable ? \"animate-fade-in\" : \"animate-fade-out\"}`}>\r\n          <div className=\" flex relative items-center z-10 justify-start flex-col h-screen\">\r\n          <span className={`m-auto text-white`}>{context.text.title}</span>\r\n*/\r\n","export default __webpack_public_path__ + \"static/media/lightbulb.ef32f5e4.png\";","import React, { useState, Suspense, useContext, useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useContextBridge, Loader } from \"@react-three/drei\";\r\nimport Scene from \"../Scene\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport BoxContent from \"../HtmlBS/BoxContent\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport * as Models from \"./../Helpers/GLBReroute\";\r\nimport { Debug, Physics } from \"@react-three/cannon\";\r\nimport img from \"../../images/lightbulb.png\"\r\nimport { DataContext } from \"../../App\";\r\nimport ReactGA from 'react-ga';\r\n\r\n/*\r\n\r\nSo what you do is:\r\nImport context bridge \r\ncreate a scene wrapper that holds a canvas and camera,s and wraps the scene with the bridge\r\nand then within the scene we go ahead and consume both contexes.\r\nmake sure to wrap the scene wrapper with the first context.\r\n*/\r\n\r\nconst DefaultText = {\r\n  text: {\r\n    enable: false,\r\n    content: () => () => console.log(\"nothing\"),\r\n    title: \"\",\r\n    beingDragged: false,\r\n  },\r\n  setText: (state) => {},\r\n};\r\nconst DefaultButton = {\r\n  color: \"#0400ff\",\r\n  setColor: (state) => {},\r\n};\r\n\r\nexport const TextContext = React.createContext(DefaultText);\r\nexport const ButtonContext = React.createContext(DefaultButton);\r\nfunction ContextBridger() {\r\n  const ContextBridge = useContextBridge(TextContext, ButtonContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"absolute h-screen w-screen\">\r\n        <Canvas shadows frameloop=\"demand\">\r\n          {/* create the bridge inside the Canvas and forward the context */}\r\n          <ContextBridge>\r\n            <Scene />\r\n          </ContextBridge>\r\n        </Canvas>\r\n\r\n        <Loader />\r\n      </div>\r\n      <HTMLOverlay />\r\n    </>\r\n  );\r\n}\r\nfunction HTMLOverlay() {\r\n  const bcontext = useContext(ButtonContext);\r\n  const colors = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\", \"#ffffff\"];\r\n  const changeState = () => {\r\n    if (colors.indexOf(bcontext.color) === 3) {\r\n      bcontext.setColor(colors[0]);\r\n\r\n    } else {\r\n      bcontext.setColor(colors[colors.indexOf(bcontext.color) + 1]);\r\n\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [bcontext.color]);\r\n  return (\r\n    <>\r\n      <div className=\"fixed top-1/4 left-1/4\">\r\n        <IconButton\r\n          \r\n          onClick={() => {\r\n            changeState();\r\n          }}\r\n          className=\" drop-shadow-2xl\"\r\n        >\r\n         <img src={img} className=\"w-12 h-12 \" alt=\"wow\" ></img>\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default function SceneWrapper(props) {\r\n  useEffect(() => {\r\n    if(!DataContext.initialLoad) {\r\n      ReactGA.pageview(props.location.pathname);  \r\n      DataContext.setInitialLoad(true)\r\n    }\r\n  }, [])\r\n  const [text, setText] = useState(DefaultText.text);\r\n  const [color, setColor] = useState(DefaultButton.color);\r\n  return (\r\n    <>\r\n      <TextContext.Provider value={{ text, setText }}>\r\n        <ButtonContext.Provider value={{ color, setColor }}>\r\n          <ContextBridger />\r\n          <BoxContent />\r\n        </ButtonContext.Provider>\r\n      </TextContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport SceneWrapper from \"./components/Helpers/SceneWrapper\"\r\nimport { useEffect, createContext, useState } from \"react\"\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('G-DJ032DFCSV');\r\n\r\nconst DefaultData = {\r\n  initialLoad: false,\r\n  setInitialLoad: () => {}\r\n};\r\nexport const DataContext = createContext(DefaultData);\r\nconst callback = list => {\r\n  list.getEntries().forEach(entry => {\r\n    console.log(entry)\r\n      ReactGA.timing({\r\n        category: \"First Meaningful Paint\",\r\n        variable: entry.name,\r\n        value: entry.responseEnd\r\n      })\r\n})\r\n}\r\n\r\nvar observer = new PerformanceObserver(callback);\r\nobserver.observe({entryTypes: [\r\n                                // 'navigation',\r\n                                // 'paint',\r\n                                // 'resource',\r\n                                // 'mark',\r\n                                // 'measure',\r\n                                // 'frame',\r\n                                // 'longtask'\r\n                              ]})\r\nfunction App() {\r\n  useEffect(() => {\r\n    document.title = \"Muhammed's Bookshelf Portfolio\"\r\n  }, []);\r\n  const [initialLoad, setInitialLoad] = useState(false);\r\n  return (\r\n    <>\r\n\r\n\r\n      <DataContext.Provider\r\n        value={{\r\n          initialLoad: initialLoad,\r\n          setInitialLoad: () => setInitialLoad(true),\r\n        }}\r\n      >\r\n        <div className=\" m-0 p-0  h-screen relative bg-wall bg-no-repeat bg-cover bg-center\">\r\n          <SceneWrapper />\r\n        </div >\r\n      </DataContext.Provider>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}