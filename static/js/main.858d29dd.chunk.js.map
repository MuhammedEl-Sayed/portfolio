{"version":3,"sources":["components/Models/SimpleBox.js","components/Models/placard.glb","components/settings/Boxes.js","components/Models/Placard.js","components/Models/shelf.gltf","components/Models/hook.glb","components/Models/Hook.js","components/Models/Researchlanyard.glb","components/Models/Blanklanyard.js","components/Models/DSlanyard.glb","components/Models/DSlanyard.js","components/Models/XRLanyard.glb","components/Models/XRlanyard.js","components/Models/lnicon.glb","components/Models/Lnicon.js","components/Models/gitIcon.glb","components/Models/GitIcon.js","components/Models/ship.glb","components/Models/Ship.js","components/Models/Shelf.js","components/Models/hologram.glb","components/Models/smallerLogo.glb","components/Models/SmallerLogo.js","components/Models/Hologram.js","components/Models/bobble.glb","components/Models/Bobble.js","hooks/useScrollY.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tempObject","THREE","SimpleGeometry","forwardRef","props","forwarded","useThree","size","viewport","aspect","width","count","colliders","length","dragged","useRef","handleChange","setDrag","useEffect","i","x","id","scale","set","args","position","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","bind","useGesture","onDrag","movement","y","first","console","log","lastPos","onDragEnd","ref","positionCol","rotation","rotationCol","attach","transparent","opacity","LanyardBoxes","type","PlacardBoxes","Math","PI","Icon","GIcon","ShipBoxes","HologramBoxes","Model","useGLTF","model","nodes","materials","box","rot","boxes","useCompoundBody","mass","shapes","api","subscribe","v","useState","dragging","setLastPos","useFrame","wakeUp","sleep","copy","newValue","dispose","geometry","Cube001_1","material","Cube001_2","Text","preload","Hook","Cylinder001","hook","castShadow","receiveShadow","Lanyard","Cube","raycast","meshBounds","Lanyard2","Lanyard3","LnIcon","Curve001","GitIcon","group","Curve","Ship","Mesh_0_1","M_Catherine","Mesh_0_2","Mesh_0_3","M_WoodCeiling","Mesh_0_4","M_Glass","Mesh_0_5","M_Metal_02","Mesh_0_6","Mesh_0_7","Mesh_0_8","Mesh_0_9","M_ManilaRope","Mesh_0_10","M_Metal_01","Mesh_0_11","Mesh_0_12","Mesh_0_13","M_Wood_01","Mesh_0_14","M_Wood_02","Mesh_0_15","Material","Shelf","boxSize","height","Cube001","Exterior","Cube001_3","Cube001_4","Cube001_5","Cube001_6","Cube001_7","Cube001_8","Cube001_9","Cube001_10","Cube001_11","Cube001_12","Cube001_13","Cube001_14","Cube001_15","Cube001_16","Cube001_17","Cube001_18","Cube001_19","Cube001_20","Cube001_21","Cube001_22","Cube001_23","Cube001_24","Cube001_25","Cube001_26","color","intensity","decrease","mesh","state","delta","progress","MathUtils","lerp","Swarm","dummy","useMemo","particles","temp","t","random","factor","speed","xFactor","yFactor","zFactor","push","forEach","particle","s","cos","b","sin","Hologram","cube","Sphere","legs","power","distance","angle","Bobble","Sphere003","me","cameraPositions","useStyles","makeStyles","root","bottom","textAlign","ScrollingCamera","useScrollDirection","isScrollingUp","isScrollingDown","start","end","PerspectiveCamera","makeDefault","fov","App","classes","bounds","useSpring","config","slow","index","fn","useCallback","cy","xy","py","previous","move","roll","memo","get","newY","clamp","pan","vxvy","onWheel","domTarget","useScrollY","window","setstate","colors","shadows","frameloop","penumbra","to","fallback","Preload","all","Loader","Button","variant","className","onClick","includes","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.858d29dd.chunk.js","sourcesContent":["/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { forwardRef, useRef, useEffect, useState } from \"react\";\r\nimport {useThree, instancedMesh } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nconst tempObject = new THREE.Object3D();\r\n\r\nexport const SimpleGeometry = forwardRef((props, forwarded) => {\r\n\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n  var count = props.colliders.length;\r\n  let [currentPosx, currentPosy] = [0, 0];\r\n  const mesh = useRef();\r\n\r\n  let dragged = false;\r\n  const handleChange = () => {\r\n    props.setDrag(dragged);\r\n}\r\n  useEffect(() => { \r\n    let i = 0;\r\n    for (let x = 0; x < count; x++) {\r\n      const id = i++;\r\n      \r\n  \r\n      tempObject.scale.set(\r\n        props.colliders[x].args[0],\r\n        props.colliders[x].args[1],\r\n        props.colliders[x].args[2]\r\n      );\r\n      tempObject.position.set(\r\n        props.colliders[x].position[0],\r\n        props.colliders[x].position[1],\r\n        props.colliders[x].position[2]\r\n      );\r\n      tempObject.updateMatrix();\r\n\r\n      forwarded.current.setMatrixAt(id, tempObject.matrix);\r\n\r\n      forwarded.current.instanceMatrix.needsUpdate = true;\r\n    }\r\n  }, []);\r\n  const bind = useGesture({\r\n\r\n    onDrag: ({ movement: [x, y], first: intial}) => {\r\n      dragged= true;\r\n      handleChange()\r\n      console.log(currentPosy - y)\r\n\r\n      forwarded.current.position.set(\r\n        ((x - currentPosx) / aspect) * 1.2 + props.lastPos[0],\r\n        ((currentPosy - y) / aspect) * 1.2 + props.lastPos[1],\r\n        0\r\n      );\r\n    \r\n \r\n    },\r\n    onDragEnd: ({}) => {\r\n      dragged= false;\r\n      handleChange()\r\n    }\r\n  });\r\n  \r\n\r\n  return (\r\n  \r\n      <instancedMesh\r\n      ref={forwarded}\r\n        {...bind()}\r\n        position={props.positionCol}\r\n        rotation={props.rotationCol}\r\n        setDrag={handleChange}\r\n        args={[null, null, count]}\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\"></boxBufferGeometry>\r\n        <meshStandardMaterial\r\n          transparent={true}\r\n          opacity={0}\r\n          attach=\"material\"\r\n        />\r\n      </instancedMesh>\r\n\r\n   \r\n \r\n  );\r\n});\r\n\r\n/* export const SimpleBox = forwardRef((props, xx) => {\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n  const [ref, api] = useCompoundBody(() => ({\r\n    mass: 0,\r\n    \r\n\r\n    shapes: props.colliders,\r\n    ...props,\r\n  }));\r\n  console.log(ref)\r\n  const position = useRef([0, 0, 0]);\r\n  const rot = useRef([0, 0, 0]);\r\n  useEffect(() => {\r\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\r\n    return unsubscribe;\r\n  }, []);\r\n  useEffect(() => {\r\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\r\n    return unsubscribe;\r\n  }, []);\r\n  let [currentPosx, currentPosy] = [0, 0];\r\n  let [copyX, copyY] = [0, 0];\r\n/*   const bind = useGesture({\r\n    onDrag: ({ movement: [x, y], first: intial, lastOffset: [lx, ly] }) => {\r\n      api.velocity.set(0, 0, 0);\r\n      api.sleep();\r\n    },\r\n\r\n    onPointerUp: ({}) => {\r\n      api.wakeUp();\r\n    },\r\n  });\r\n\r\n  var count = props.colliders.length;\r\n  useFrame(() => {\r\n    xx.current.position.set(position.current[0], position.current[1], position.current[2])\r\n    xx.current.rotation.set(rot.current[0], rot.current[1], rot.current[2])\r\n  });  \r\n  \r\n  const test = useRef();\r\n  return (\r\n    <>\r\n      <SimpleGeometry  ref={ref}colliders={props.colliders}  positionCol={props.positionCol} rotationCol={props.rotationCol}/>\r\n\r\n      <group ref={xx} />\r\n    </>\r\n  );\r\n});\r\n */\r\n","export default __webpack_public_path__ + \"static/media/placard.cf98b553.glb\";","\r\nexport const LanyardBoxes = [{ \r\n    type: \"Box\", position: [0, -0.8, 0], args: [0.3, 7, 5.5] },\r\n     { type: \"Box\", position: [0, 3.2, -1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 3.2, 1.7], args: [0.4, 2.2, 2.4] },\r\n     { type: \"Box\", position: [0, 4.0, 0], args: [0.4, 0.4, 0.9] },\r\n]\r\n\r\nexport const PlacardBoxes = [\r\n    {\r\n      type: \"Box\",\r\n      position: [1, -1, 0],\r\n      args: [0.5, 3, 11],\r\n      rotation: [0, 0, -Math.PI / 10],\r\n    },\r\n    { type: \"Box\", position: [0, 0, 0], args: [1, 1, 10] },\r\n]\r\n\r\nexport const Icon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [1,0.2,-1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\nexport const GIcon = [\r\n  {\r\n    type: \"Box\",\r\n    position: [-1,-.2,1.2],\r\n    args: [2.5, 1,2.5],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\nexport const ShipBoxes = [\r\n  {\r\n    type: \"Box\",\r\n    position: [0,0,0],\r\n    args: [2.3, 2.3,1],\r\n    rotation: [0, 0 ,0 ],\r\n  },\r\n\r\n]\r\n\r\n\r\nexport const HologramBoxes = [{ type: \"Box\", position: [0, 0, 0], args: [1.2, 0.7, 1.2] }]","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport {SimpleGeometry} from './SimpleBox';\nimport model from \"./placard.glb\";\nimport {PlacardBoxes} from \"../settings/Boxes\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = PlacardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0, 0, 1],\n    rotation: [0, -Math.PI / 2, -Math.PI / 2.5],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  return (\n    <>\n        <SimpleGeometry\n        ref={box}\n   \n        setDrag={handleChange}\n        lastPos={lastPos}\n        rotationCol={[0, -Math.PI / 2, -Math.PI / 2.5]} colliders={boxes} positionCol={[0, 0, 1]}/>\n\n    <group ref={ref} {...props} dispose={null}>\n      <group  scale={[0.95, 0.09, 5.98]}>\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.001']} />\n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.003']} />\n      </group>\n      <mesh\n        geometry={nodes.Text.geometry}\n        material={nodes.Text.material}\n        position={[.2, 0.1, 4.11]}\n        rotation={[Math.PI / 2, Math.PI / 2, -Math.PI / 2]}\n      />\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/shelf.071d4cbe.gltf\";","export default __webpack_public_path__ + \"static/media/hook.17574861.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./hook.glb\"\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\n\nexport default function Hook(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(model)\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 0,\n    ...props,\n    rotation: [0, Math.PI, 0],\n    \n    shapes: [\n\n      { type: \"Cylinder\", position: [0, 0,1], args: [0.13, 0.13, 1], rotation:[Math.PI/2,0,0] },\n      { type: \"Cylinder\", position: [0, 0.16,0.3], args: [0.13, 0.13, 0.5], rotation:[-Math.PI/5,0,0] },\n      { type: \"Sphere\", position: [0, 0.55,0.05], args: [0.15, 4, 4], rotation:[-Math.PI/4,0,0] },\n    ],\n  }));\n\n  return (\n    <group ref={ref} {...props} dispose={null} rotation={[0,Math.PI,0]} scale={0.3}>\n      <mesh\n        geometry={nodes.Cylinder001.geometry}\n        material={materials.hook}\n        position={[0, 0.05, 3.46]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.4, 1.5, 0.4]}\n        castShadow\n        receiveShadow\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Researchlanyard.aa445638.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./Researchlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {LanyardBoxes} from \"../settings/Boxes\"\nexport default function Lanyard(props) {\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [-8, -15, -1.2],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[-8, -15, -1.2]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n\n      <group ref={ref} {...props} dispose={null} scale={1}>\n        <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          castShadow\n          receiveShadow\n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/DSlanyard.4f4112cc.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./DSlanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {LanyardBoxes} from \"../settings/Boxes\"\nexport default function Lanyard2(props) {\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [8, -15, -1.2],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[8, -15, -1.2]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n\n    <group ref={ref} {...props}  dispose={null} scale={1}>\n      <mesh\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n        scale={[0.15, 4.3, 2.9]}\n        castShadow\n        receiveShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </>\n  );\n}\n\nuseGLTF.preload(\"/DSlanyard.glb\");\n","export default __webpack_public_path__ + \"static/media/XRLanyard.5a81e0bf.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./XRLanyard.glb\";\n\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { LanyardBoxes } from \"../settings/Boxes\";\n\nexport default function Lanyard3(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = LanyardBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0, -15, -1.2],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n//        onClick={()=>setDrag(!dragging)}\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0, -15, -1.2]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n\n      <group {...props} dispose={null} ref={ref} scale={1}>\n        <mesh\n          raycast={meshBounds}\n          scale={[0.15, 4.3, 2.9]}\n          geometry={nodes.Cube.geometry}\n          material={nodes.Cube.material}\n          castShadow\n          receiveShadow\n  \n        />\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(\"/XRlanyard.glb\");\n","export default __webpack_public_path__ + \"static/media/lnicon.5c105a95.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./lnicon.glb\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { Icon } from \"../settings/Boxes\";\n\nexport default function LnIcon(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = Icon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0,-34,-0.3],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n//        onClick={()=>setDrag(!dragging)}\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0,-15,0]}\n        rotationCol={[0, 0 ,-Math.PI/2 ]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n    <group {...props} ref={ref} {...props}dispose={null}>\n      <mesh   raycast={meshBounds} geometry={nodes.Curve001.geometry} material={materials['SVGMat.002']} scale={2964.24} />\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/gitIcon.26e7b6f0.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState  } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\n\nimport { SimpleGeometry } from \"./SimpleBox\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\n\nimport { meshBounds, Center } from \"@react-three/drei\";\nimport { GIcon } from \"../settings/Boxes\";\n\nimport model from './gitIcon.glb'\n\nexport default function GitIcon(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = GIcon;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [-6,-33,-0.3],\n    rotation: [0, 0, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n//        onClick={()=>setDrag(!dragging)}\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0,-15,0]}\n        rotationCol={[Math.PI/2 , Math.PI/2 ,Math.PI/2 ]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n    <group ref={group} ref={ref} {...props} dispose={null}>\n      <mesh raycast={meshBounds} geometry={nodes.Curve.geometry} material={materials['SVGMat.001']}rotation={[0, Math.PI, 0]} scale={[3275.04, 766.11, 3275.04]} />\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/ship.685ce8f4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState  } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from './ship.glb'\nimport {useBox, Debug, useTrimesh, useCompoundBody} from \"@react-three/cannon\"\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport { ShipBoxes } from \"../settings/Boxes\";\nimport { SimpleGeometry } from \"./SimpleBox\";\n\nexport default function Ship(props) {\n  const group = useRef();\n\n\n  const { nodes, materials } = useGLTF(model);\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  var boxes = ShipBoxes;\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [6,-33,-0.3],\n    rotation: [0, 0, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n\n  return (\n    <>\n    <SimpleGeometry\n    ref={box}\n    colliders={boxes}\n    positionCol={[0,-15,0]}\n    rotationCol={[0, 0 ,-Math.PI/2 ]}\n    setDrag={handleChange}\n    lastPos={lastPos}\n  />\n    <group ref={ref} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.15}>\n        <mesh geometry={nodes.Mesh_0_1.geometry} material={materials.M_Catherine} />\n        <mesh geometry={nodes.Mesh_0_2.geometry} material={materials['M_Fabric-Sails']} />\n        <mesh geometry={nodes.Mesh_0_3.geometry} material={materials.M_WoodCeiling} />\n        <mesh geometry={nodes.Mesh_0_4.geometry} material={materials.M_Glass} />\n        <mesh geometry={nodes.Mesh_0_5.geometry} material={materials.M_Metal_02} />\n        <mesh geometry={nodes.Mesh_0_6.geometry} material={materials['M_WoodPainted-Red']} />\n        <mesh geometry={nodes.Mesh_0_7.geometry} material={materials['M_WoodPainted-Yellow']} />\n        <mesh geometry={nodes.Mesh_0_8.geometry} material={materials['M_WoodPainted-Black']} />\n        <mesh geometry={nodes.Mesh_0_9.geometry} material={materials.M_ManilaRope} />\n        <mesh geometry={nodes.Mesh_0_10.geometry} material={materials.M_Metal_01} />\n        <mesh geometry={nodes.Mesh_0_11.geometry} material={materials['M_Wood-Floor']} />\n        <mesh geometry={nodes.Mesh_0_12.geometry} material={materials['M_WoodPainted-White']} />\n        <mesh geometry={nodes.Mesh_0_13.geometry} material={materials.M_Wood_01} />\n        <mesh geometry={nodes.Mesh_0_14.geometry} material={materials.M_Wood_02} />\n        <mesh geometry={nodes.Mesh_0_15.geometry} material={materials.Material} />\n      </group>\n    </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./shelf.gltf\";\nimport { Canvas, useFrame, useThree, } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport {useBox, Debug, useTrimesh, useCompoundBody, useConvexPolyhedron} from \"@react-three/cannon\"\nimport Hook from \"./Hook\"\nimport Lanyard from './Blanklanyard';\nimport Lanyard2 from './DSlanyard';\nimport Lanyard3 from './XRlanyard';\nimport LnIcon from './Lnicon';\nimport GitIcon from './GitIcon';\nimport Ship from './Ship';\n\nexport default function Shelf(props) {\n  const {viewport} = useThree()\n  const boxSize = [5, 1.2,25]\n  const { nodes, materials } = useGLTF(model)\n\n\n  const [ref] = useCompoundBody(() => ({ mass: 0, ...props, position: [0,-22,0], rotation:[0,-Math.PI/2,0], shapes:[\n    {type: 'Box', position:[0,0.2,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-13.7,0],rotation: [0, 0, 0], args: boxSize},\n    {type: 'Box', position:[0,-29.5,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[0,14.4,0], rotation: [0, 0, 0],args: boxSize},\n    {type: 'Box', position:[-2,0,0], rotation: [0, 0, 0],args:[1, 60,30]},\n    {type: 'Box', position:[-2,0,13], rotation: [0, 0, 0],args:[30, 60,1]},\n    {type: 'Box', position:[-2,0,-13], rotation: [0, 0, 0],args:[30, 60,1]},\n  ], }))\n/*   <Lanyard2  position={[8,-15,-1.2]} />\n  <Lanyard3 position={[0,-15,-1.2]} />\n  <Lanyard position={[-8,-15,-1.2]} /> */\n  return (\n<>\n      <group ref={ref} position={[0, -30, 0]} scale={[3 ,viewport.height*4,  viewport.width]}   rotation={[0, Math.PI, 0]}>\n      \n        <mesh geometry={nodes.Cube001.geometry} material={materials.Exterior}  receiveShadow />\n        <mesh geometry={nodes.Cube001_1.geometry} material={materials.Shelf}   receiveShadow/>\n         \n        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.004']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_3.geometry} material={materials['Material.001']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_4.geometry} material={materials['Material.005']} castShadow receiveShadow/>\n        <mesh geometry={nodes.Cube001_5.geometry} material={materials['Material.007']} />\n        <mesh geometry={nodes.Cube001_6.geometry} material={materials['Material.006']} />\n        <mesh geometry={nodes.Cube001_7.geometry} material={materials['Material.011']} />\n        <mesh geometry={nodes.Cube001_8.geometry} material={materials['Material.010']} />\n        <mesh geometry={nodes.Cube001_9.geometry} material={materials['Material.009']} />\n        <mesh geometry={nodes.Cube001_10.geometry} material={materials['Material.008']} />\n        <mesh geometry={nodes.Cube001_11.geometry} material={materials['Material.016']} />\n        <mesh geometry={nodes.Cube001_12.geometry} material={materials['Material.015']} />\n        <mesh geometry={nodes.Cube001_13.geometry} material={materials['Material.014']} />\n        <mesh geometry={nodes.Cube001_14.geometry} material={materials['Material.013']} />\n        <mesh geometry={nodes.Cube001_15.geometry} material={materials['Material.021']} />\n        <mesh geometry={nodes.Cube001_16.geometry} material={materials['Material.020']} />\n        <mesh geometry={nodes.Cube001_17.geometry} material={materials['Material.019']} />\n        <mesh geometry={nodes.Cube001_18.geometry} material={materials['Material.018']} />\n        <mesh geometry={nodes.Cube001_19.geometry} material={materials['Material.026']} />\n        <mesh geometry={nodes.Cube001_20.geometry} material={materials['Material.025']} />\n        <mesh geometry={nodes.Cube001_21.geometry} material={materials['Material.024']} />\n        <mesh geometry={nodes.Cube001_22.geometry} material={materials['Material.023']} />\n        <mesh geometry={nodes.Cube001_23.geometry} material={materials['Material.031']} />\n        <mesh geometry={nodes.Cube001_24.geometry} material={materials['Material.030']} />\n        <mesh geometry={nodes.Cube001_25.geometry} material={materials['Material.029']} />\n        <mesh geometry={nodes.Cube001_26.geometry} material={materials['Material.028']} />\n      </group>\n\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, 6,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -9,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -24,0]}/>\n      <rectAreaLight color={props.color} intensity={15} width={30} height={5} position={[0, -38,0]}/>\n    <Hook position={[-8,-11,-0.3]} />\n    <Hook position={[0,-11,-0.3]} />\n    <Hook position={[8,-11,-0.3]} />\n     <Lanyard2   />\n  <Lanyard3 />\n  <Lanyard /> \n\n  <LnIcon  rotation={[Math.PI/2, 0 ,0 ]} scale={[0.12, 0.12, 0.12  ]}/> \n\n\n  <GitIcon rotation={[-Math.PI/2, 0 ,0 ]} scale={[0.12, 0.12, 0.12]}/> \n  <Ship/>\n</>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/hologram.d73e046a.glb\";","export default __webpack_public_path__ + \"static/media/smallerLogo.dd935cb4.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef , useEffect} from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./smallerLogo.glb\";\nimport * as THREE from \"three\";\nimport styled from \"styled-components\";\nimport { Canvas, MeshProps, useFrame, useThree } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleBox} from './SimpleBox';\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF(model);\n  let decrease = false;\n\n  const mesh = useRef();\n\n  useFrame((state, delta) => {\n    let progress = 0;\n\n    if (mesh.current.position.y >= 3.7) {\n      decrease = true;\n      progress = 0;\n    } else if (mesh.current.position.y <=3) {\n      decrease = false;\n      progress = 0;\n    }\n    if (decrease) {\n      progress += 0.0008;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        2,\n        progress\n      );\n    } else {\n      progress += 0.002;\n      mesh.current.position.y = MathUtils.lerp(\n        mesh.current.position.y,\n        4,\n        progress\n      );\n    }\n  });\n\n  return (\n    <group>\n    <group ref={mesh} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.001\"]}\n        position={[0, 0, 0.3]}\n        rotation={[0.5, -0.8, 0]}\n        scale={2.5}\n        castShadow\n        raycast={meshBounds}\n      />\n    </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useMemo, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport model from \"./hologram.glb\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport Model from \"./SmallerLogo\";\nimport * as THREE from \"three\";\nimport { meshBounds } from \"@react-three/drei\";\nimport {SimpleGeometry} from './SimpleBox';\nimport {HologramBoxes} from \"../settings/Boxes\"\n\nfunction Swarm({ count }) {\n  const mesh = useRef();\n  const light = useRef();\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  let newY = 0;\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  // Generate some random positions, speed factors and timings\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -0.5 + Math.random();\n      const yFactor = 0.7 + Math.random();\n      const zFactor = -0.3 + Math.random();\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor });\n    }\n    return temp;\n  }, [count]);\n  // The innards of this hook will run every frame\n  useFrame((state) => {\n    // Makes the light follow the mouse\n\n    // Run through the randomized data to calculate some movement\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\n      t = particle.t += speed / 2;\n\n      const s = Math.cos(t);\n      const b = Math.sin(t) + Math.cos(t * 2) / 25;\n\n      // Update the dummy object\n      dummy.position.set(xFactor, yFactor + b, zFactor);\n      dummy.scale.set(s, s, s);\n      dummy.rotation.set(s * 3, s * 3, s * 3);\n      dummy.updateMatrix();\n      // And apply the matrix to the instanced item\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#065b8d\"\n          opacity={0.5}\n          transparent\n        />\n      </instancedMesh>\n    </>\n  );\n}\nexport default function Hologram(props) {\n  const { nodes, materials } = useGLTF(model);\n\n  const { size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n  //-1, -20\n\n\n  const box = useRef();\n  const position = useRef([0, 0, 0]);\n  const rot = useRef([0, 0, 0]);\n  const [ref, api] = useCompoundBody(() => ({\n    mass: 1,\n    position: [0, -15, 1],\n    rotation: [0, -Math.PI / 2, 0],\n    shapes: boxes,\n    ...props,\n  }));\n  useEffect(() => {\n    const unsubscribe = api.position.subscribe((v) => (position.current = v));\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const unsubscribe = api.rotation.subscribe((v) => (rot.current = v));\n    return unsubscribe;\n  }, []);\n  const [dragging, setDrag] = useState(false);\n  const [lastPos, setLastPos] = useState([0,0])\n  \n  useFrame(() => {\n    \n    if (dragging === false) {\n      box.current.position.set(\n        position.current[0],\n        position.current[1],\n        position.current[2]\n      ); //this isnt the problem\n      box.current.rotation.set(rot.current[0], rot.current[1], rot.current[2]); \n      setLastPos([position.current[0], position.current[1]])\n      api.wakeUp();\n    }  if(dragging === true) {\n      \n      api.sleep();\n      api.position.copy(box.current.position);\n      api.rotation.copy(box.current.rotation);\n\n    }\n  });\n  function handleChange(newValue) {\n    setDrag(newValue);\n  }\n  var boxes = HologramBoxes\n\n  const cube = useRef();\n  useFrame(() => {\n    cube.current.position.x =  box.current.position.x;\n    cube.current.position.y =   box.current.position.y;\n  });\n\n  return (\n    <>\n      <SimpleGeometry\n        ref={box}\n        colliders={boxes}\n        positionCol={[0, -15, 1]}\n        rotationCol={[0, -Math.PI / 2, 0]}\n        setDrag={handleChange}\n        lastPos={lastPos}\n      />\n      <group ref={ref} {...props} dispose={null}>\n        <mesh geometry={nodes.Sphere.geometry}raycast={meshBounds} material={materials.legs} />\n        <spotLight\n          color={\"#03fcec\"}\n          power={100}\n          distance={10}\n          angle={Math.PI / 6}\n  \n          castShadow\n\n        />\n        <Swarm count={10} />\n      </group>\n      <group ref={cube}>\n      <Model  scale={0.3}/>\n      </group>\n  \n    </>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/bobble.7a6582ef.glb\";","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport model from \"./bobble.glb\"\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useBox, Debug, useCompoundBody } from \"@react-three/cannon\";\nimport { meshBounds } from \"@react-three/drei\";\n\nexport default function Bobble(props) {\n  \n  const [ref, api] = useCompoundBody(() => ({\n    mass: 10,\n    ...props,\n    position: [10, 0, 0],\n    \n    shapes: [\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      {\n        type: \"Box\",\n        position: [-0.3,-2.4,0],\n        args: [3, 0.3, 3],\n        rotation:[0, 0, 0]\n    \n      },\n      \n   \n    ],\n  }));\n  const { nodes, materials } = useGLTF(model)\n  return (\n    <group ref={ref} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Sphere003.geometry}\n        material={materials.me}\n        rotation={[-2.53, -1.46, -2.41]}\n        scale={[0.065, 0.065, 0.04]}\n        raycast={meshBounds}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","import { useCallback, useEffect } from 'react'\r\nimport { useSpring, config } from '@react-spring/core'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport clamp from 'lodash/clamp'\r\nvar cameraPositions = [];\r\ncameraPositions = [0, -15, -28, -41]\r\nexport default function useScrollY(bounds, props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: config.slow }))\r\n  //ok so xy is the position we should spring too\r\n  //previous is previous xy\r\n  //memo is previous newY.\r\n  //What we want to do is iterate through the camera positions.\r\n  //We can first try just clamping the final answer to bounds, which would also include the positions\r\n  //that we want to use\r\n  var index = 0;\r\n  const fn = useCallback(\r\n    ({ xy : [, cy], previous: [, py], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      const newY = clamp(memo - cy + py, ...bounds)\r\n      if(roll){\r\n        if(move > 0){\r\n\r\n\r\n           index++;\r\n        }\r\n        else{\r\n          index--;\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return newY\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n  let pan = false;\r\n  const fn2 = useCallback(\r\n    ({ vxvy : [, cy], movement: [, move], first:  roll, memo = y.get() }) => {\r\n      \r\n      if(roll){\r\n        pan = true;\r\n      }\r\n\r\n        if(cy > 0 && pan){\r\n\r\n\r\n           index--;\r\n           pan = false;\r\n        }\r\n        else if (cy < 0&& pan){\r\n          index++ ;\r\n          pan = false;\r\n\r\n        }\r\n        if(index < 0){\r\n          index = 3;\r\n        }\r\n        if(index > 3){\r\n          index = 0\r\n        }\r\n      \r\n      \r\n\r\n\r\n\r\n      set({ y: cameraPositions[index] })\r\n      return cameraPositions[index]\r\n    },\r\n    [bounds, y, set]\r\n  )\r\n\r\n  const bind = useGesture({ onWheel: fn}, props)\r\n  useEffect(() => props && props.domTarget && bind(), [props, bind])\r\n  return [y, bind]\r\n}\r\n","/// <reference types=\"@welldone-software/why-did-you-render\" />\nimport './wdyr'; // <--- first import\nimport React, { Suspense, useEffect, useMemo, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Placard from \"./components/Models/Placard.js\";\nimport Shelf from \"./components/Models/Shelf.js\";\nimport Hologram from \"./components/Models/Hologram\";\nimport Model from \"./components/Models/SmallerLogo\";\nimport Bobble from \"./components/Models/Bobble\"\nimport { Loader, OrbitControls, PerspectiveCamera, Text, Preload } from \"@react-three/drei\";\nimport { useScrollDirection } from 'react-use-scroll-direction'\nimport { MathUtils } from \"three\";\nimport useScrollY from './hooks/useScrollY'\nimport { a } from \"@react-spring/three\"\nimport { Debug, Physics } from \"@react-three/cannon\"\nimport { Button, Hidden } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nvar cameraPositions = [] as any;\ncameraPositions = [0, -.3, -.6, -.9]\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    height: 60,\n    textAlign: 'center'\n  },\n});\n\nfunction HiddenImage(props: any) {\n  return (\n    <img src={props.image} alt={\"wow\"}/>\n  )\n\n\n}\n\nfunction ScrollingCamera(props: any) {\n  const ref = useRef<THREE.Camera>(null);\n  const { isScrollingUp, isScrollingDown } = useScrollDirection()\n  let position = 0;\n  let start = 0;\n  let end = 0;\n  let progress = 0;\n  useFrame(() => {\n\n    start = ref!.current!.position.y;\n    progress += 0.001;\n    if (progress > 1) {\n      progress = 0;\n    }\n    if (isScrollingUp) {\n      if (position === 0) {\n\n        position = 3;\n      }\n      else {\n        position--;\n      }\n\n    }\n    if (isScrollingDown) {\n      if (position === 3) {\n        position = 0;\n      }\n      else {\n        position++;\n      }\n\n    }\n    end = cameraPositions[position];\n    ref!.current!.position.y = MathUtils.lerp(start, end, progress);\n  })\n\n\n\n\n\n  return (\n    <PerspectiveCamera ref={ref} makeDefault fov={60} position={[0, 0, 20]} rotation={[0, 0, 0]} />\n  )\n}\n\n\nfunction App() {\n  const classes = useStyles();\n  const [y]: any = useScrollY([-2400, 0], { domTarget: window })\n\n/* \n\n<a.group position-y={y.to((y: any) => y)}>\n  <ScrollingCamera />\n</a.group>\n */\n\n  const [state, setstate] = useState({ color: \"\" })\n  const changeState = () => {\n\n    if (colors.includes(state.color)) {\n      setstate({ color: colors[colors.indexOf(state.color) + 1] })\n    }\n    else {\n      setstate({ color: colors[0] })\n    }\n\n\n  };\n  const colors: any = [\"#0400ff\", \"#FF0F0F\", \"#12F12F\"]\n  return (\n    <>\n\n      <Canvas shadows frameloop=\"demand\">\n\n<ambientLight />\n<spotLight\n  color={\"#ffffff\"}\n  position={[0, 0, 8]}\n  angle={Math.PI}\n  penumbra={1}\n  rotation={[0, 0, 0]}\n  power={6}\n/>\n<a.group position-y={y.to((y: any) => y)}>\n  <ScrollingCamera />\n</a.group>\n<Physics>\n\n  <Suspense fallback={null}>\n\n    <Placard />\n\n\n\n\n    <Bobble />\n\n    <Shelf color={state.color} />\n    <Hologram />\n    <Preload all />\n  </Suspense>\n</Physics>\n</Canvas>\n<Loader />\n\n<Button variant=\"contained\" className={classes.root} onClick={changeState}>Change LED Color</Button>\n\n\n\n\n\n\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}