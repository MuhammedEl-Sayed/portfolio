/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useEffect, useState,forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import model from "./XRLanyard.glb";

import { useBox, Debug, useCompoundBody } from "@react-three/cannon";
import * as THREE from "three";
import { useFrame, useThree } from "@react-three/fiber";
import { useGesture, useDrag } from "react-use-gesture";
import { SimpleGeometry } from "./SimpleBox";
import { meshBounds, Center } from "@react-three/drei";
import { LanyardBoxes } from "../settings/Boxes";


export const LanyardXR = forwardRef((props, ref) =>{
  const { nodes, materials } = useGLTF(model);
  return (
    <>
      <group {...props} dispose={null} ref={ref} scale={1}>
        <mesh
          raycast={meshBounds}
          scale={[0.15, 4.3, 2.9]}
          geometry={nodes.Cube.geometry}
          material={nodes.Cube.material}
          castShadow
          receiveShadow
  
        />
      </group>

    </>
  );
})
useGLTF.preload(model);
export default LanyardXR