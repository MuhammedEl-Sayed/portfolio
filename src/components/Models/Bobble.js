/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import model from "./bobble.glb"
import { useSpring, a } from "@react-spring/three";
import { useBox, Debug, useCompoundBody } from "@react-three/cannon";
import { meshBounds } from "@react-three/drei";

export default function Bobble(props) {
  
  const [ref, api] = useCompoundBody(() => ({
    mass: 10,
    ...props,
    position: [10, 0, 0],
    
    shapes: [
      {
        type: "Box",
        position: [-0.3,-2.4,0],
        args: [3, 0.3, 3],
        rotation:[0, 0, 0]
    
      },
      {
        type: "Box",
        position: [-0.3,-2.4,0],
        args: [3, 0.3, 3],
        rotation:[0, 0, 0]
    
      },
      
   
    ],
  }));
  const { nodes, materials } = useGLTF(model)
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh
        geometry={nodes.Sphere003.geometry}
        material={materials.me}
        rotation={[-2.53, -1.46, -2.41]}
        scale={[0.065, 0.065, 0.04]}
        raycast={meshBounds}
      />
    </group>
  )
}

useGLTF.preload(model)
