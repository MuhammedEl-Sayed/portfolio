/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState, forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import model from "./Researchlanyard.glb";

import { useBox, Debug, useCompoundBody } from "@react-three/cannon";
import * as THREE from "three";
import { useFrame, useThree } from "@react-three/fiber";
import { useGesture, useDrag } from "react-use-gesture";
import { meshBounds } from "@react-three/drei";
import { SimpleGeometry } from "./SimpleBox";
import {LanyardBoxes} from "../settings/Boxes"
export default function Lanyard(props){
  const { nodes, materials } = useGLTF(model);
  return (
    <>

      <group  dispose={null} scale={1}>
        <mesh
          geometry={nodes.Cube.geometry}
          material={nodes.Cube.material}
          raycast={meshBounds}
          scale={[0.15, 4.3, 2.9]}
          castShadow
          receiveShadow
        />
      </group>
    </>
  );
}

useGLTF.preload(model);
