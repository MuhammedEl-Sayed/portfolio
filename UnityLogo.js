/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState} from 'react';
import * as THREE from "three";

import { useGLTF } from '@react-three/drei';

function TurnLightsOn(){
  const ref = useRef();
  return(
    <group ref = {ref}>
    <spotLight position={[0, 15, 0]} angle={Math.PI/3} penumbra={1}/>
    <spotLight  position={[4, 0, 0]} angle={Math.PI/3} penumbra={1} rotation = {[45,0,0]} />
    <spotLight  position={[-4, 0, 0]} angle={Math.PI/3} penumbra={1} rotation = {[45,0,0]} />
    </group>
  )
}
export default function Model(props) {


  const { nodes, materials } = useGLTF("/unityLogo.gltf")
  const [hover, setHover] = useState(false)

  //const [group] = useBox(() => ({ mass: 4, ...props }))
  const group = useRef();

  return (
    <group  castShadow ref={group} {...props} dispose={null}
    onPointerOver={(e) => setHover(true)}
    onPointerOut={(e) => setHover(false)}
      >
      <mesh  castShadow geometry={nodes.Cube.geometry} material={materials['Material.001']} position={[0, 1.3, 0.3]} rotation = {[0.2,-0.8,0]} />
      {hover ? <TurnLightsOn/> : null}
    </group>
  )
}

useGLTF.preload('/unityLogo.gltf')
